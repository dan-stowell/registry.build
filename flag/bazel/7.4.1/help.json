[{"name":"distdir","short":"","type":"path","default":"may be used multiple times","description":"    Additional places to search for archives before accessing the network to \n    download them.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_repository_cache_hardlinks","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, the repository cache will hardlink the file in case of a cache hit, \n    rather than copying. This is intended to save disk space.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_repository_downloader_retries","short":"","type":"integer","default":"default: \"0\"","description":"    The maximum number of attempts to retry a download error. If set to 0, \n    retries are disabled.\n","tags":["experimental"],"sources":[]},{"name":"experimental_scale_timeouts","short":"","type":"double","default":"default: \"1.0\"","description":"    Scale all timeouts in Starlark repository rules by this factor. In this \n    way, external repositories can be made working on machines that are slower \n    than the rule author expected, without changing the source code\n","tags":["bazel_internal_configuration","experimental"],"sources":[]},{"name":"http_connector_attempts","short":"","type":"integer","default":"default: \"8\"","description":"    The maximum number of attempts for http downloads.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"http_connector_retry_max_timeout","short":"","type":"An immutable length of time.","default":"default: \"0s\"","description":"    The maximum timeout for http download retries. With a value of 0, no \n    timeout maximum is defined.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"http_max_parallel_downloads","short":"","type":"integer","default":"default: \"8\"","description":"    The maximum number parallel http downloads.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"http_timeout_scaling","short":"","type":"double","default":"default: \"1.0\"","description":"    Scale all timeouts related to http downloads by the given factor\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"incompatible_disable_native_repo_rules","short":"","type":"boolean","default":"default: \"false\"","description":"    If false, native repo rules can be used in WORKSPACE; otherwise, Starlark \n    repo rules must be used instead. Native repo rules include \n    local_repository, new_local_repository, local_config_platform, \n    android_sdk_repository, and android_ndk_repository.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"repository_cache","short":"","type":"path","default":"default: see description","description":"    Specifies the cache location of the downloaded values obtained during the \n    fetching of external repositories. An empty string as argument requests the \n    cache to be disabled, otherwise the default of \n    '\u003coutput_user_root\u003e/cache/repos/v1' is used\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"repository_disable_download","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, downloading using ctx.download{,_and_extract} is not allowed during \n    repository fetching. Note that network access is not completely disabled; \n    ctx.execute could still run an arbitrary executable that accesses the \n    Internet.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_ui_max_stdouterr_bytes","short":"","type":"integer in (-1)-1073741819 range","default":"default: \"1048576\"","description":"    The maximum size of the stdout / stderr files that will be printed to the \n    console. -1 implies no limit.\n","tags":["execution"],"sources":[]},{"name":"gc_thrashing_threshold","short":"","type":"integer in 0-100 range","default":"default: \"100\"","description":"    The percent of tenured space occupied (0-100) above which \n    GcThrashingDetector considers memory pressure events against its limits (--\n    gc_thrashing_limits). If set to 100, GcThrashingDetector is disabled.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"incompatible_remote_dangling_symlinks","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, symlinks uploaded to a remote or disk cache are allowed to \n    dangle.\n","tags":["execution","incompatible_change"],"sources":[]},{"name":"incompatible_remote_symlinks","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, Bazel will always upload symlinks as such to a remote or \n    disk cache. Otherwise, non-dangling relative symlinks (and only those) will \n    be uploaded as the file or directory they point to.\n","tags":["execution","incompatible_change"],"sources":[]},{"name":"incompatible_enable_proto_toolchain_resolution","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, proto lang rules define toolchains from rules_proto, rules_java, \n    rules_cc repositories.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"bep_maximum_open_remote_upload_files","short":"","type":"integer","default":"default: \"-1\"","description":"    Maximum number of open files allowed during BEP artifact upload.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_all","short":"","type":"","default":"","description":"    Downloads all remote outputs to the local machine. This flag is an alias \n    for --remote_download_outputs=all.\n      Expands to: --remote_download_outputs=all \n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_minimal","short":"","type":"","default":"","description":"    Does not download any remote build outputs to the local machine. This flag \n    is an alias for --remote_download_outputs=minimal.\n      Expands to: --remote_download_outputs=minimal \n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_outputs","short":"","type":"all, minimal or toplevel","default":"default: \"toplevel\"","description":"    If set to 'minimal' doesn't download any remote build outputs to the local \n    machine, except the ones required by local actions. If set to 'toplevel' \n    behaves like'minimal' except that it also downloads outputs of top level \n    targets to the local machine. Both options can significantly reduce build \n    times if network bandwidth is a bottleneck.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_symlink_template","short":"","type":"string","default":"default: \"\"","description":"    Instead of downloading remote build outputs to the local machine, create \n    symbolic links. The target of the symbolic links can be specified in the \n    form of a template string. This template string may contain {hash} and \n    {size_bytes} that expand to the hash of the object and the size in bytes, \n    respectively. These symbolic links may, for example, point to a FUSE file \n    system that loads objects from the CAS on demand.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_toplevel","short":"","type":"","default":"","description":"    Only downloads remote outputs of top level targets to the local machine. \n    This flag is an alias for --remote_download_outputs=toplevel.\n      Expands to: --remote_download_outputs=toplevel \n","tags":["affects_outputs"],"sources":[]},{"name":"repo_env","short":"","type":"'name=value' assignment with an optional value part","default":"may be used multiple times","description":"    Specifies additional environment variables to be available only for \n    repository rules. Note that repository rules see the full environment \n    anyway, but in this way configuration information can be passed to \n    repositories through options without invalidating the action graph.\n","tags":["action_command_lines"],"sources":[]},{"name":"check_bzl_visibility","short":"","type":"boolean","default":"default: \"true\"","description":"    If disabled, .bzl load visibility errors are demoted to warnings.\n","tags":["build_file_semantics"],"sources":[]},{"name":"enable_bzlmod","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, enables the Bzlmod dependency management system, taking precedence \n    over WORKSPACE. See https://bazel.build/docs/bzlmod for more information.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"enable_workspace","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, enables the legacy WORKSPACE system for external dependencies. See \n    https://bazel.build/external/overview for more information.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_action_resource_set","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, ctx.actions.run() and ctx.actions.run_shell() accept a \n    resource_set parameter for local execution. Otherwise it will default to \n    250 MB for memory and 1 cpu.\n","tags":["execution","build_file_semantics","experimental"],"sources":[]},{"name":"experimental_bzl_visibility","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, adds a `visibility()` function that .bzl files may call during \n    top-level evaluation to set their visibility for the purpose of load() \n    statements.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_cc_shared_library","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule attributes and Starlark API methods needed for the \n    rule cc_shared_library will be available\n","tags":["build_file_semantics","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_cc_static_library","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule attributes and Starlark API methods needed for the \n    rule cc_static_library will be available\n","tags":["build_file_semantics","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_disable_external_package","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the auto-generated //external package will not be available \n    anymore. Bazel will still be unable to parse the file 'external/BUILD', but \n    globs reaching into external/ from the unnamed package will work.\n","tags":["loading_and_analysis","loses_incremental_state","experimental"],"sources":[]},{"name":"experimental_enable_android_migration_apis","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables the APIs required to support the Android Starlark \n    migration.\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_enable_scl_dialect","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, .scl files may be used in load() statements.\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_google_legacy_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, exposes a number of experimental pieces of Starlark build \n    API pertaining to Google legacy code.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_isolated_extension_usages","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, enables the \u003ccode\u003eisolate\u003c/code\u003e parameter in the \u003ca href=\"https:\n    //bazel.build/rules/lib/globals/module#use_extension\"\n    \u003e\u003ccode\u003euse_extension\u003c/code\u003e\u003c/a\u003e function.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_java_library_export","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, experimental_java_library_export_do_not_use module is available.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"experimental_platforms_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables a number of platform-related Starlark APIs useful \n    for debugging.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_repo_remote_exec","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, repository_rule gains some remote execution capabilities.\n","tags":["build_file_semantics","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_sibling_repository_layout","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, non-main repositories are planted as symlinks to the main \n    repository in the execution root. That is, all repositories are direct \n    children of the $output_base/execution_root directory. This has the side \n    effect of freeing up $output_base/execution_root/__main__/external for the \n    real top-level 'external' directory.\n","tags":["action_command_lines","bazel_internal_configuration","\n      loading_and_analysis","loses_incremental_state","experimental"],"sources":[]},{"name":"incompatible_allow_tags_propagation","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, tags will be propagated from a target to the actions' \n    execution requirements; otherwise tags are not propagated. See https:\n    //github.com/bazelbuild/bazel/issues/8830 for details.\n","tags":["build_file_semantics","experimental"],"sources":[]},{"name":"incompatible_always_check_depset_elements","short":"","type":"boolean","default":"default: \"true\"","description":"    Check the validity of elements added to depsets, in all constructors. \n    Elements must be immutable, but historically the depset(direct=...) \n    constructor forgot to check. Use tuples instead of lists in depset \n    elements. See https://github.com/bazelbuild/bazel/issues/10313 for details.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_autoload_externally","short":"","type":"comma-separated set of options","default":"default: \"\"","description":"    A comma-separated list of rules (or other symbols) that were previously \n    part of Bazel and which are now to be retrieved from their respective \n    external repositories. This flag is intended to be used to facilitate \n    migration of rules out of Bazel. See also https://github.\n    com/bazelbuild/bazel/issues/23043.\n    A symbol that is autoloaded within a file behaves as if its built-into-\n    Bazel definition were replaced by its canonical new definition in an \n    external repository. For a BUILD file, this essentially means implicitly \n    adding a load() statement. For a .bzl file, it's either a load() statement \n    or a change to a field of the `native` object, depending on whether the \n    autoloaded symbol is a rule.\n    Bazel maintains a hardcoded list of all symbols that may be autoloaded; \n    only those symbols may appear in this flag. For each symbol, Bazel knows \n    the new definition location in an external repository, as well as a set of \n    special-cased repositories that must not autoload it to avoid creating \n    cycles.\n    A list item of \"+foo\" in this flag causes symbol foo to be autoloaded, \n    except in foo's exempt repositories, within which the Bazel-defined version \n    of foo is still available.\n    A list item of \"foo\" triggers autoloading as above, but the Bazel-defined \n    version of foo is not made available to the excluded repositories. This \n    ensures that foo's external repository does not depend on the old Bazel \n    implementation of foo\n    A list item of \"-foo\" does not trigger any autoloading, but makes the Bazel-\n    defined version of foo inaccessible throughout the workspace. This is used \n    to validate that the workspace is ready for foo's definition to be deleted \n    from Bazel.\n    If a symbol is not named in this flag then it continues to work as normal \n    -- no autoloading is done, nor is the Bazel-defined version suppressed. For \n    configuration see https://github.\n    com/bazelbuild/bazel/blob/master/src/main/java/com/google/devtools/build/lib/packages/AutoloadSymbols.\n    java As a shortcut also whole repository may be used, for example \n    +@rules_python will autoload all Python rules.\n","tags":["loses_incremental_state","build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_depset_for_java_output_source_jars","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer returns a list from java_info.java_output[0].\n    source_jars but returns a depset instead.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_depset_for_libraries_to_link_getter","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer returns a list from linking_context.\n    libraries_to_link but returns a depset instead.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_disable_objc_library_transition","short":"","type":"boolean","default":"default: \"true\"","description":"    Disable objc_library's custom transition and inherit from the top level \n    target instead\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_disable_starlark_host_transitions","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule attributes cannot set 'cfg = \"host\"'. Rules should set \n    'cfg = \"exec\"' instead.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_disable_target_provider_fields","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disable the ability to access providers on 'target' objects \n    via field syntax. Use provider-key syntax instead. For example, instead of \n    using `ctx.attr.dep.my_info` to access `my_info` from inside a rule \n    implementation function, use `ctx.attr.dep[MyInfo]`. See https://github.\n    com/bazelbuild/bazel/issues/9014 for details.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_disallow_empty_glob","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the default value of the `allow_empty` argument of glob() \n    is False.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_disallow_struct_provider_syntax","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule implementation functions may not return a struct. They \n    must instead return a list of provider instances.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_enable_deprecated_label_apis","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, certain deprecated APIs (native.repository_name, Label.\n    workspace_name, Label.relative) can be used.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"incompatible_existing_rules_immutable_view","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, native.existing_rule and native.existing_rules return \n    lightweight immutable view objects instead of mutable dicts.\n","tags":["build_file_semantics","loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_fail_on_unknown_attributes","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, targets that have unknown attributes set to None fail.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_fix_package_group_reporoot_syntax","short":"","type":"boolean","default":"default: \"true\"","description":"    In package_group's `packages` attribute, changes the meaning of the value \n    \"//...\" to refer to all packages in the current repository instead of all \n    packages in any repository. You can use the special value \"public\" in place \n    of \"//...\" to obtain the old behavior. This flag requires that --\n    incompatible_package_group_has_public_syntax also be enabled.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_java_common_parameters","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the output_jar, and host_javabase parameters in \n    pack_sources and host_javabase in compile will all be removed.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_merge_fixed_and_default_shell_env","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, actions registered with ctx.actions.run and ctx.actions.\n    run_shell with both 'env' and 'use_default_shell_env = True' specified will \n    use an environment obtained from the default shell environment by \n    overriding with the values passed in to 'env'. If disabled, the value of \n    'env' is completely ignored in this case.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_new_actions_api","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the API to create actions is only available on `ctx.\n    actions`, not on `ctx`.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_no_attr_license","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, disables the function `attr.license`.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_no_implicit_file_export","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, (used) source files are are package private unless exported \n    explicitly. See https://github.\n    com/bazelbuild/proposals/blob/master/designs/2019-10-24-file-visibility.md\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_no_implicit_watch_label","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, then methods on \u003ccode\u003erepository_ctx\u003c/code\u003e that are passed a \n    Label will no longer automatically watch the file under that label for \n    changes even if \u003ccode\u003ewatch = \"no\"\u003c/code\u003e, and \u003ccode\u003erepository_ctx.\n    path\u003c/code\u003e no longer causes the returned path to be watched. Use \n    \u003ccode\u003erepository_ctx.watch\u003c/code\u003e instead.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_no_rule_outputs_param","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disables the `outputs` parameter of the `rule()` Starlark \n    function.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_objc_provider_remove_linking_info","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the ObjcProvider's APIs for linking info will be removed.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_package_group_has_public_syntax","short":"","type":"boolean","default":"default: \"true\"","description":"    In package_group's `packages` attribute, allows writing \"public\" or \n    \"private\" to refer to all packages or no packages respectively.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_require_linker_input_cc_api","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, rule create_linking_context will require linker_inputs \n    instead of libraries_to_link. The old getters of linking_context will also \n    be disabled and just linker_inputs will be available.\n","tags":["build_file_semantics","loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_run_shell_command_string","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the command parameter of actions.run_shell will only accept \n    string\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_stop_exporting_language_modules","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, certain language-specific modules (such as `cc_common`) are \n    unavailable in user .bzl files and may only be called from their respective \n    rules repositories.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_struct_has_no_methods","short":"","type":"boolean","default":"default: \"false\"","description":"    Disables the to_json and to_proto methods of struct, which pollute the \n    struct field namespace. Instead, use json.encode or json.encode_indent for \n    JSON, or proto.encode_text for textproto.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_top_level_aspects_require_providers","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the top level aspect will honor its required providers and \n    only run on top level targets whose rules' advertised providers satisfy the \n    required providers of the aspect.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_unambiguous_label_stringification","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel will stringify the label @//foo:bar to @//foo:bar, instead \n    of //foo:bar. This only affects the behavior of str(), the % operator, and \n    so on; the behavior of repr() is unchanged. See https://github.\n    com/bazelbuild/bazel/issues/15916 for more information.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_use_cc_configure_from_rules_cc","short":"","type":"boolean","default":"default: \"false\"","description":"    When true, Bazel will no longer allow using cc_configure from @bazel_tools. \n    Please see https://github.com/bazelbuild/bazel/issues/10134 for details and \n    migration instructions.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_use_plus_in_repo_names","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, uses the plus sign (+) as the separator in canonical repo names, \n    instead of the tilde (~). This is to address severe performance issues on \n    Windows; see https://github.com/bazelbuild/bazel/issues/22865 for more \n    information.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"incompatible_visibility_private_attributes_at_definition","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the visibility of private rule attributes is checked with \n    respect to the rule definition, falling back to rule usage if not visible.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"max_computation_steps","short":"","type":"long integer","default":"default: \"0\"","description":"    The maximum number of Starlark computation steps that may be executed by a \n    BUILD file (zero means no limit).\n","tags":["build_file_semantics"],"sources":[]},{"name":"nested_set_depth_limit","short":"","type":"integer","default":"default: \"3500\"","description":"    The maximum depth of the graph internal to a depset (also known as \n    NestedSet), above which the depset() constructor will fail.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"repositories_without_autoloads","short":"","type":"comma-separated set of options","default":"default: \"\"","description":"    A list of additional repositories (beyond the hardcoded ones Bazel knows \n    about) where autoloads are not to be added. This should typically contain \n    repositories that are transitively depended on by a repository that may be \n    loaded automatically (and which can therefore potentially create a cycle).\n","tags":["loses_incremental_state","build_file_semantics","incompatible_change"],"sources":[]},{"name":"allow_yanked_versions","short":"","type":"string","default":"may be used multiple times","description":"    Specified the module versions in the form of `\u003cmodule1\u003e@\u003cversion1\u003e,\n    \u003cmodule2\u003e@\u003cversion2\u003e` that will be allowed in the resolved dependency graph \n    even if they are declared yanked in the registry where they come from (if \n    they are not coming from a NonRegistryOverride). Otherwise, yanked versions \n    will cause the resolution to fail. You can also define allowed yanked \n    version with the `BZLMOD_ALLOW_YANKED_VERSIONS` environment variable. You \n    can disable this check by using the keyword 'all' (not recommended).\n","tags":["loading_and_analysis"],"sources":[]},{"name":"check_bazel_compatibility","short":"","type":"error, warning or off","default":"default: \"error\"","description":"    Check bazel version compatibility of Bazel modules. Valid values are \n    `error` to escalate it to a resolution failure, `off` to disable the check, \n    or `warning` to print a warning when mismatch detected.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"check_direct_dependencies","short":"","type":"off, warning or error","default":"default: \"warning\"","description":"    Check if the direct `bazel_dep` dependencies declared in the root module \n    are the same versions you get in the resolved dependency graph. Valid \n    values are `off` to disable the check, `warning` to print a warning when \n    mismatch detected or `error` to escalate it to a resolution failure.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"ignore_dev_dependency","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, Bazel ignores `bazel_dep` and `use_extension` declared as \n    `dev_dependency` in the MODULE.bazel of the root module. Note that, those \n    dev dependencies are always ignored in the MODULE.bazel if it's not the \n    root module regardless of the value of this flag.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"lockfile_mode","short":"","type":"off, update, refresh or error","default":"default: \"update\"","description":"    Specifies how and whether or not to use the lockfile. Valid values are \n    `update` to use the lockfile and update it if there are changes, `refresh` \n    to additionally refresh mutable information (yanked versions and previously \n    missing modules) from remote registries from time to time, `error` to use \n    the lockfile but throw an error if it's not up-to-date, or `off` to neither \n    read from or write to the lockfile.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"override_module","short":"","type":"equals-separated mapping of module name to path","default":"may be used multiple times","description":"Override a module with a local path in the form of \u003cmodule name\u003e=\u003cpath\u003e. If the given path is an absolute path, it will be used as it is. If the given path is a relative path, it is relative to the current working directory. If the given path starts with '%workspace%, it is relative to the workspace root, which is the output of `bazel info workspace`. If the given path is empty, then remove any previous overrides.","tags":[],"sources":[]},{"name":"registry","short":"","type":"string","default":"may be used multiple times","description":"    Specifies the registries to use to locate Bazel module dependencies. The \n    order is important: modules will be looked up in earlier registries first, \n    and only fall back to later registries when they're missing from the \n    earlier ones.\n","tags":["changes_inputs"],"sources":[]},{"name":"vendor_dir","short":"","type":"path","default":"default: see description","description":"    Specifies the directory that should hold the external repositories in \n    vendor mode, whether for the purpose of fetching them into it or using them \n    while building. The path can be specified as either an absolute path or a \n    path relative to the workspace directory.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"gc_thrashing_limits","short":"","type":"comma separated pairs of \u003cperiod\u003e:\u003ccount\u003e","default":"default: \"1s:2,20s:3,1m:5\"","description":"    Limits which, if reached, cause GcThrashingDetector to crash Bazel with an \n    OOM. Each limit is specified as \u003cperiod\u003e:\u003ccount\u003e where period is a duration \n    and count is a positive integer. If more than --gc_thrashing_threshold \n    percent of tenured space (old gen heap) remains occupied after \u003ccount\u003e \n    consecutive full GCs within \u003cperiod\u003e, an OOM is triggered. Multiple limits \n    can be specified separated by commas.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"heuristically_drop_nodes","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, Blaze will remove FileState and DirectoryListingState nodes after \n    related File and DirectoryListing node is done to save memory. We expect \n    that it is less likely that these nodes will be needed again. If so, the \n    program will re-evaluate them.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"incompatible_do_not_split_linking_cmdline","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer modifies command line flags used for linking, \n    and also doesn't selectively decide which flags go to the param file and \n    which don't.  See https://github.com/bazelbuild/bazel/issues/7670 for \n    details.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"keep_state_after_build","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will discard the inmemory state from this build when the \n    build finishes. Subsequent builds will not have any incrementality with \n    respect to this one.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"skyframe_high_water_mark_full_gc_drops_per_invocation","short":"","type":"integer, \u003e= 0","default":"default: \"2147483647\"","description":"    Flag for advanced configuration of Bazel's internal Skyframe engine. If \n    Bazel detects its retained heap percentage usage exceeds the threshold set \n    by --skyframe_high_water_mark_threshold, when a full GC event occurs, it \n    will drop unnecessary temporary Skyframe state, up to this many times per \n    invocation. Defaults to Integer.MAX_VALUE; effectively unlimited. Zero \n    means that full GC events will never trigger drops. If the limit is \n    reached, Skyframe state will no longer be dropped when a full GC event \n    occurs and that retained heap percentage threshold is exceeded.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"skyframe_high_water_mark_minor_gc_drops_per_invocation","short":"","type":"integer, \u003e= 0","default":"default: \"2147483647\"","description":"    Flag for advanced configuration of Bazel's internal Skyframe engine. If \n    Bazel detects its retained heap percentage usage exceeds the threshold set \n    by --skyframe_high_water_mark_threshold, when a minor GC event occurs, it \n    will drop unnecessary temporary Skyframe state, up to this many times per \n    invocation. Defaults to Integer.MAX_VALUE; effectively unlimited. Zero \n    means that minor GC events will never trigger drops. If the limit is \n    reached, Skyframe state will no longer be dropped when a minor GC event \n    occurs and that retained heap percentage threshold is exceeded.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"skyframe_high_water_mark_threshold","short":"","type":"integer","default":"default: \"85\"","description":"    Flag for advanced configuration of Bazel's internal Skyframe engine. If \n    Bazel detects its retained heap percentage usage is at least this \n    threshold, it will drop unnecessary temporary Skyframe state. Tweaking this \n    may let you mitigate wall time impact of GC thrashing, when the GC \n    thrashing is (i) caused by the memory usage of this temporary state and \n    (ii) more costly than reconstituting the state when it is needed.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"track_incremental_state","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will not persist data that allows for invalidation and re-\n    evaluation on incremental builds in order to save memory on this build. \n    Subsequent builds will not have any incrementality with respect to this \n    one. Usually you will want to specify --batch when setting this to false.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"announce_rc","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to announce rc options.\n","tags":["affects_outputs"],"sources":[]},{"name":"attempt_to_print_relative_paths","short":"","type":"boolean","default":"default: \"false\"","description":"    When printing the location part of messages, attempt to use a path relative \n    to the workspace directory or one of the directories specified by --\n    package_path.\n","tags":["terminal_output"],"sources":[]},{"name":"bes_backend","short":"","type":"string","default":"default: \"\"","description":"    Specifies the build event service (BES) backend endpoint in the form \n    [SCHEME://]HOST[:PORT]. The default is to disable BES uploads. Supported \n    schemes are grpc and grpcs (grpc with TLS enabled). If no scheme is \n    provided, Bazel assumes grpcs.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_check_preceding_lifecycle_events","short":"","type":"boolean","default":"default: \"false\"","description":"    Sets the field check_preceding_lifecycle_events_present on \n    PublishBuildToolEventStreamRequest which tells BES to check whether it \n    previously received InvocationAttemptStarted and BuildEnqueued events \n    matching the current tool event.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Specify a header in NAME=VALUE form that will be included in BES requests. \n    Multiple headers can be passed by specifying the flag multiple times. \n    Multiple values for the same name will be converted to a comma-separated \n    list.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_instance_name","short":"","type":"string","default":"default: see description","description":"    Specifies the instance name under which the BES will persist uploaded BEP. \n    Defaults to null.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_keywords","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Specifies a list of notification keywords to be added the default set of \n    keywords published to BES (\"command_name=\u003ccommand_name\u003e \", \n    \"protocol_name=BEP\"). Defaults to none.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_lifecycle_events","short":"","type":"boolean","default":"default: \"true\"","description":"    Specifies whether to publish BES lifecycle events. (defaults to 'true').\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_oom_finish_upload_timeout","short":"","type":"An immutable length of time.","default":"default: \"10m\"","description":"    Specifies how long bazel should wait for the BES/BEP upload to complete \n    while OOMing. This flag ensures termination when the JVM is severely GC \n    thrashing and cannot make progress on any user thread.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"bes_outerr_buffer_size","short":"","type":"integer","default":"default: \"10240\"","description":"    Specifies the maximal size of stdout or stderr to be buffered in BEP, \n    before it is reported as a progress event. Individual writes are still \n    reported in a single event, even if larger than the specified value up to --\n    bes_outerr_chunk_size.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_outerr_chunk_size","short":"","type":"integer","default":"default: \"1048576\"","description":"    Specifies the maximal size of stdout or stderr to be sent to BEP in a \n    single message.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_proxy","short":"","type":"string","default":"default: see description","description":"Connect to the Build Event Service through a proxy. Currently this flag can only be used to configure a Unix domain socket (unix:/path/to/socket).","tags":[],"sources":[]},{"name":"bes_results_url","short":"","type":"string","default":"default: \"\"","description":"    Specifies the base URL where a user can view the information streamed to \n    the BES backend. Bazel will output the URL appended by the invocation id to \n    the terminal.\n","tags":["terminal_output"],"sources":[]},{"name":"bes_system_keywords","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Specifies a list of notification keywords to be included directly, without \n    the \"user_keyword=\" prefix included for keywords supplied via --\n    bes_keywords. Intended for Build service operators that set --\n    bes_lifecycle_events=false and include keywords when calling \n    PublishLifecycleEvent. Build service operators using this flag should \n    prevent users from overriding the flag value.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_timeout","short":"","type":"An immutable length of time.","default":"default: \"0s\"","description":"    Specifies how long bazel should wait for the BES/BEP upload to complete \n    after the build and tests have finished. A valid timeout is a natural \n    number followed by a unit: Days (d), hours (h), minutes (m), seconds (s), \n    and milliseconds (ms). The default value is '0' which means that there is \n    no timeout.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_upload_mode","short":"","type":"wait_for_upload_complete, nowait_for_upload_complete or fully_async","default":"default: \"wait_for_upload_complete\"","description":"    Specifies whether the Build Event Service upload should block the build \n    completion or should end the invocation immediately and finish the upload \n    in the background. Either 'wait_for_upload_complete' (default), \n    'nowait_for_upload_complete', or 'fully_async'.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"build_event_binary_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a varint delimited binary representation of \n    representation of the build event protocol to that file. This option \n    implies --bes_upload_mode=wait_for_upload_complete.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the binary file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file_upload_mode","short":"","type":"wait_for_upload_complete, nowait_for_upload_complete or fully_async","default":"default: \"wait_for_upload_complete\"","description":"    Specifies whether the Build Event Service upload for --\n    build_event_binary_file should block the build completion or should end the \n    invocation immediately and finish the upload in the background. Either \n    'wait_for_upload_complete' (default), 'nowait_for_upload_complete', or \n    'fully_async'.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"build_event_json_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a JSON serialisation of the build event protocol to \n    that file. This option implies --bes_upload_mode=wait_for_upload_complete.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_json_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the json file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_json_file_upload_mode","short":"","type":"wait_for_upload_complete, nowait_for_upload_complete or fully_async","default":"default: \"wait_for_upload_complete\"","description":"    Specifies whether the Build Event Service upload for --\n    build_event_json_file should block the build completion or should end the \n    invocation immediately and finish the upload in the background. Either \n    'wait_for_upload_complete' (default), 'nowait_for_upload_complete', or \n    'fully_async'.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"build_event_max_named_set_of_file_entries","short":"","type":"integer","default":"default: \"-1\"","description":"    The maximum number of entries for a single named_set_of_files event; values \n    smaller than 2 are ignored and no event splitting is performed. This is \n    intended for limiting the maximum event size in the build event protocol, \n    although it does not directly control event size. The total event size is a \n    function of the structure of the set as well as the file and uri lengths, \n    which may in turn depend on the hash function.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_publish_all_actions","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether all actions should be published.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a textual representation of the build event protocol to \n    that file\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the text file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file_upload_mode","short":"","type":"wait_for_upload_complete, nowait_for_upload_complete or fully_async","default":"default: \"wait_for_upload_complete\"","description":"    Specifies whether the Build Event Service upload for --\n    build_event_text_file should block the build completion or should end the \n    invocation immediately and finish the upload in the background. Either \n    'wait_for_upload_complete' (default), 'nowait_for_upload_complete', or \n    'fully_async'.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"experimental_announce_profile_path","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, adds the JSON profile path to the log.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_bep_target_summary","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to publish TargetSummary events.","tags":[],"sources":[]},{"name":"experimental_build_event_expand_filesets","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, expand Filesets in the BEP when presenting output files.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_build_event_fully_resolve_fileset_symlinks","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, fully resolve relative Fileset symlinks in the BEP when presenting \n    output files. Requires --experimental_build_event_expand_filesets.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_build_event_upload_max_retries","short":"","type":"integer","default":"default: \"4\"","description":"    The maximum number of times Bazel should retry uploading a build event.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_build_event_upload_retry_minimum_delay","short":"","type":"An immutable length of time.","default":"default: \"1s\"","description":"    Initial, minimum delay for exponential backoff retries when BEP upload \n    fails. (exponent: 1.6)\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_build_event_upload_strategy","short":"","type":"string","default":"default: see description","description":"    Selects how to upload artifacts referenced in the build event protocol.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_collect_load_average_in_profiler","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, the profiler collects the system's overall load average.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_collect_pressure_stall_indicators","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the profiler collects the Linux PSI data.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_collect_resource_estimation","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the profiler collects CPU and memory usage estimation for local \n    actions.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_collect_system_network_usage","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the profiler collects the system's network usage.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_collect_worker_data_in_profiler","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the profiler collects worker's aggregated resource data.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_command_profile","short":"","type":"cpu, wall, alloc or lock","default":"default: see description","description":"Records a Java Flight Recorder profile for the duration of the command. One of the supported profiling event types (cpu, wall, alloc or lock) must be given as an argument. The profile is written to a file named after the event type under the output base directory. The syntax and semantics of this flag might change in the future to support additional profile types or output formats; use at your own risk.","tags":[],"sources":[]},{"name":"experimental_profile_additional_tasks","short":"","type":"phase, action, action_check, action_lock, action_release, action_update, action_complete, bzlmod, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, remote_process_time, remote_queue, remote_setup, fetch, local_process_time, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, action_cache_counts, local_cpu_usage, system_cpu_usage, cpu_usage_estimation, local_memory_usage, system_memory_usage, memory_usage_estimation, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper, pressure_stall_io, pressure_stall_memory, conflict_check, dynamic_lock, repository_fetch, repository_vendor or unknown","default":"may be used multiple times","description":"    Specifies additional profile tasks to be included in the profile.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_profile_include_primary_output","short":"","type":"boolean","default":"default: \"false\"","description":"    Includes the extra \"out\" attribute in action events that contains the exec \n    path to the action's primary output.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_profile_include_target_label","short":"","type":"boolean","default":"default: \"false\"","description":"    Includes target label in action events' JSON profile data.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_record_metrics_for_all_mnemonics","short":"","type":"boolean","default":"default: \"false\"","description":"By default the number of action types is limited to the 20 mnemonics with the largest number of executed actions. Setting this option will write statistics for all mnemonics.","tags":[],"sources":[]},{"name":"experimental_run_bep_event_include_residue","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to include the command-line residue in run build events which could \n    contain the residue. By default, the residue is not included in run command \n    build events that could contain the residue.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_stream_log_file_uploads","short":"","type":"boolean","default":"default: \"false\"","description":"    Stream log file uploads directly to the remote storage rather than writing \n    them to disk.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_workspace_rules_log_file","short":"","type":"path","default":"default: see description","description":"Log certain Workspace Rules events into this file as delimited WorkspaceEvent protos.","tags":[],"sources":[]},{"name":"generate_json_trace_profile","short":"","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"    If enabled, Bazel profiles the build and writes a JSON-format profile into \n    a file in the output base. View profile by loading into chrome://tracing. \n    By default Bazel writes the profile for all build-like commands and query.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"heap_dump_on_oom","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to manually output a heap dump if an OOM is thrown (including \n    manual OOMs due to reaching --gc_thrashing_limits). The dump will be \n    written to \u003coutput_base\u003e/\u003cinvocation_id\u003e.heapdump.hprof. This option \n    effectively replaces -XX:+HeapDumpOnOutOfMemoryError, which has no effect \n    for manual OOMs.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"help_verbosity","short":"","type":"long, medium or short","default":"default: \"medium\"","description":"    Select the verbosity of the help command.\n","tags":["affects_outputs","terminal_output"],"sources":[]},{"name":"legacy_important_outputs","short":"","type":"boolean","default":"default: \"true\"","description":"    Use this to suppress generation of the legacy important_outputs field in \n    the TargetComplete event. important_outputs are required for Bazel to \n    ResultStore integration.\n","tags":["affects_outputs"],"sources":[]},{"name":"logging","short":"","type":"0 \u003c= an integer \u003c= 6","default":"default: \"3\"","description":"    The logging level.\n","tags":["affects_outputs"],"sources":[]},{"name":"long","short":"l","type":"","default":"","description":"    Show full description of each option, instead of just its name.\n      Expands to: --help_verbosity=long \n","tags":["affects_outputs","terminal_output"],"sources":[]},{"name":"memory_profile","short":"","type":"path","default":"default: see description","description":"    If set, write memory usage data to the specified file at phase ends and \n    stable heap to master log at end of build.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"memory_profile_stable_heap_parameters","short":"","type":"integers, separated by a comma expected in pairs","default":"default: \"1,0\"","description":"    Tune memory profile's computation of stable heap at end of build. Should be \n    and even number of  integers separated by commas. In each pair the first \n    integer is the number of GCs to perform. The second integer in each pair is \n    the number of seconds to wait between GCs. Ex: 2,4,4,0 would 2 GCs with a \n    4sec pause, followed by 4 GCs with zero second pause\n","tags":["bazel_monitoring"],"sources":[]},{"name":"profile","short":"","type":"path","default":"default: see description","description":"    If set, profile Bazel and write data to the specified file. Use bazel \n    analyze-profile to analyze the profile.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"record_full_profiler_data","short":"","type":"boolean","default":"default: \"false\"","description":"    By default, Bazel profiler will record only aggregated data for fast but \n    numerous events (such as statting the file). If this option is enabled, \n    profiler will record each event - resulting in more precise profiling data \n    but LARGE performance hit. Option only has effect if --profile used as well.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"remote_print_execution_messages","short":"","type":"failure, success or all","default":"default: \"failure\"","description":"    Choose when to print remote execution messages. Valid values are `failure`, \n    to print only on failures, `success` to print only on successes and `all` \n    to print always.\n","tags":["terminal_output"],"sources":[]},{"name":"short","short":"","type":"","default":"","description":"    Show only the names of the options, not their types or meanings.\n      Expands to: --help_verbosity=short \n","tags":["affects_outputs","terminal_output"],"sources":[]},{"name":"slim_profile","short":"","type":"boolean","default":"default: \"true\"","description":"    Slims down the size of the JSON profile by merging events if the profile \n    gets  too large.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"starlark_cpu_profile","short":"","type":"string","default":"default: \"\"","description":"    Writes into the specified file a pprof profile of CPU usage by all Starlark \n    threads.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"tool_tag","short":"","type":"string","default":"default: \"\"","description":"    A tool name to attribute this Bazel invocation to.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"ui_event_filters","short":"","type":"Convert list of comma separated event kind to list of filters","default":"may be used multiple times","description":"    Specifies which events to show in the UI. It is possible to add or remove \n    events to the default ones using leading +/-, or override the default set \n    completely with direct assignment. The set of supported event kinds include \n    INFO, DEBUG, ERROR and more.\n","tags":["terminal_output"],"sources":[]},{"name":"experimental_resolved_file_instead_of_workspace","short":"","type":"string","default":"default: \"\"","description":"    If non-empty read the specified resolved file instead of the WORKSPACE file\n","tags":["changes_inputs"],"sources":[]},{"name":"experimental_circuit_breaker_strategy","short":"","type":"failure","default":"default: see description","description":"    Specifies the strategy for the circuit breaker to use. Available strategies \n    are \"failure\". On invalid value for the option the behavior same as the \n    option is not set.\n","tags":["execution"],"sources":[]},{"name":"experimental_downloader_config","short":"","type":"string","default":"default: see description","description":"Specify a file to configure the remote downloader with. This file consists of lines, each of which starts with a directive (`allow`, `block` or `rewrite`) followed by either a host name (for `allow` and `block`) or two patterns, one to match against, and one to use as a substitute URL, with back-references starting from `$1`. It is possible for multiple `rewrite` directives for the same URL to be give, and in this case multiple URLs will be returned.","tags":[],"sources":[]},{"name":"experimental_guard_against_concurrent_changes","short":"","type":"boolean","default":"default: \"false\"","description":"Turn this off to disable checking the ctime of input files of an action before uploading it to a remote cache. There may be cases where the Linux kernel delays writing of files, which could cause false positives.","tags":[],"sources":[]},{"name":"experimental_remote_cache_async","short":"","type":"boolean","default":"default: \"false\"","description":"If true, remote cache I/O will happen in the background instead of taking place as the part of a spawn.","tags":[],"sources":[]},{"name":"experimental_remote_cache_compression_threshold","short":"","type":"integer","default":"default: \"0\"","description":"The minimum blob size required to compress/decompress with zstd. Ineffectual unless --remote_cache_compression is set.","tags":[],"sources":[]},{"name":"experimental_remote_cache_lease_extension","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, Bazel will extend the lease for outputs of remote actions during the build by sending `FindMissingBlobs` calls periodically to remote cache. The frequency is based on the value of `--experimental_remote_cache_ttl`.","tags":[],"sources":[]},{"name":"experimental_remote_cache_ttl","short":"","type":"An immutable length of time.","default":"default: \"3h\"","description":"    The guaranteed minimal TTL of blobs in the remote cache after their digests \n    are recently referenced e.g. by an ActionResult or FindMissingBlobs. Bazel \n    does several optimizations based on the blobs' TTL e.g. doesn't repeatedly \n    call GetActionResult in an incremental build. The value should be set \n    slightly less than the real TTL since there is a gap between when the \n    server returns the digests and when Bazel receives them.\n","tags":["execution"],"sources":[]},{"name":"experimental_remote_capture_corrupted_outputs","short":"","type":"path","default":"default: see description","description":"A path to a directory where the corrupted outputs will be captured to.","tags":[],"sources":[]},{"name":"experimental_remote_discard_merkle_trees","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, discard in-memory copies of the input root's Merkle tree and associated input mappings during calls to GetActionResult() and Execute(). This reduces memory usage significantly, but does require Bazel to recompute them upon remote cache misses and retries.","tags":[],"sources":[]},{"name":"experimental_remote_downloader","short":"","type":"string","default":"default: see description","description":"A Remote Asset API endpoint URI, to be used as a remote download proxy. The supported schemas are grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. See: https://github.com/bazelbuild/remote-apis/blob/master/build/bazel/remote/asset/v1/remote_asset.proto","tags":[],"sources":[]},{"name":"experimental_remote_downloader_local_fallback","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to fall back to the local downloader if remote downloader fails.","tags":[],"sources":[]},{"name":"experimental_remote_execution_keepalive","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to use keepalive for remote execution calls.","tags":[],"sources":[]},{"name":"experimental_remote_failure_rate_threshold","short":"","type":"integer in 0-100 range","default":"default: \"10\"","description":"    Sets the allowed number of failure rate in percentage for a specific time \n    window after which it stops calling to the remote cache/executor. By \n    default the value is 10. Setting this to 0 means no limitation.\n","tags":["execution"],"sources":[]},{"name":"experimental_remote_failure_window_interval","short":"","type":"An immutable length of time.","default":"default: \"60s\"","description":"    The interval in which the failure rate of the remote requests are computed. \n    On zero or negative value the failure duration is computed the whole \n    duration of the execution.Following units can be used: Days (d), hours (h), \n    minutes (m), seconds (s), and milliseconds (ms). If the unit is omitted, \n    the value is interpreted as seconds.\n","tags":["execution"],"sources":[]},{"name":"experimental_remote_mark_tool_inputs","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, Bazel will mark inputs as tool inputs for the remote executor. This can be used to implement remote persistent workers.","tags":[],"sources":[]},{"name":"experimental_remote_merkle_tree_cache","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, Merkle tree calculations will be memoized to improve the remote cache hit checking speed. The memory foot print of the cache is controlled by --experimental_remote_merkle_tree_cache_size.","tags":[],"sources":[]},{"name":"experimental_remote_merkle_tree_cache_size","short":"","type":"long integer","default":"default: \"1000\"","description":"The number of Merkle trees to memoize to improve the remote cache hit checking speed. Even though the cache is automatically pruned according to Java's handling of soft references, out-of-memory errors can occur if set too high. If set to 0  the cache size is unlimited. Optimal value varies depending on project's size. Default to 1000.","tags":[],"sources":[]},{"name":"experimental_remote_output_service","short":"","type":"string","default":"default: see description","description":"HOST or HOST:PORT of a remote output service endpoint. The supported schemas are grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. Specify grpc:// or unix: schema to disable TLS.","tags":[],"sources":[]},{"name":"experimental_remote_output_service_output_path_prefix","short":"","type":"string","default":"default: \"\"","description":"The path under which the contents of output directories managed by the --experimental_remote_output_service are placed. The actual output directory used by a build will be a descendant of this path and determined by the output service.","tags":[],"sources":[]},{"name":"experimental_remote_require_cached","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, enforce that all actions that can run remotely are cached, or else fail the build. This is useful to troubleshoot non-determinism issues as it allows checking whether actions that should be cached are actually cached without spuriously injecting new results into the cache.","tags":[],"sources":[]},{"name":"experimental_remote_scrubbing_config","short":"","type":"Converts to a Scrubber","default":"default: see description","description":"Enables remote cache key scrubbing with the supplied configuration file, which must be a protocol buffer in text format (see src/main/protobuf/remote_scrubbing.proto).This feature is intended to facilitate sharing a remote/disk cache between actions executing on different platforms but targeting the same platform. It should be used with extreme care, as improper settings may cause accidental sharing of cache entries and result in incorrect builds.Scrubbing does not affect how an action is executed, only how its remote/disk cache key is computed for the purpose of retrieving or storing an action result. Scrubbed actions are incompatible with remote execution, and will always be executed locally instead.Modifying the scrubbing configuration does not invalidate outputs present in the local filesystem or internal caches; a clean build is required to reexecute affected actions.In order to successfully use this feature, you likely want to set a custom --host_platform together with --experimental_platform_in_output_dir (to normalize output prefixes) and --incompatible_strict_action_env (to normalize environment variables).","tags":[],"sources":[]},{"name":"experimental_worker_for_repo_fetching","short":"","type":"off, platform, virtual or auto","default":"default: \"auto\"","description":"The threading mode to use for repo fetching. If set to 'off', no worker thread is used, and the repo fetching is subject to restarts. Otherwise, uses a virtual worker thread.","tags":[],"sources":[]},{"name":"incompatible_remote_build_event_upload_respect_no_cache","short":"","type":"boolean","default":"default: \"false\"","description":"Deprecated. No-op. Use --remote_build_event_upload=minimal instead.","tags":[],"sources":[]},{"name":"incompatible_remote_downloader_send_all_headers","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether to send all values of a multi-valued header to the remote \n    downloader instead of just the first.\n","tags":["incompatible_change"],"sources":[]},{"name":"incompatible_remote_output_paths_relative_to_input_root","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, output paths are relative to input root instead of working \n    directory.\n","tags":["incompatible_change"],"sources":[]},{"name":"incompatible_remote_results_ignore_disk","short":"","type":"boolean","default":"default: \"true\"","description":"    No-op\n","tags":["incompatible_change"],"sources":[]},{"name":"remote_accept_cached","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to accept remotely cached action results.","tags":[],"sources":[]},{"name":"remote_build_event_upload","short":"","type":"all or minimal","default":"default: \"minimal\"","description":"If set to 'all', all local outputs referenced by BEP are uploaded to remote cache.If set to 'minimal', local outputs referenced by BEP are not uploaded to the remote cache, except for files that are important to the consumers of BEP (e.g. test logs and timing profile). bytestream:// scheme is always used for the uri of files even if they are missing from remote cache.Default to 'minimal'.","tags":[],"sources":[]},{"name":"remote_bytestream_uri_prefix","short":"","type":"string","default":"default: see description","description":"The hostname and instance name to be used in bytestream:// URIs that are written into build event streams. This option can be set when builds are performed using a proxy, which causes the values of --remote_executor and --remote_instance_name to no longer correspond to the canonical name of the remote execution service. When not set, it will default to \"${hostname}/${instance_name}\".","tags":[],"sources":[]},{"name":"remote_cache","short":"","type":"string","default":"default: see description","description":"A URI of a caching endpoint. The supported schemas are http, https, grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. Specify grpc://, http:// or unix: schema to disable TLS. See https://bazel.build/remote/caching","tags":[],"sources":[]},{"name":"remote_cache_compression","short":"","type":"boolean","default":"default: \"false\"","description":"If enabled, compress/decompress cache blobs with zstd when their size is at least --experimental_remote_cache_compression_threshold.","tags":[],"sources":[]},{"name":"remote_cache_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in cache requests: --remote_cache_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[],"sources":[]},{"name":"remote_default_exec_properties","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Set the default exec properties to be used as the remote execution platform \n    if an execution platform does not already set exec_properties.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_default_platform_properties","short":"","type":"string","default":"default: \"\"","description":"Set the default platform properties to be set for the remote execution API, if the execution platform does not already set remote_execution_properties. This value will also be used if the host platform is selected as the execution platform for remote execution.","tags":[],"sources":[]},{"name":"remote_download_regex","short":"","type":"valid Java regular expression","default":"may be used multiple times","description":"    Force remote build outputs whose path matches this pattern to be \n    downloaded, irrespective of --remote_download_outputs. Multiple patterns \n    may be specified by repeating this flag.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_downloader_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in remote downloader requests: --remote_downloader_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[],"sources":[]},{"name":"remote_exec_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in execution requests: --remote_exec_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[],"sources":[]},{"name":"remote_execution_priority","short":"","type":"integer","default":"default: \"0\"","description":"The relative priority of actions to be executed remotely. The semantics of the particular priority values are server-dependent.","tags":[],"sources":[]},{"name":"remote_executor","short":"","type":"string","default":"default: see description","description":"HOST or HOST:PORT of a remote execution endpoint. The supported schemas are grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. Specify grpc:// or unix: schema to disable TLS.","tags":[],"sources":[]},{"name":"remote_grpc_log","short":"","type":"path","default":"default: see description","description":"If specified, a path to a file to log gRPC call related details. This log consists of a sequence of serialized com.google.devtools.build.lib.remote.logging.RemoteExecutionLog.LogEntry protobufs with each message prefixed by a varint denoting the size of the following serialized protobuf message, as performed by the method LogEntry.writeDelimitedTo(OutputStream).","tags":[],"sources":[]},{"name":"remote_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in requests: --remote_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[],"sources":[]},{"name":"remote_instance_name","short":"","type":"string","default":"default: \"\"","description":"Value to pass as instance_name in the remote execution API.","tags":[],"sources":[]},{"name":"remote_local_fallback","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to fall back to standalone local execution strategy if remote execution fails.","tags":[],"sources":[]},{"name":"remote_local_fallback_strategy","short":"","type":"string","default":"default: \"local\"","description":"No-op, deprecated. See https://github.com/bazelbuild/bazel/issues/7480 for details.","tags":[],"sources":[]},{"name":"remote_max_connections","short":"","type":"integer","default":"default: \"100\"","description":"    Limit the max number of concurrent connections to remote cache/executor. By \n    default the value is 100. Setting this to 0 means no limitation.\n    For HTTP remote cache, one TCP connection could handle one request at one \n    time, so Bazel could make up to --remote_max_connections concurrent \n    requests.\n    For gRPC remote cache/executor, one gRPC channel could usually handle 100+ \n    concurrent requests, so Bazel could make around `--remote_max_connections * \n    100` concurrent requests.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"remote_proxy","short":"","type":"string","default":"default: see description","description":"Connect to the remote cache through a proxy. Currently this flag can only be used to configure a Unix domain socket (unix:/path/to/socket).","tags":[],"sources":[]},{"name":"remote_result_cache_priority","short":"","type":"integer","default":"default: \"0\"","description":"The relative priority of remote actions to be stored in remote cache. The semantics of the particular priority values are server-dependent.","tags":[],"sources":[]},{"name":"remote_retries","short":"","type":"integer","default":"default: \"5\"","description":"The maximum number of attempts to retry a transient error. If set to 0, retries are disabled.","tags":[],"sources":[]},{"name":"remote_retry_max_delay","short":"","type":"An immutable length of time.","default":"default: \"5s\"","description":"The maximum backoff delay between remote retry attempts. Following units can be used: Days (d), hours (h), minutes (m), seconds (s), and milliseconds (ms). If the unit is omitted, the value is interpreted as seconds.","tags":[],"sources":[]},{"name":"remote_timeout","short":"","type":"An immutable length of time.","default":"default: \"60s\"","description":"The maximum amount of time to wait for remote execution and cache calls. For the REST cache, this is both the connect and the read timeout. Following units can be used: Days (d), hours (h), minutes (m), seconds (s), and milliseconds (ms). If the unit is omitted, the value is interpreted as seconds.","tags":[],"sources":[]},{"name":"remote_upload_local_results","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to upload locally executed action results to the remote cache if the remote cache supports it and the user is authorized to do so.","tags":[],"sources":[]},{"name":"remote_verify_downloads","short":"","type":"boolean","default":"default: \"true\"","description":"If set to true, Bazel will compute the hash sum of all remote downloads and  discard the remotely cached values if they don't match the expected value.","tags":[],"sources":[]},{"name":"build_metadata","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Custom key-value string pairs to supply in a build event.\n","tags":["terminal_output"],"sources":[]},{"name":"color","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal controls to colorize output.","tags":[],"sources":[]},{"name":"config","short":"","type":"string","default":"may be used multiple times","description":"Selects additional config sections from the rc files; for every \u003ccommand\u003e, it also pulls in the options from \u003ccommand\u003e:\u003cconfig\u003e if such a section exists; if this section doesn't exist in any .rc file, Blaze fails with an error. The config sections and flag combinations they are equivalent to are located in the tools/*.blazerc config files.","tags":[],"sources":[]},{"name":"credential_helper","short":"","type":"Path to a credential helper. It may be absolute, relative to the PATH environment variable, or %workspace%-relative. The path be optionally prefixed by a scope  followed by an '='. The scope is a domain name, optionally with a single leading '*' wildcard component. A helper applies to URIs matching its scope, with more specific scopes preferred. If a helper has no scope, it applies to every URI.","default":"may be used multiple times","description":"Configures a credential helper conforming to the \u003ca href=\"https://github.com/EngFlow/credential-helper-spec\"\u003eCredential Helper Specification\u003c/a\u003e to use for retrieving authorization credentials for  repository fetching, remote caching and execution, and the build event service.Credentials supplied by a helper take precedence over credentials supplied by `--google_default_credentials`, `--google_credentials`, a `.netrc` file, or the auth parameter to `repository_ctx.download()` and `repository_ctx.download_and_extract()`.May be specified multiple times to set up multiple helpers.See https://blog.engflow.com/2023/10/09/configuring-bazels-credential-helper/ for instructions.","tags":[],"sources":[]},{"name":"credential_helper_cache_duration","short":"","type":"An immutable length of time.","default":"default: \"30m\"","description":"The default duration for which credentials supplied by a credential helper are cached if the helper does not provide when the credentials expire.","tags":[],"sources":[]},{"name":"credential_helper_timeout","short":"","type":"An immutable length of time.","default":"default: \"10s\"","description":"Configures the timeout for a credential helper.Credential helpers failing to respond within this timeout will fail the invocation.","tags":[],"sources":[]},{"name":"curses","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal cursor controls to minimize scrolling output.","tags":[],"sources":[]},{"name":"disk_cache","short":"","type":"path","default":"default: see description","description":"A path to a directory where Bazel can read and write actions and action outputs. If the directory does not exist, it will be created.","tags":[],"sources":[]},{"name":"enable_platform_specific_config","short":"","type":"boolean","default":"default: \"false\"","description":"If true, Bazel picks up host-OS-specific config lines from bazelrc files. For example, if the host OS is Linux and you run bazel build, Bazel picks up lines starting with build:linux. Supported OS identifiers are linux, macos, windows, freebsd, and openbsd. Enabling this flag is equivalent to using --config=linux on Linux, --config=windows on Windows, etc.","tags":[],"sources":[]},{"name":"experimental_disk_cache_gc_idle_delay","short":"","type":"An immutable length of time.","default":"default: \"5m\"","description":"How long the server must remain idle before a garbage collection of the disk cache occurs. To specify the garbage collection policy, set --experimental_disk_cache_gc_max_size and/or --experimental_disk_cache_gc_max_age.","tags":[],"sources":[]},{"name":"experimental_disk_cache_gc_max_age","short":"","type":"An immutable length of time.","default":"default: \"0\"","description":"If set to a positive value, the disk cache will be periodically garbage collected to remove entries older than this age. If set in conjunction with --experimental_disk_cache_gc_max_size, both criteria are applied. Garbage collection occurrs in the background once the server has become idle, as determined by the --experimental_disk_cache_gc_idle_delay flag.","tags":[],"sources":[]},{"name":"experimental_disk_cache_gc_max_size","short":"","type":"size in bytes, optionally followed by a K, M, G or T multiplier","default":"default: \"0\"","description":"If set to a positive value, the disk cache will be periodically garbage collected to stay under this size. If set in conjunction with --experimental_disk_cache_gc_max_age, both criteria are applied. Garbage collection occurrs in the background once the server has become idle, as determined by the --experimental_disk_cache_gc_idle_delay flag.","tags":[],"sources":[]},{"name":"experimental_rule_extension_api","short":"","type":"boolean","default":"default: \"false\"","description":"    Enable experimental rule extension API and subrule APIs\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_windows_watchfs","short":"","type":"boolean","default":"default: \"false\"","description":"If true, experimental Windows support for --watchfs is enabled. Otherwise --watchfsis a non-op on Windows. Make sure to also enable --watchfs.","tags":[],"sources":[]},{"name":"google_auth_scopes","short":"","type":"comma-separated list of options","default":"default: \"https://www.googleapis.com/auth/cloud-platform\"","description":"A comma-separated list of Google Cloud authentication scopes.","tags":[],"sources":[]},{"name":"google_credentials","short":"","type":"string","default":"default: see description","description":"Specifies the file to get authentication credentials from. See https://cloud.google.com/docs/authentication for details.","tags":[],"sources":[]},{"name":"google_default_credentials","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to use 'Google Application Default Credentials' for authentication. See https://cloud.google.com/docs/authentication for details. Disabled by default.","tags":[],"sources":[]},{"name":"grpc_keepalive_time","short":"","type":"An immutable length of time.","default":"default: see description","description":"Configures keep-alive pings for outgoing gRPC connections. If this is set, then Bazel sends pings after this much time of no read operations on the connection, but only if there is at least one pending gRPC call. Times are treated as second granularity; it is an error to set a value less than one second. By default, keep-alive pings are disabled. You should coordinate with the service owner before enabling this setting. For example to set a value of 30 seconds to this flag, it should be done as this --grpc_keepalive_time=30s","tags":[],"sources":[]},{"name":"grpc_keepalive_timeout","short":"","type":"An immutable length of time.","default":"default: \"20s\"","description":"Configures a keep-alive timeout for outgoing gRPC connections. If keep-alive pings are enabled with --grpc_keepalive_time, then Bazel times out a connection if it does not receive a ping reply after this much time. Times are treated as second granularity; it is an error to set a value less than one second. If keep-alive pings are disabled, then this setting is ignored.","tags":[],"sources":[]},{"name":"incompatible_disable_non_executable_java_binary","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, java_binary is always executable. create_executable attribute is \n    removed.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_disallow_symlink_file_to_dir","short":"","type":"boolean","default":"default: \"true\"","description":"    No-op.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"invocation_id","short":"","type":"UUID","default":"default: \"\"","description":"    Unique identifier, in UUID format, for the command being run. If explicitly \n    specified uniqueness must be ensured by the caller. The UUID is printed to \n    stderr, the BEP and remote execution protocol.\n","tags":["bazel_monitoring","bazel_internal_configuration"],"sources":[]},{"name":"override_repository","short":"","type":"equals-separated mapping of repository name to path","default":"may be used multiple times","description":"Override a repository with a local path in the form of \u003crepository name\u003e=\u003cpath\u003e. If the given path is an absolute path, it will be used as it is. If the given path is a relative path, it is relative to the current working directory. If the given path starts with '%workspace%, it is relative to the workspace root, which is the output of `bazel info workspace`. If the given path is empty, then remove any previous overrides.","tags":[],"sources":[]},{"name":"progress_in_terminal_title","short":"","type":"boolean","default":"default: \"false\"","description":"Show the command progress in the terminal title. Useful to see what bazel is doing when having multiple terminal tabs.","tags":[],"sources":[]},{"name":"show_progress","short":"","type":"boolean","default":"default: \"true\"","description":"Display progress messages during a build.","tags":[],"sources":[]},{"name":"show_progress_rate_limit","short":"","type":"double","default":"default: \"0.2\"","description":"Minimum number of seconds between progress messages in the output.","tags":[],"sources":[]},{"name":"show_timestamps","short":"","type":"boolean","default":"default: \"false\"","description":"Include timestamps in messages","tags":[],"sources":[]},{"name":"tls_certificate","short":"","type":"string","default":"default: see description","description":"Specify a path to a TLS certificate that is trusted to sign server certificates.","tags":[],"sources":[]},{"name":"tls_client_certificate","short":"","type":"string","default":"default: see description","description":"Specify the TLS client certificate to use; you also need to provide a client key to enable client authentication.","tags":[],"sources":[]},{"name":"tls_client_key","short":"","type":"string","default":"default: see description","description":"Specify the TLS client key to use; you also need to provide a client certificate to enable client authentication.","tags":[],"sources":[]},{"name":"ui_actions_shown","short":"","type":"integer","default":"default: \"8\"","description":"    Number of concurrent actions shown in the detailed progress bar; each \n    action is shown on a separate line. The progress bar always shows at least \n    one one, all numbers less than 1 are mapped to 1.\n","tags":["terminal_output"],"sources":[]},{"name":"watchfs","short":"","type":"boolean","default":"default: \"false\"","description":"On Linux/macOS: If true, bazel tries to use the operating system's file watch service for local changes instead of scanning every file for a change. On Windows: this flag currently is a non-op but can be enabled in conjunction with --experimental_windows_watchfs. On any OS: The behavior is undefined if your workspace is on a network file system, and files are edited on a remote machine.","tags":[],"sources":[]}]