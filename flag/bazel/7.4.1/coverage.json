[{"name":"distdir","short":"","type":"path","default":"may be used multiple times","description":"    Additional places to search for archives before accessing the network to \n    download them.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_repository_cache_hardlinks","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, the repository cache will hardlink the file in case of a cache hit, \n    rather than copying. This is intended to save disk space.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_repository_downloader_retries","short":"","type":"integer","default":"default: \"0\"","description":"    The maximum number of attempts to retry a download error. If set to 0, \n    retries are disabled.\n","tags":["experimental"],"sources":[]},{"name":"experimental_scale_timeouts","short":"","type":"double","default":"default: \"1.0\"","description":"    Scale all timeouts in Starlark repository rules by this factor. In this \n    way, external repositories can be made working on machines that are slower \n    than the rule author expected, without changing the source code\n","tags":["bazel_internal_configuration","experimental"],"sources":[]},{"name":"http_connector_attempts","short":"","type":"integer","default":"default: \"8\"","description":"    The maximum number of attempts for http downloads.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"http_connector_retry_max_timeout","short":"","type":"An immutable length of time.","default":"default: \"0s\"","description":"    The maximum timeout for http download retries. With a value of 0, no \n    timeout maximum is defined.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"http_max_parallel_downloads","short":"","type":"integer","default":"default: \"8\"","description":"    The maximum number parallel http downloads.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"http_timeout_scaling","short":"","type":"double","default":"default: \"1.0\"","description":"    Scale all timeouts related to http downloads by the given factor\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"incompatible_disable_native_repo_rules","short":"","type":"boolean","default":"default: \"false\"","description":"    If false, native repo rules can be used in WORKSPACE; otherwise, Starlark \n    repo rules must be used instead. Native repo rules include \n    local_repository, new_local_repository, local_config_platform, \n    android_sdk_repository, and android_ndk_repository.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"repository_cache","short":"","type":"path","default":"default: see description","description":"    Specifies the cache location of the downloaded values obtained during the \n    fetching of external repositories. An empty string as argument requests the \n    cache to be disabled, otherwise the default of \n    '\u003coutput_user_root\u003e/cache/repos/v1' is used\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"repository_disable_download","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, downloading using ctx.download{,_and_extract} is not allowed during \n    repository fetching. Note that network access is not completely disabled; \n    ctx.execute could still run an arbitrary executable that accesses the \n    Internet.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"check_up_to_date","short":"","type":"boolean","default":"default: \"false\"","description":"    Don't perform the build, just check if it is up-to-date.  If all targets \n    are up-to-date, the build completes successfully.  If any step needs to be \n    executed an error is reported and the build fails.\n","tags":["execution"],"sources":[]},{"name":"dynamic_local_execution_delay","short":"","type":"integer","default":"default: \"1000\"","description":"    How many milliseconds should local execution be delayed, if remote \n    execution was faster during a build at least once?\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"dynamic_local_strategy","short":"","type":"'[name=]value1[,..,valueN]' assignment","default":"may be used multiple times","description":"    The local strategies, in order, to use for the given mnemonic - the first \n    applicable strategy is used. For example, `worker,sandboxed` runs actions \n    that support persistent workers using the worker strategy, and all others \n    using the sandboxed strategy. If no mnemonic is given, the list of \n    strategies is used as the fallback for all mnemonics. The default fallback \n    list is `worker,sandboxed`, or`worker,sandboxed,standalone` if \n    `experimental_local_lockfree_output` is set. Takes [mnemonic=]local_strategy\n    [,local_strategy,...]\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"dynamic_remote_strategy","short":"","type":"'[name=]value1[,..,valueN]' assignment","default":"may be used multiple times","description":"    The remote strategies, in order, to use for the given mnemonic - the first \n    applicable strategy is used. If no mnemonic is given, the list of \n    strategies is used as the fallback for all mnemonics. The default fallback \n    list is `remote`, so this flag usually does not need to be set explicitly. \n    Takes [mnemonic=]remote_strategy[,remote_strategy,...]\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_docker_image","short":"","type":"string","default":"default: \"\"","description":"    Specify a Docker image name (e.g. \"ubuntu:latest\") that should be used to \n    execute a sandboxed action when using the docker strategy and the action \n    itself doesn't already have a container-image attribute in its \n    remote_execution_properties in the platform description. The value of this \n    flag is passed verbatim to 'docker run', so it supports the same syntax and \n    mechanisms as Docker itself.\n","tags":["execution"],"sources":[]},{"name":"experimental_docker_use_customized_images","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, injects the uid and gid of the current user into the Docker \n    image before using it. This is required if your build / tests depend on the \n    user having a name and home directory inside the container. This is on by \n    default, but you can disable it in case the automatic image customization \n    feature doesn't work in your case or you know that you don't need it.\n","tags":["execution"],"sources":[]},{"name":"experimental_dynamic_exclude_tools","short":"","type":"boolean","default":"default: \"true\"","description":"    When set, targets that are build \"for tool\" are not subject to dynamic \n    execution. Such targets are extremely unlikely to be built incrementally \n    and thus not worth spending local cycles on.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_dynamic_local_load_factor","short":"","type":"double","default":"default: \"0\"","description":"    Controls how much load from dynamic execution to put on the local machine. \n    This flag adjusts how many actions in dynamic execution we will schedule \n    concurrently. It is based on the number of CPUs Blaze thinks is available, \n    which can be controlled with the --local_cpu_resources flag.\n    If this flag is 0, all actions are scheduled locally immediately. If \u003e 0, \n    the amount of actions scheduled locally is limited by the number of CPUs \n    available. If \u003c 1, the load factor is used to reduce the number of locally \n    scheduled actions when the number of actions waiting to schedule is high. \n    This lessens the load on the local machine in the clean build case, where \n    the local machine does not contribute much.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_dynamic_slow_remote_time","short":"","type":"An immutable length of time.","default":"default: \"0\"","description":"    If \u003e0, the time a dynamically run action must run remote-only before we \n    prioritize its local execution to avoid remote timeouts. This may hide some \n    problems on the remote execution system. Do not turn this on without \n    monitoring of remote execution issues.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_enable_docker_sandbox","short":"","type":"boolean","default":"default: \"false\"","description":"    Enable Docker-based sandboxing. This option has no effect if Docker is not \n    installed.\n","tags":["execution"],"sources":[]},{"name":"experimental_inmemory_sandbox_stashes","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the contents of stashed sandboxes for \n    reuse_sandbox_directories will be tracked in memory. This reduces the \n    amount of I/O needed during reuse. Depending on the build this flag may \n    improve wall time. Depending on the build as well this flag may use a \n    significant amount of additional memory.\n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"experimental_inprocess_symlink_creation","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to make direct file system calls to create symlink trees\n","tags":["loading_and_analysis","execution","experimental"],"sources":[]},{"name":"experimental_persistent_aar_extractor","short":"","type":"boolean","default":"default: \"false\"","description":"    Enable persistent aar extractor by using workers.\n","tags":["execution"],"sources":[]},{"name":"experimental_remotable_source_manifests","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to make source manifest actions remotable\n","tags":["loading_and_analysis","execution","experimental"],"sources":[]},{"name":"experimental_sandbox_async_tree_delete_idle_threads","short":"","type":"integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"default: \"4\"","description":"    If 0, delete sandbox trees as soon as an action completes (causing \n    completion of the action to be delayed). If greater than zero, execute the \n    deletion of such threes on an asynchronous thread pool that has size 1 when \n    the build is running and grows to the size specified by this flag when the \n    server is idle.\n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"experimental_sandbox_memory_limit_mb","short":"","type":"integer number of MBs, or \"HOST_RAM\", optionally followed by [-|*]\u003cfloat\u003e.","default":"default: \"0\"","description":"    If \u003e 0, each Linux sandbox will be limited to the given amount of memory \n    (in MB). Requires cgroups v1 or v2 and permissions for the users to the \n    cgroups dir.\n","tags":["execution"],"sources":[]},{"name":"experimental_shrink_worker_pool","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, could shrink worker pool if worker memory pressure is high. \n    This flag works only when flag experimental_total_worker_memory_limit_mb is \n    enabled.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_split_coverage_postprocessing","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, then Bazel will run coverage postprocessing for test in a new \n    spawn.\n","tags":["execution"],"sources":[]},{"name":"experimental_split_xml_generation","short":"","type":"boolean","default":"default: \"true\"","description":"    If this flag is set, and a test action does not generate a test.xml file, \n    then Bazel uses a separate action to generate a dummy test.xml file \n    containing the test log. Otherwise, Bazel generates a test.xml as part of \n    the test action.\n","tags":["execution"],"sources":[]},{"name":"experimental_strict_fileset_output","short":"","type":"boolean","default":"default: \"false\"","description":"    If this option is enabled, filesets will treat all output artifacts as \n    regular files. They will not traverse directories or be sensitive to \n    symlinks.\n","tags":["execution"],"sources":[]},{"name":"experimental_total_worker_memory_limit_mb","short":"","type":"integer number of MBs, or \"HOST_RAM\", optionally followed by [-|*]\u003cfloat\u003e.","default":"default: \"0\"","description":"    If this limit is greater than zero idle workers might be killed if the \n    total memory usage of all  workers exceed the limit.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_ui_max_stdouterr_bytes","short":"","type":"integer in (-1)-1073741819 range","default":"default: \"1048576\"","description":"    The maximum size of the stdout / stderr files that will be printed to the \n    console. -1 implies no limit.\n","tags":["execution"],"sources":[]},{"name":"experimental_use_hermetic_linux_sandbox","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, do not mount root, only mount whats provided with \n    sandbox_add_mount_pair. Input files will be hardlinked to the sandbox \n    instead of symlinked to from the sandbox. If action input files are located \n    on a filesystem different from the sandbox, then the input files will be \n    copied instead.\n","tags":["execution"],"sources":[]},{"name":"experimental_use_semaphore_for_jobs","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, additionally use semaphore to limit number of concurrent \n    jobs.\n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"experimental_use_windows_sandbox","short":"","type":"tri-state (auto, yes, no)","default":"default: \"false\"","description":"    Use Windows sandbox to run actions. If \"yes\", the binary provided by --\n    experimental_windows_sandbox_path must be valid and correspond to a \n    supported version of sandboxfs. If \"auto\", the binary may be missing or not \n    compatible.\n","tags":["execution"],"sources":[]},{"name":"experimental_windows_sandbox_path","short":"","type":"string","default":"default: \"BazelSandbox.exe\"","description":"    Path to the Windows sandbox binary to use when --\n    experimental_use_windows_sandbox is true. If a bare name, use the first \n    binary of that name found in the PATH.\n","tags":["execution"],"sources":[]},{"name":"experimental_worker_allowlist","short":"","type":"comma-separated set of options","default":"default: see description","description":"    If non-empty, only allow using persistent workers with the given worker key \n    mnemonic.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_worker_as_resource","short":"","type":"boolean","default":"default: \"true\"","description":"    No-op, will be removed soon.\n","tags":["no_op"],"sources":[]},{"name":"experimental_worker_cancellation","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel may send cancellation requests to workers that support \n    them.\n","tags":["execution"],"sources":[]},{"name":"experimental_worker_memory_limit_mb","short":"","type":"integer number of MBs, or \"HOST_RAM\", optionally followed by [-|*]\u003cfloat\u003e.","default":"default: \"0\"","description":"    If this limit is greater than zero, workers might be killed if the memory \n    usage of the worker exceeds the limit. If not used together with dynamic \n    execution and `--experimental_dynamic_ignore_local_signals=9`, this may \n    crash your build.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_worker_metrics_poll_interval","short":"","type":"An immutable length of time.","default":"default: \"5s\"","description":"    The interval between collecting worker metrics and possibly attempting \n    evictions. Cannot effectively be less than 1s for performance reasons.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"experimental_worker_multiplex_sandboxing","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, multiplex workers will be sandboxed, using a separate sandbox \n    directory per work request. Only workers that have the 'supports-multiplex-\n    sandboxing' execution requirement will be sandboxed.\n","tags":["execution"],"sources":[]},{"name":"experimental_worker_sandbox_hardening","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, workers are run in a hardened sandbox, if the implementation \n    allows it.\n","tags":["execution"],"sources":[]},{"name":"experimental_worker_strict_flagfiles","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, actions arguments for workers that do not follow the worker \n    specification will cause an error. Worker arguments must have exactly one \n    @flagfile argument as the last of its list of arguments.\n","tags":["execution"],"sources":[]},{"name":"gc_thrashing_threshold","short":"","type":"integer in 0-100 range","default":"default: \"100\"","description":"    The percent of tenured space occupied (0-100) above which \n    GcThrashingDetector considers memory pressure events against its limits (--\n    gc_thrashing_limits). If set to 100, GcThrashingDetector is disabled.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"genrule_strategy","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"    Specify how to execute genrules. This flag will be phased out. Instead, use \n    --spawn_strategy=\u003cvalue\u003e to control all actions or --\n    strategy=Genrule=\u003cvalue\u003e to control genrules only.\n","tags":["execution"],"sources":[]},{"name":"high_priority_workers","short":"","type":"string","default":"may be used multiple times","description":"    No-op, will be removed soon.\n","tags":["execution"],"sources":[]},{"name":"incompatible_disallow_unsound_directory_outputs","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, it is an error for an action to materialize an output file as a \n    directory. Does not affect source directories. See https://github.\n    com/bazelbuild/bazel/issues/18646.\n","tags":["bazel_internal_configuration","incompatible_change"],"sources":[]},{"name":"incompatible_modify_execution_info_additive","short":"","type":"boolean","default":"default: \"false\"","description":"    When enabled, passing multiple --modify_execution_info flags is additive. \n    When disabled, only the last flag is taken into account.\n","tags":["execution","affects_outputs","loading_and_analysis","\n      incompatible_change"],"sources":[]},{"name":"incompatible_remote_dangling_symlinks","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, symlinks uploaded to a remote or disk cache are allowed to \n    dangle.\n","tags":["execution","incompatible_change"],"sources":[]},{"name":"incompatible_remote_symlinks","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, Bazel will always upload symlinks as such to a remote or \n    disk cache. Otherwise, non-dangling relative symlinks (and only those) will \n    be uploaded as the file or directory they point to.\n","tags":["execution","incompatible_change"],"sources":[]},{"name":"incompatible_sandbox_hermetic_tmp","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, each Linux sandbox will have its own dedicated empty \n    directory mounted as /tmp rather than sharing /tmp with the host \n    filesystem. Use --sandbox_add_mount_pair=/tmp to keep seeing the host's \n    /tmp in all sandboxes.\n","tags":["execution"],"sources":[]},{"name":"internal_spawn_scheduler","short":"","type":"boolean","default":"default: \"false\"","description":"    Placeholder option so that we can tell in Blaze whether the spawn scheduler \n    was enabled.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"jobs","short":"j","type":"integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"default: \"auto\"","description":"    The number of concurrent jobs to run. Takes an integer, or a keyword \n    (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-\n    |*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\". Values must be between 1 and 5000. \n    Values above 2500 may cause memory issues. \"auto\" calculates a reasonable \n    default based on host resources.\n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"keep_going","short":"k","type":"boolean","default":"default: \"false\"","description":"    Continue as much as possible after an error.  While the target that failed \n    and those that depend on it cannot be analyzed, other prerequisites of \n    these targets can be.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"loading_phase_threads","short":"","type":"integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"default: \"auto\"","description":"    Number of parallel threads to use for the loading/analysis phase.Takes an \n    integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally \n    followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\". \"auto\" \n    sets a reasonable default based on host resources. Must be at least 1.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"modify_execution_info","short":"","type":"regex=[+-]key,regex=[+-]key,...","default":"may be used multiple times","description":"    Add or remove keys from an action's execution info based on action \n    mnemonic.  Applies only to actions which support execution info. Many \n    common actions support execution info, e.g. Genrule, CppCompile, Javac, \n    StarlarkAction, TestRunner. When specifying multiple values, order matters \n    because many regexes may apply to the same mnemonic.\n    \n    Syntax: \"regex=[+-]key,regex=[+-]key,...\".\n    \n    Examples:\n      '.*=+x,.*=-y,.*=+z' adds 'x' and 'z' to, and removes 'y' from, the \n    execution info for all actions.\n      'Genrule=+requires-x' adds 'requires-x' to the execution info for all \n    Genrule actions.\n      '(?!Genrule).*=-requires-x' removes 'requires-x' from the execution info \n    for all non-Genrule actions.\n    \n","tags":["execution","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"persistent_android_dex_desugar","short":"","type":"","default":"","description":"    Enable persistent Android dex and desugar actions by using workers.\n      Expands to: --internal_persistent_android_dex_desugar --\n      strategy=Desugar=worker --strategy=DexBuilder=worker \n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"persistent_android_resource_processor","short":"","type":"","default":"","description":"    Enable persistent Android resource processor by using workers.\n      Expands to: --internal_persistent_busybox_tools --\n      strategy=AaptPackage=worker --strategy=AndroidResourceParser=worker --\n      strategy=AndroidResourceValidator=worker --\n      strategy=AndroidResourceCompiler=worker --strategy=RClassGenerator=worker \n      --strategy=AndroidResourceLink=worker --strategy=AndroidAapt2=worker --\n      strategy=AndroidAssetMerger=worker --\n      strategy=AndroidResourceMerger=worker --\n      strategy=AndroidCompiledResourceMerger=worker --\n      strategy=ManifestMerger=worker --strategy=AndroidManifestMerger=worker --\n      strategy=Aapt2Optimize=worker --strategy=AARGenerator=worker --\n      strategy=ProcessDatabinding=worker --\n      strategy=GenerateDataBindingBaseClasses=worker \n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"persistent_multiplex_android_dex_desugar","short":"","type":"","default":"","description":"    Enable persistent multiplexed Android dex and desugar actions by using \n    workers.\n      Expands to: --persistent_android_dex_desugar --\n      internal_persistent_multiplex_android_dex_desugar \n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"persistent_multiplex_android_resource_processor","short":"","type":"","default":"","description":"    Enable persistent multiplexed Android resource processor by using workers.\n      Expands to: --persistent_android_resource_processor --\n      modify_execution_info=AaptPackage=+supports-multiplex-workers --\n      modify_execution_info=AndroidResourceParser=+supports-multiplex-workers --\n      modify_execution_info=AndroidResourceValidator=+supports-multiplex-\n      workers --modify_execution_info=AndroidResourceCompiler=+supports-\n      multiplex-workers --modify_execution_info=RClassGenerator=+supports-\n      multiplex-workers --modify_execution_info=AndroidResourceLink=+supports-\n      multiplex-workers --modify_execution_info=AndroidAapt2=+supports-\n      multiplex-workers --modify_execution_info=AndroidAssetMerger=+supports-\n      multiplex-workers --modify_execution_info=AndroidResourceMerger=+supports-\n      multiplex-workers --\n      modify_execution_info=AndroidCompiledResourceMerger=+supports-multiplex-\n      workers --modify_execution_info=ManifestMerger=+supports-multiplex-\n      workers --modify_execution_info=AndroidManifestMerger=+supports-multiplex-\n      workers --modify_execution_info=Aapt2Optimize=+supports-multiplex-workers \n      --modify_execution_info=AARGenerator=+supports-multiplex-workers \n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"persistent_multiplex_android_tools","short":"","type":"","default":"","description":"    Enable persistent and multiplexed Android tools (dexing, desugaring, \n    resource processing).\n      Expands to: --internal_persistent_multiplex_busybox_tools --\n      persistent_multiplex_android_resource_processor --\n      persistent_multiplex_android_dex_desugar \n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"reuse_sandbox_directories","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, directories used by sandboxed non-worker execution may be \n    reused to avoid unnecessary setup costs.\n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"sandbox_base","short":"","type":"string","default":"default: \"\"","description":"    Lets the sandbox create its sandbox directories underneath this path. \n    Specify a path on tmpfs (like /run/shm) to possibly improve performance a \n    lot when your build / tests have many input files. Note: You need enough \n    RAM and free space on the tmpfs to hold output and intermediate files \n    generated by running actions.\n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"sandbox_explicit_pseudoterminal","short":"","type":"boolean","default":"default: \"false\"","description":"    Explicitly enable the creation of pseudoterminals for sandboxed actions. \n    Some linux distributions require setting the group id of the process to \n    'tty' inside the sandbox in order for pseudoterminals to function. If this \n    is causing issues, this flag can be disabled to enable other groups to be \n    used.\n","tags":["execution"],"sources":[]},{"name":"sandbox_tmpfs_path","short":"","type":"absolute path","default":"may be used multiple times","description":"    For sandboxed actions, mount an empty, writable directory at this absolute \n    path (if supported by the sandboxing implementation, ignored otherwise).\n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"skip_incompatible_explicit_targets","short":"","type":"boolean","default":"default: \"false\"","description":"    Skip incompatible targets that are explicitly listed on the command line. \n    By default, building such targets results in an error but they are silently \n    skipped when this option is enabled. See: https://bazel.\n    build/extending/platforms#skipping-incompatible-targets\n","tags":["loading_and_analysis"],"sources":[]},{"name":"spawn_strategy","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"    Specify how spawn actions are executed by default. Accepts a comma-\n    separated list of strategies from highest to lowest priority. For each \n    action Bazel picks the strategy with the highest priority that can execute \n    the action. The default value is \"remote,worker,sandboxed,local\". See https:\n    //blog.bazel.build/2019/06/19/list-strategy.html for details.\n","tags":["execution"],"sources":[]},{"name":"strategy","short":"","type":"'[name=]value1[,..,valueN]' assignment","default":"may be used multiple times","description":"    Specify how to distribute compilation of other spawn actions. Accepts a \n    comma-separated list of strategies from highest to lowest priority. For \n    each action Bazel picks the strategy with the highest priority that can \n    execute the action. The default value is \"remote,worker,sandboxed,local\". \n    This flag overrides the values set by --spawn_strategy (and --\n    genrule_strategy if used with mnemonic Genrule). See https://blog.bazel.\n    build/2019/06/19/list-strategy.html for details.\n","tags":["execution"],"sources":[]},{"name":"strategy_regexp","short":"","type":"'\u003cRegexFilter\u003e=value[,value]' assignment","default":"may be used multiple times","description":"    Override which spawn strategy should be used to execute spawn actions that \n    have descriptions matching a certain regex_filter. See --per_file_copt for \n    details onregex_filter matching. The last regex_filter that matches the \n    description is used. This option overrides other flags for specifying \n    strategy. Example: --strategy_regexp=//foo.*\\.cc,-//foo/bar=local means to \n    run actions using local strategy if their descriptions match //foo.*.cc but \n    not //foo/bar. Example: --strategy_regexp='Compiling.*/bar=local  --\n    strategy_regexp=Compiling=sandboxed will run 'Compiling //foo/bar/baz' with \n    the 'local' strategy, but reversing the order would run it with \n    'sandboxed'. \n","tags":["execution"],"sources":[]},{"name":"use_target_platform_for_tests","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, then Bazel will use the target platform for running tests rather \n    than the test exec group.\n","tags":["execution"],"sources":[]},{"name":"worker_extra_flag","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Extra command-flags that will be passed to worker processes in addition to \n    --persistent_worker, keyed by mnemonic (e.g. --worker_extra_flag=Javac=--\n    debug.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"worker_max_instances","short":"","type":"[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"may be used multiple times","description":"    How many instances of each kind of persistent worker may be launched if you \n    use the 'worker' strategy. May be specified as [name=value] to give a \n    different value per mnemonic. The limit is based on worker keys, which are \n    differentiated based on mnemonic, but also on startup flags and \n    environment, so there can in some cases be more workers per mnemonic than \n    this flag specifies. Takes an integer, or a keyword (\"auto\", \"HOST_CPUS\", \n    \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \n    \"HOST_CPUS*.5\". 'auto' calculates a reasonable default based on machine \n    capacity. \"=value\" sets a default for unspecified mnemonics.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"worker_max_multiplex_instances","short":"","type":"[name=]value, where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"may be used multiple times","description":"    How many WorkRequests a multiplex worker process may receive in parallel if \n    you use the 'worker' strategy with --worker_multiplex. May be specified as \n    [name=value] to give a different value per mnemonic. The limit is based on \n    worker keys, which are differentiated based on mnemonic, but also on \n    startup flags and environment, so there can in some cases be more workers \n    per mnemonic than this flag specifies. Takes an integer, or a keyword \n    (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-\n    |*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\". 'auto' calculates a reasonable \n    default based on machine capacity. \"=value\" sets a default for unspecified \n    mnemonics.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"worker_multiplex","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, workers will use multiplexing if they support it. \n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"worker_quit_after_build","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, all workers quit after a build is done.\n","tags":["execution","host_machine_resource_optimizations"],"sources":[]},{"name":"worker_sandboxing","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, workers will be executed in a sandboxed environment.\n","tags":["execution"],"sources":[]},{"name":"worker_verbose","short":"","type":"boolean","default":"default: \"false\"","description":"If enabled, prints verbose messages when workers are started, shutdown, ...","tags":[],"sources":[]},{"name":"android_compiler","short":"","type":"string","default":"default: see description","description":"    The Android target compiler.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_crosstool_top","short":"","type":"build target label","default":"default: \"//external:android/crosstool\"","description":"    The location of the C++ compiler used for Android builds.\n","tags":["affects_outputs","changes_inputs","loading_and_analysis","\n      loses_incremental_state"],"sources":[]},{"name":"android_grte_top","short":"","type":"label","default":"default: see description","description":"    The Android target grte_top.\n","tags":["changes_inputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_manifest_merger","short":"","type":"legacy, android or force_android","default":"default: \"android\"","description":"    Selects the manifest merger to use for android_binary rules. Flag to help \n    thetransition to the Android manifest merger from the legacy merger.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_platforms","short":"","type":"build target label","default":"default: \"\"","description":"    Sets the platforms that android_binary targets use. If multiple platforms \n    are specified, then the binary is a fat APKs, which contains native \n    binaries for each specified target platform.\n","tags":["changes_inputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_sdk","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/android:sdk\"","description":"    Specifies Android SDK/platform that is used to build Android applications.\n","tags":["changes_inputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"apple_crosstool_top","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/cpp:toolchain\"","description":"    The label of the crosstool package to be used in Apple and Objc rules and \n    their dependencies.\n","tags":["loses_incremental_state","changes_inputs"],"sources":[]},{"name":"cc_output_directory_tag","short":"","type":"string","default":"default: \"\"","description":"    Specifies a suffix to be added to the configuration directory.\n","tags":["affects_outputs"],"sources":[]},{"name":"compiler","short":"","type":"string","default":"default: see description","description":"    The C++ compiler to use for compiling the target.\n","tags":["loading_and_analysis","execution"],"sources":[]},{"name":"coverage_output_generator","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/test:lcov_merger\"","description":"    Location of the binary that is used to postprocess raw coverage reports. \n    This must currently be a filegroup that contains a single file, the binary. \n    Defaults to '//tools/test:lcov_merger'.\n","tags":["changes_inputs","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"coverage_report_generator","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/test:coverage_report_generator\"","description":"    Location of the binary that is used to generate coverage reports. This must \n    currently be a filegroup that contains a single file, the binary. Defaults \n    to '//tools/test:coverage_report_generator'.\n","tags":["changes_inputs","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"coverage_support","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/test:coverage_support\"","description":"    Location of support files that are required on the inputs of every test \n    action that collects code coverage. Defaults to '//tools/test:\n    coverage_support'.\n","tags":["changes_inputs","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"crosstool_top","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/cpp:toolchain\"","description":"    The label of the crosstool package to be used for compiling C++ code.\n","tags":["loading_and_analysis","changes_inputs","affects_outputs"],"sources":[]},{"name":"custom_malloc","short":"","type":"build target label","default":"default: see description","description":"    Specifies a custom malloc implementation. This setting overrides malloc \n    attributes in build rules.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"experimental_add_exec_constraints_to_targets","short":"","type":"'\u003cRegexFilter\u003e=\u003clabel1\u003e[,\u003clabel2\u003e,...]' assignment","default":"may be used multiple times","description":"    List of comma-separated regular expressions, each optionally prefixed by - \n    (negative expression), assigned (=) to a list of comma-separated constraint \n    value targets. If a target matches no negative expression and at least one \n    positive expression its toolchain resolution will be performed as if it had \n    declared the constraint values as execution constraints. Example: //demo,-\n    test=@platforms//cpus:x86_64 will add 'x86_64' to any target under //demo \n    except for those whose name contains 'test'.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_include_xcode_execution_requirements","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, add a \"requires-xcode:{version}\" execution requirement to every \n    Xcode action.  If the xcode version has a hyphenated label,  also add a \n    \"requires-xcode-label:{version_label}\" execution requirement.\n","tags":["loses_incremental_state","loading_and_analysis","execution"],"sources":[]},{"name":"experimental_prefer_mutual_xcode","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, use the most recent Xcode that is available both locally and \n    remotely. If false, or if there are no mutual available versions, use the \n    local Xcode version selected via xcode-select.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"extra_execution_platforms","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"    The platforms that are available as execution platforms to run actions. \n    Platforms can be specified by exact target, or as a target pattern. These \n    platforms will be considered before those declared in the WORKSPACE file by \n    register_execution_platforms(). This option may only be set once; later \n    instances will override earlier flag settings.\n","tags":["execution"],"sources":[]},{"name":"extra_toolchains","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    The toolchain rules to be considered during toolchain resolution. \n    Toolchains can be specified by exact target, or as a target pattern. These \n    toolchains will be considered before those declared in the WORKSPACE file \n    by register_toolchains().\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"grte_top","short":"","type":"label","default":"default: see description","description":"    A label to a checked-in libc library. The default value is selected by the \n    crosstool toolchain, and you almost never need to override it.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_compiler","short":"","type":"string","default":"default: see description","description":"    The C++ compiler to use for host compilation. It is ignored if --\n    host_crosstool_top is not set.\n","tags":["loading_and_analysis","execution"],"sources":[]},{"name":"host_crosstool_top","short":"","type":"build target label","default":"default: see description","description":"    By default, the --crosstool_top and --compiler options are also used for \n    the exec configuration. If this flag is provided, Bazel uses the default \n    libc and compiler for the given crosstool_top.\n","tags":["loading_and_analysis","changes_inputs","affects_outputs"],"sources":[]},{"name":"host_grte_top","short":"","type":"label","default":"default: see description","description":"    If specified, this setting overrides the libc top-level directory (--\n    grte_top) for the exec configuration.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_platform","short":"","type":"build target label","default":"default: \"@bazel_tools//tools:host_platform\"","description":"    The label of a platform rule that describes the host system.\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"incompatible_dont_enable_host_nonhost_crosstool_features","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will not enable 'host' and 'nonhost' features in the c++ \n    toolchain (see https://github.com/bazelbuild/bazel/issues/7407 for more \n    information).\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_enable_android_toolchain_resolution","short":"","type":"boolean","default":"default: \"true\"","description":"    Use toolchain resolution to select the Android SDK for android rules \n    (Starlark and native)\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_enable_apple_toolchain_resolution","short":"","type":"boolean","default":"default: \"false\"","description":"    Use toolchain resolution to select the Apple SDK for apple rules (Starlark \n    and native)\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_enable_proto_toolchain_resolution","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, proto lang rules define toolchains from rules_proto, rules_java, \n    rules_cc repositories.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_make_thinlto_command_lines_standalone","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will not reuse C++ link action command lines for lto \n    indexing command lines (see https://github.com/bazelbuild/bazel/issues/6791 \n    for more information).\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_remove_legacy_whole_archive","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will not link library dependencies as whole archive by \n    default (see https://github.com/bazelbuild/bazel/issues/7362 for migration \n    instructions).\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_require_ctx_in_configure_features","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will require 'ctx' parameter in to cc_common.\n    configure_features (see https://github.com/bazelbuild/bazel/issues/7793 for \n    more information).\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"interface_shared_objects","short":"","type":"boolean","default":"default: \"true\"","description":"    Use interface shared objects if supported by the toolchain. All ELF \n    toolchains currently support this setting.\n","tags":["loading_and_analysis","affects_outputs","affects_outputs"],"sources":[]},{"name":"ios_sdk_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Specifies the version of the iOS SDK to use to build iOS applications. If \n    unspecified, uses default iOS SDK version from 'xcode_version'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"macos_sdk_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Specifies the version of the macOS SDK to use to build macOS applications. \n    If unspecified, uses default macOS SDK version from 'xcode_version'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"minimum_os_version","short":"","type":"string","default":"default: see description","description":"    The minimum OS version which your compilation targets.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"platform_mappings","short":"","type":"relative path","default":"default: \"\"","description":"    The location of a mapping file that describes which platform to use if none \n    is set or which flags to set when a platform already exists. Must be \n    relative to the main workspace root. Defaults to 'platform_mappings' (a \n    file directly under the workspace root).\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"platforms","short":"","type":"build target label","default":"default: \"\"","description":"    The labels of the platform rules describing the target platforms for the \n    current command.\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"python2_path","short":"","type":"string","default":"default: see description","description":"    Deprecated, no-op. Disabled by `--incompatible_use_python_toolchains`.\n","tags":["no_op","deprecated"],"sources":[]},{"name":"python3_path","short":"","type":"string","default":"default: see description","description":"    Deprecated, no-op. Disabled by `--incompatible_use_python_toolchains`.\n","tags":["no_op","deprecated"],"sources":[]},{"name":"python_path","short":"","type":"string","default":"default: see description","description":"    The absolute path of the Python interpreter invoked to run Python targets \n    on the target platform. Deprecated; disabled by --\n    incompatible_use_python_toolchains.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"python_top","short":"","type":"build target label","default":"default: see description","description":"    The label of a py_runtime representing the Python interpreter invoked to \n    run Python targets on the target platform. Deprecated; disabled by --\n    incompatible_use_python_toolchains.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"target_platform_fallback","short":"","type":"string","default":"default: \"\"","description":"    This option is deprecated and has no effect.\n","tags":["affects_outputs","changes_inputs","loading_and_analysis"],"sources":[]},{"name":"tvos_sdk_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Specifies the version of the tvOS SDK to use to build tvOS applications. If \n    unspecified, uses default tvOS SDK version from 'xcode_version'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"watchos_sdk_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Specifies the version of the watchOS SDK to use to build watchOS \n    applications. If unspecified, uses default watchOS SDK version from \n    'xcode_version'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"xcode_version","short":"","type":"string","default":"default: see description","description":"    If specified, uses Xcode of the given version for relevant build actions. \n    If unspecified, uses the executor default version of Xcode.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"xcode_version_config","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/cpp:host_xcodes\"","description":"    The label of the xcode_config rule to be used for selecting the Xcode \n    version in the build configuration.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"apple_generate_dsym","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to generate debug symbol(.dSYM) file(s).\n","tags":["affects_outputs","action_command_lines"],"sources":[]},{"name":"build","short":"","type":"boolean","default":"default: \"true\"","description":"    Execute the build; this is the usual behaviour. Specifying --nobuild causes \n    the build to stop before executing the build actions, returning zero iff \n    the package loading and analysis phases completed successfully; this mode \n    is useful for testing those phases.\n","tags":["execution","affects_outputs"],"sources":[]},{"name":"build_runfile_links","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, build runfiles symlink forests for all targets.  If false, write \n    them only when required by a local action, test or run command.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_runfile_manifests","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, write runfiles manifests for all targets. If false, omit them. \n    Local tests will fail to run when false.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_test_dwp","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, when building C++ tests statically and with fission the .dwp \n    file  for the test binary will be automatically built as well.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"cc_proto_library_header_suffixes","short":"","type":"comma-separated set of options","default":"default: \".pb.h\"","description":"    Sets the suffixes of header files that a cc_proto_library creates.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"cc_proto_library_source_suffixes","short":"","type":"comma-separated set of options","default":"default: \".pb.cc\"","description":"    Sets the suffixes of source files that a cc_proto_library creates.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"experimental_proto_descriptor_sets_include_source_info","short":"","type":"boolean","default":"default: \"false\"","description":"    Run extra actions for alternative Java api versions in a proto_library.\n","tags":["affects_outputs","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_proto_extra_actions","short":"","type":"boolean","default":"default: \"false\"","description":"    Run extra actions for alternative Java api versions in a proto_library.\n","tags":["affects_outputs","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_save_feature_state","short":"","type":"boolean","default":"default: \"false\"","description":"    Save the state of enabled and requested feautres as an output of \n    compilation.\n","tags":["affects_outputs","experimental"],"sources":[]},{"name":"experimental_use_validation_aspect","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to run validation actions using aspect (for parallelism with tests).\n","tags":["execution","affects_outputs"],"sources":[]},{"name":"fission","short":"","type":"set of compilation modes","default":"default: \"no\"","description":"    Specifies which compilation modes use fission for C++ compilations and \n    links.  May be any combination of {'fastbuild', 'dbg', 'opt'} or the \n    special values 'yes'  to enable all modes and 'no' to disable all modes.\n","tags":["loading_and_analysis","action_command_lines","affects_outputs"],"sources":[]},{"name":"incompatible_always_include_files_in_data","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, native rules add \u003ccode\u003eDefaultInfo.files\u003c/code\u003e of data \n    dependencies to their runfiles, which matches the recommended behavior for \n    Starlark rules (https://bazel.\n    build/extending/rules#runfiles_features_to_avoid).\n","tags":["affects_outputs","incompatible_change"],"sources":[]},{"name":"legacy_external_runfiles","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, build runfiles symlink forests for external repositories under .\n    runfiles/wsname/external/repo (in addition to .runfiles/repo).\n","tags":["affects_outputs"],"sources":[]},{"name":"objc_generate_linkmap","short":"","type":"boolean","default":"default: \"false\"","description":"    Specifies whether to generate a linkmap file.\n","tags":["affects_outputs"],"sources":[]},{"name":"output_groups","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    A list of comma-separated output group names, each of which optionally \n    prefixed by a + or a -. A group prefixed by + is added to the default set \n    of output groups, while a group prefixed by - is removed from the default \n    set. If at least one group is not prefixed, the default set of output \n    groups is omitted. For example, --output_groups=+foo,+bar builds the union \n    of the default set, foo, and bar, while --output_groups=foo,bar overrides \n    the default set such that only foo and bar are built.\n","tags":["execution","affects_outputs"],"sources":[]},{"name":"run_validations","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether to run validation actions as part of the build. See https://bazel.\n    build/extending/rules#validation_actions\n","tags":["execution","affects_outputs"],"sources":[]},{"name":"save_temps","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, temporary outputs from gcc will be saved.  These include .s files \n    (assembler code), .i files (preprocessed C) and .ii files (preprocessed \n    C++).\n","tags":["affects_outputs"],"sources":[]},{"name":"action_env","short":"","type":"'name=value' assignment with an optional value part","default":"may be used multiple times","description":"    Specifies the set of environment variables available to actions with target \n    configuration. Variables can be either specified by name, in which case the \n    value will be taken from the invocation environment, or by the name=value \n    pair which sets the value independent of the invocation environment. This \n    option can be used multiple times; for options given for the same variable, \n    the latest wins, options for different variables accumulate.\n","tags":["action_command_lines"],"sources":[]},{"name":"android_cpu","short":"","type":"string","default":"default: \"armeabi-v7a\"","description":"    The Android target CPU.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"android_databinding_use_androidx","short":"","type":"boolean","default":"default: \"true\"","description":"    Generate AndroidX-compatible data-binding files. This is only used with \n    databinding v2. This flag is a no-op.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state","\n      experimental"],"sources":[]},{"name":"android_databinding_use_v3_4_args","short":"","type":"boolean","default":"default: \"true\"","description":"    Use android databinding v2 with 3.4.0 argument. This flag is a no-op.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state","\n      experimental"],"sources":[]},{"name":"android_dynamic_mode","short":"","type":"off, default or fully","default":"default: \"off\"","description":"    Determines whether C++ deps of Android rules will be linked dynamically \n    when a cc_binary does not explicitly create a shared library. 'default' \n    means bazel will choose whether to link dynamically.  'fully' means all \n    libraries will be linked dynamically. 'off' means that all libraries will \n    be linked in mostly static mode.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"android_manifest_merger_order","short":"","type":"alphabetical, alphabetical_by_configuration or dependency","default":"default: \"alphabetical\"","description":"    Sets the order of manifests passed to the manifest merger for Android \n    binaries. ALPHABETICAL means manifests are sorted by path relative to the \n    execroot. ALPHABETICAL_BY_CONFIGURATION means manifests are sorted by paths \n    relative to the configuration directory within the output directory. \n    DEPENDENCY means manifests are ordered with each library's manifest coming \n    before the manifests of its dependencies.\n","tags":["action_command_lines","execution"],"sources":[]},{"name":"android_resource_shrinking","short":"","type":"boolean","default":"default: \"false\"","description":"    Enables resource shrinking for android_binary APKs that use ProGuard.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"aspects","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"Comma-separated list of aspects to be applied to top-level targets. In the list, if aspect some_aspect specifies required aspect providers via required_aspect_providers, some_aspect will run after every aspect that was mentioned before it in the aspects list whose advertised providers satisfy some_aspect required aspect providers. Moreover, some_aspect will run after all its required aspects specified by requires attribute. some_aspect will then have access to the values of those aspects' providers. \u003cbzl-file-label\u003e%\u003caspect_name\u003e, for example '//tools:my_def.bzl%my_aspect', where 'my_aspect' is a top-level value from a file tools/my_def.bzl","tags":[],"sources":[]},{"name":"bep_maximum_open_remote_upload_files","short":"","type":"integer","default":"default: \"-1\"","description":"    Maximum number of open files allowed during BEP artifact upload.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_python_zip","short":"","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"    Build python executable zip; on on Windows, off on other platforms\n","tags":["affects_outputs"],"sources":[]},{"name":"catalyst_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures for which to build Apple Catalyst \n    binaries.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"collect_code_coverage","short":"","type":"boolean","default":"default: \"false\"","description":"    If specified, Bazel will instrument code (using offline instrumentation \n    where possible) and will collect coverage information during tests. Only \n    targets that  match --instrumentation_filter will be affected. Usually this \n    option should  not be specified directly - 'bazel coverage' command should \n    be used instead.\n","tags":["affects_outputs"],"sources":[]},{"name":"compilation_mode","short":"c","type":"fastbuild, dbg or opt","default":"default: \"fastbuild\"","description":"    Specify the mode the binary will be built in. Values: 'fastbuild', 'dbg', \n    'opt'.\n","tags":["affects_outputs","action_command_lines"],"sources":[]},{"name":"conlyopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to gcc when compiling C source files.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"copt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to gcc.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"cpu","short":"","type":"string","default":"default: \"\"","description":"    The target CPU.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"cs_fdo_absolute_path","short":"","type":"string","default":"default: see description","description":"    Use CSFDO profile information to optimize compilation. Specify the absolute \n    path name of the zip file containing the profile file, a raw or an indexed \n    LLVM profile file.\n","tags":["affects_outputs"],"sources":[]},{"name":"cs_fdo_instrument","short":"","type":"string","default":"default: see description","description":"    Generate binaries with context sensitive FDO instrumentation. With \n    Clang/LLVM compiler, it also accepts the directory name under which the raw \n    profile file(s) will be dumped at runtime.\n      Using this option will also add: --copt=-Wno-error \n","tags":["affects_outputs"],"sources":[]},{"name":"cs_fdo_profile","short":"","type":"build target label","default":"default: see description","description":"    The cs_fdo_profile representing the context sensitive profile to be used \n    for optimization.\n","tags":["affects_outputs"],"sources":[]},{"name":"cxxopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to gcc when compiling C++ source files.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"define","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Each --define option specifies an assignment for a build variable.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"dynamic_mode","short":"","type":"off, default or fully","default":"default: \"default\"","description":"    Determines whether C++ binaries will be linked dynamically.  'default' \n    means Bazel will choose whether to link dynamically.  'fully' means all \n    libraries will be linked dynamically. 'off' means that all libraries will \n    be linked in mostly static mode.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"enable_fdo_profile_absolute_path","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, use of fdo_absolute_profile_path will raise an error.\n","tags":["affects_outputs"],"sources":[]},{"name":"enable_runfiles","short":"","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"    Enable runfiles symlink tree; By default, it's off on Windows, on on other \n    platforms.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_action_listener","short":"","type":"build target label","default":"may be used multiple times","description":"    Deprecated in favor of aspects. Use action_listener to attach an \n    extra_action to existing build actions.\n","tags":["execution","experimental"],"sources":[]},{"name":"experimental_android_compress_java_resources","short":"","type":"boolean","default":"default: \"false\"","description":"    Compress Java resources in APKs\n","tags":["affects_outputs","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_android_databinding_v2","short":"","type":"boolean","default":"default: \"true\"","description":"    Use android databinding v2. This flag is a no-op.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state","\n      experimental"],"sources":[]},{"name":"experimental_android_resource_shrinking","short":"","type":"boolean","default":"default: \"false\"","description":"    Enables resource shrinking for android_binary APKs that use ProGuard.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"experimental_android_rewrite_dexes_with_rex","short":"","type":"boolean","default":"default: \"false\"","description":"    use rex tool to rewrite dex files\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state","\n      experimental"],"sources":[]},{"name":"experimental_collect_code_coverage_for_generated_files","short":"","type":"boolean","default":"default: \"false\"","description":"    If specified, Bazel will also generate collect coverage information for \n    generated files.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_convenience_symlinks","short":"","type":"normal, clean, ignore or log_only","default":"default: \"normal\"","description":"    This flag controls how the convenience symlinks (the symlinks that appear \n    in the workspace after the build) will be managed. Possible values:\n      normal (default): Each kind of convenience symlink will be created or \n    deleted, as determined by the build.\n      clean: All symlinks will be unconditionally deleted.\n      ignore: Symlinks will be left alone.\n      log_only: Generate log messages as if 'normal' were passed, but don't \n    actually perform any filesystem operations (useful for tools).\n    Note that only symlinks whose names are generated by the current value of --\n    symlink_prefix can be affected; if the prefix changes, any pre-existing \n    symlinks will be left alone.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_convenience_symlinks_bep_event","short":"","type":"boolean","default":"default: \"false\"","description":"    This flag controls whether or not we will post the build \n    eventConvenienceSymlinksIdentified to the BuildEventProtocol. If the value \n    is true, the BuildEventProtocol will have an entry for \n    convenienceSymlinksIdentified, listing all of the convenience symlinks \n    created in your workspace. If false, then the convenienceSymlinksIdentified \n    entry in the BuildEventProtocol will be empty.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_objc_fastbuild_options","short":"","type":"comma-separated list of options","default":"default: \"-O0,-DDEBUG=1\"","description":"    Uses these strings as objc fastbuild compiler options.\n","tags":["action_command_lines"],"sources":[]},{"name":"experimental_omitfp","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, use libunwind for stack unwinding, and compile with -fomit-frame-\n    pointer and -fasynchronous-unwind-tables.\n","tags":["action_command_lines","affects_outputs","experimental"],"sources":[]},{"name":"experimental_output_paths","short":"","type":"off, content or strip","default":"default: \"off\"","description":"    Which model to use for where in the output tree rules write their outputs, \n    particularly for multi-platform / multi-configuration builds. This is \n    highly experimental. See https://github.com/bazelbuild/bazel/issues/6526 \n    for details. Starlark actions canopt into path mapping by adding the key \n    'supports-path-mapping' to the 'execution_requirements' dict.\n","tags":["loses_incremental_state","bazel_internal_configuration","\n      affects_outputs","execution"],"sources":[]},{"name":"experimental_override_name_platform_in_output_dir","short":"","type":"'label=value' assignment","default":"may be used multiple times","description":"    Each entry should be of the form label=value where label refers to a \n    platform and values is the desired shortname to use in the output path. \n    Only used when --experimental_platform_in_output_dir is true. Has highest \n    naming priority.\n","tags":["affects_outputs","experimental"],"sources":[]},{"name":"experimental_platform_in_output_dir","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, a shortname for the target platform is used in the output \n    directory name instead of the CPU. The exact scheme is experimental and \n    subject to change: First, in the rare case the --platforms option does not \n    have exactly one value, a hash of the platforms option is used. Next, if \n    any shortname for the current platform was registered by --\n    experimental_override_name_platform_in_output_dir, then that shortname is \n    used. Then, if --experimental_use_platforms_in_output_dir_legacy_heuristic \n    is set, use a shortname based off the current platform Label. Finally, a \n    hash of the platform option is used as a last resort.\n","tags":["affects_outputs","experimental"],"sources":[]},{"name":"experimental_use_llvm_covmap","short":"","type":"boolean","default":"default: \"false\"","description":"    If specified, Bazel will generate llvm-cov coverage map information rather \n    than gcov when collect_code_coverage is enabled.\n","tags":["changes_inputs","affects_outputs","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_use_platforms_in_output_dir_legacy_heuristic","short":"","type":"boolean","default":"default: \"true\"","description":"    Please only use this flag as part of a suggested migration or testing \n    strategy. Note that the heuristic has known deficiencies and it is \n    suggested to migrate to relying on just --\n    experimental_override_name_platform_in_output_dir.\n","tags":["affects_outputs","experimental"],"sources":[]},{"name":"fat_apk_cpu","short":"","type":"comma-separated set of options","default":"default: \"armeabi-v7a\"","description":"    Setting this option enables fat APKs, which contain native binaries for all \n    specified target architectures, e.g., --fat_apk_cpu=x86,armeabi-v7a. If \n    this flag is specified, then --android_cpu is ignored for dependencies of \n    android_binary rules.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"fat_apk_hwasan","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to create HWASAN splits.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"fdo_instrument","short":"","type":"string","default":"default: see description","description":"    Generate binaries with FDO instrumentation. With Clang/LLVM compiler, it \n    also accepts the directory name under which the raw profile file(s) will be \n    dumped at runtime.\n      Using this option will also add: --copt=-Wno-error \n","tags":["affects_outputs"],"sources":[]},{"name":"fdo_optimize","short":"","type":"string","default":"default: see description","description":"    Use FDO profile information to optimize compilation. Specify the name of a \n    zip file containing a .gcda file tree, an afdo file containing an auto \n    profile, or an LLVM profile file. This flag also accepts files specified as \n    labels (e.g. `//foo/bar:file.afdo` - you may need to add an `exports_files` \n    directive to the corresponding package) and labels pointing to \n    `fdo_profile` targets. This flag will be superseded by the `fdo_profile` \n    rule.\n","tags":["affects_outputs"],"sources":[]},{"name":"fdo_prefetch_hints","short":"","type":"build target label","default":"default: see description","description":"    Use cache prefetch hints.\n","tags":["affects_outputs"],"sources":[]},{"name":"fdo_profile","short":"","type":"build target label","default":"default: see description","description":"    The fdo_profile representing the profile to be used for optimization.\n","tags":["affects_outputs"],"sources":[]},{"name":"features","short":"","type":"string","default":"may be used multiple times","description":"    The given features will be enabled or disabled by default for targets built \n    in the target configuration. Specifying -\u003cfeature\u003e will disable the \n    feature. Negative features always override positive ones. See also --\n    host_features\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"force_pic","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, all C++ compilations produce position-independent code (\"-\n    fPIC\"), links prefer PIC pre-built libraries over non-PIC libraries, and \n    links produce position-independent executables (\"-pie\").\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"host_action_env","short":"","type":"'name=value' assignment with an optional value part","default":"may be used multiple times","description":"    Specifies the set of environment variables available to actions with \n    execution configurations. Variables can be either specified by name, in \n    which case the value will be taken from the invocation environment, or by \n    the name=value pair which sets the value independent of the invocation \n    environment. This option can be used multiple times; for options given for \n    the same variable, the latest wins, options for different variables \n    accumulate.\n","tags":["action_command_lines"],"sources":[]},{"name":"host_compilation_mode","short":"","type":"fastbuild, dbg or opt","default":"default: \"opt\"","description":"    Specify the mode the tools used during the build will be built in. Values: \n    'fastbuild', 'dbg', 'opt'.\n","tags":["affects_outputs","action_command_lines"],"sources":[]},{"name":"host_conlyopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to the C compiler when compiling C (but not C++) \n    source files in the exec configurations.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_copt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to the C compiler for tools built in the exec \n    configurations.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_cpu","short":"","type":"string","default":"default: \"\"","description":"    The host CPU.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"host_cxxopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to C++ compiler for tools built in the exec \n    configurations.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_features","short":"","type":"string","default":"may be used multiple times","description":"    The given features will be enabled or disabled by default for targets built \n    in the exec configuration. Specifying -\u003cfeature\u003e will disable the feature. \n    Negative features always override positive ones.\n","tags":["changes_inputs","affects_outputs"],"sources":[]},{"name":"host_force_python","short":"","type":"PY2 or PY3","default":"default: see description","description":"    Overrides the Python version for the exec configuration. Can be \"PY2\" or \n    \"PY3\".\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"host_linkopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to linker when linking tools in the exec \n    configurations.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_macos_minimum_os","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Minimum compatible macOS version for host targets. If unspecified, uses \n    'macos_sdk_version'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"host_per_file_copt","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options","default":"may be used multiple times","description":"    Additional options to selectively pass to the C/C++ compiler when compiling \n    certain files in the exec configurations. This option can be passed \n    multiple times. Syntax: regex_filter@option_1,option_2,...,option_n. Where \n    regex_filter stands for a list of include and exclude regular expression \n    patterns (Also see --instrumentation_filter). option_1 to option_n stand \n    for arbitrary command line options. If an option contains a comma it has to \n    be quoted with a backslash. Options can contain @. Only the first @ is used \n    to split the string. Example: --host_per_file_copt=//foo/.*\\.cc,-//foo/bar\\.\n    cc@-O0 adds the -O0 command line option to the gcc command line of all cc \n    files in //foo/ except bar.cc.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"host_swiftcopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to swiftc for exec tools.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"incompatible_auto_exec_groups","short":"","type":"boolean","default":"default: \"false\"","description":"    When enabled, an exec groups is automatically created for each toolchain \n    used by a rule. For this to work rule needs to specify `toolchain` \n    parameter on its actions. For more information, see https://github.\n    com/bazelbuild/bazel/issues/17134.\n","tags":["affects_outputs","incompatible_change"],"sources":[]},{"name":"incompatible_merge_genfiles_directory","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, the genfiles directory is folded into the bin directory.\n","tags":["affects_outputs","incompatible_change"],"sources":[]},{"name":"incompatible_use_host_features","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, use --features only for the target configuration and --\n    host_features for the exec configuration.\n","tags":["changes_inputs","affects_outputs","incompatible_change"],"sources":[]},{"name":"instrument_test_targets","short":"","type":"boolean","default":"default: \"false\"","description":"    When coverage is enabled, specifies whether to consider instrumenting test \n    rules. When set, test rules included by --instrumentation_filter are \n    instrumented. Otherwise, test rules are always excluded from coverage \n    instrumentation.\n","tags":["affects_outputs"],"sources":[]},{"name":"instrumentation_filter","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths","default":"default: \"-/javatests[/:],-/test/java[/:]\"","description":"    When coverage is enabled, only rules with names included by the specified \n    regex-based filter will be instrumented. Rules prefixed with '-' are \n    excluded instead. Note that only non-test rules are instrumented unless --\n    instrument_test_targets is enabled.\n","tags":["affects_outputs"],"sources":[]},{"name":"ios_minimum_os","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Minimum compatible iOS version for target simulators and devices. If \n    unspecified, uses 'ios_sdk_version'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"ios_multi_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures to build an ios_application with. The \n    result is a universal binary containing all specified architectures.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"legacy_whole_archive","short":"","type":"boolean","default":"default: \"true\"","description":"    Deprecated, superseded by --incompatible_remove_legacy_whole_archive (see \n    https://github.com/bazelbuild/bazel/issues/7362 for details). When on, use \n    --whole-archive for cc_binary rules that have linkshared=True and either \n    linkstatic=True or '-static' in linkopts. This is for backwards \n    compatibility only. A better alternative is to use alwayslink=1 where \n    required.\n","tags":["action_command_lines","affects_outputs","deprecated"],"sources":[]},{"name":"linkopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to gcc when linking.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"ltobackendopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to the LTO backend step (under --\n    features=thin_lto).\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"ltoindexopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional option to pass to the LTO indexing step (under --\n    features=thin_lto).\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"macos_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures for which to build Apple macOS \n    binaries.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"macos_minimum_os","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Minimum compatible macOS version for targets. If unspecified, uses \n    'macos_sdk_version'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"memprof_profile","short":"","type":"build target label","default":"default: see description","description":"    Use memprof profile.\n","tags":["affects_outputs"],"sources":[]},{"name":"objc_debug_with_GLIBCXX","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, and compilation mode is set to 'dbg', define GLIBCXX_DEBUG,  \n    GLIBCXX_DEBUG_PEDANTIC and GLIBCPP_CONCEPT_CHECKS.\n","tags":["action_command_lines"],"sources":[]},{"name":"objc_enable_binary_stripping","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to perform symbol and dead-code strippings on linked binaries. \n    Binary strippings will be performed if both this flag and --\n    compilation_mode=opt are specified.\n","tags":["action_command_lines"],"sources":[]},{"name":"objccopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to gcc when compiling Objective-C/C++ source \n    files.\n","tags":["action_command_lines"],"sources":[]},{"name":"per_file_copt","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options","default":"may be used multiple times","description":"    Additional options to selectively pass to gcc when compiling certain files. \n    This option can be passed multiple times. Syntax: regex_filter@option_1,\n    option_2,...,option_n. Where regex_filter stands for a list of include and \n    exclude regular expression patterns (Also see --instrumentation_filter). \n    option_1 to option_n stand for arbitrary command line options. If an option \n    contains a comma it has to be quoted with a backslash. Options can contain \n    @. Only the first @ is used to split the string. Example: --\n    per_file_copt=//foo/.*\\.cc,-//foo/bar\\.cc@-O0 adds the -O0 command line \n    option to the gcc command line of all cc files in //foo/ except bar.cc.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"per_file_ltobackendopt","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths followed by an @ and a comma separated list of options","default":"may be used multiple times","description":"    Additional options to selectively pass to LTO backend (under --\n    features=thin_lto) when compiling certain backend objects. This option can \n    be passed multiple times. Syntax: regex_filter@option_1,option_2,...,\n    option_n. Where regex_filter stands for a list of include and exclude \n    regular expression patterns. option_1 to option_n stand for arbitrary \n    command line options. If an option contains a comma it has to be quoted \n    with a backslash. Options can contain @. Only the first @ is used to split \n    the string. Example: --per_file_ltobackendopt=//foo/.*\\.o,-//foo/bar\\.o@-O0 \n    adds the -O0 command line option to the LTO backend command line of all o \n    files in //foo/ except bar.o.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"platform_suffix","short":"","type":"string","default":"default: see description","description":"    Specifies a suffix to be added to the configuration directory.\n","tags":["loses_incremental_state","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"propeller_optimize","short":"","type":"build target label","default":"default: see description","description":"    Use Propeller profile information to optimize the build target.A propeller \n    profile must consist of at least one of two files, a cc profile and a ld \n    profile.  This flag accepts a build label which must refer to the propeller \n    profile input files. For example, the BUILD file that defines the label, in \n    a/b/BUILD:propeller_optimize(    name = \"propeller_profile\",    cc_profile \n    = \"propeller_cc_profile.txt\",    ld_profile = \"propeller_ld_profile.txt\",)\n    An exports_files directive may have to be added to the corresponding \n    package to make these files visible to Bazel. The option must be used as: --\n    propeller_optimize=//a/b:propeller_profile\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"propeller_optimize_absolute_cc_profile","short":"","type":"string","default":"default: see description","description":"    Absolute path name of cc_profile file for Propeller Optimized builds.\n","tags":["affects_outputs"],"sources":[]},{"name":"propeller_optimize_absolute_ld_profile","short":"","type":"string","default":"default: see description","description":"    Absolute path name of ld_profile file for Propeller Optimized builds.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_all","short":"","type":"","default":"","description":"    Downloads all remote outputs to the local machine. This flag is an alias \n    for --remote_download_outputs=all.\n      Expands to: --remote_download_outputs=all \n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_minimal","short":"","type":"","default":"","description":"    Does not download any remote build outputs to the local machine. This flag \n    is an alias for --remote_download_outputs=minimal.\n      Expands to: --remote_download_outputs=minimal \n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_outputs","short":"","type":"all, minimal or toplevel","default":"default: \"toplevel\"","description":"    If set to 'minimal' doesn't download any remote build outputs to the local \n    machine, except the ones required by local actions. If set to 'toplevel' \n    behaves like'minimal' except that it also downloads outputs of top level \n    targets to the local machine. Both options can significantly reduce build \n    times if network bandwidth is a bottleneck.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_symlink_template","short":"","type":"string","default":"default: \"\"","description":"    Instead of downloading remote build outputs to the local machine, create \n    symbolic links. The target of the symbolic links can be specified in the \n    form of a template string. This template string may contain {hash} and \n    {size_bytes} that expand to the hash of the object and the size in bytes, \n    respectively. These symbolic links may, for example, point to a FUSE file \n    system that loads objects from the CAS on demand.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_download_toplevel","short":"","type":"","default":"","description":"    Only downloads remote outputs of top level targets to the local machine. \n    This flag is an alias for --remote_download_outputs=toplevel.\n      Expands to: --remote_download_outputs=toplevel \n","tags":["affects_outputs"],"sources":[]},{"name":"repo_env","short":"","type":"'name=value' assignment with an optional value part","default":"may be used multiple times","description":"    Specifies additional environment variables to be available only for \n    repository rules. Note that repository rules see the full environment \n    anyway, but in this way configuration information can be passed to \n    repositories through options without invalidating the action graph.\n","tags":["action_command_lines"],"sources":[]},{"name":"run_under","short":"","type":"prefix in front of command","default":"default: see description","description":"    Prefix to insert before the executables for the 'test' and 'run' commands. \n    If the value is 'foo -bar', and the execution command line is 'test_binary -\n    baz', then the final command line is 'foo -bar test_binary -baz'.This can \n    also be a label to an executable target. Some examples are: 'valgrind', \n    'strace', 'strace -c', 'valgrind --quiet --num-callers=20', '//package:\n    target',  '//package:target --options'.\n","tags":["action_command_lines"],"sources":[]},{"name":"share_native_deps","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, native libraries that contain identical functionality will be \n    shared among different targets\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"stamp","short":"","type":"boolean","default":"default: \"false\"","description":"    Stamp binaries with the date, username, hostname, workspace information, \n    etc.\n","tags":["affects_outputs"],"sources":[]},{"name":"strip","short":"","type":"always, sometimes or never","default":"default: \"sometimes\"","description":"    Specifies whether to strip binaries and shared libraries  (using \"-Wl,--\n    strip-debug\").  The default value of 'sometimes' means strip iff --\n    compilation_mode=fastbuild.\n","tags":["affects_outputs"],"sources":[]},{"name":"stripopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to strip when generating a '\u003cname\u003e.stripped' \n    binary.\n","tags":["action_command_lines","affects_outputs"],"sources":[]},{"name":"swiftcopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to Swift compilation.\n","tags":["action_command_lines"],"sources":[]},{"name":"symlink_prefix","short":"","type":"string","default":"default: see description","description":"    The prefix that is prepended to any of the convenience symlinks that are \n    created after a build. If omitted, the default value is the name of the \n    build tool followed by a hyphen. If '/' is passed, then no symlinks are \n    created and no warning is emitted. Warning: the special functionality for \n    '/' will be deprecated soon; use --experimental_convenience_symlinks=ignore \n    instead.\n","tags":["affects_outputs"],"sources":[]},{"name":"tvos_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures for which to build Apple tvOS \n    binaries.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"tvos_minimum_os","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Minimum compatible tvOS version for target simulators and devices. If \n    unspecified, uses 'tvos_sdk_version'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"visionos_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures for which to build Apple visionOS \n    binaries.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"watchos_cpus","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Comma-separated list of architectures for which to build Apple watchOS \n    binaries.\n","tags":["loses_incremental_state","loading_and_analysis"],"sources":[]},{"name":"watchos_minimum_os","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    Minimum compatible watchOS version for target simulators and devices. If \n    unspecified, uses 'watchos_sdk_version'.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"xbinary_fdo","short":"","type":"build target label","default":"default: see description","description":"    Use XbinaryFDO profile information to optimize compilation. Specify the \n    name of default cross binary profile. When the option is used together with \n    --fdo_instrument/--fdo_optimize/--fdo_profile, those options will always \n    prevail as if xbinary_fdo is never specified. \n","tags":["affects_outputs"],"sources":[]},{"name":"auto_cpu_environment_group","short":"","type":"build target label","default":"default: \"\"","description":"    Declare the environment_group to use for automatically mapping cpu values \n    to target_environment values.\n","tags":["changes_inputs","loading_and_analysis","experimental"],"sources":[]},{"name":"check_bzl_visibility","short":"","type":"boolean","default":"default: \"true\"","description":"    If disabled, .bzl load visibility errors are demoted to warnings.\n","tags":["build_file_semantics"],"sources":[]},{"name":"check_licenses","short":"","type":"boolean","default":"default: \"false\"","description":"    Check that licensing constraints imposed by dependent packages do not \n    conflict with distribution modes of the targets being built. By default, \n    licenses are not checked.\n","tags":["build_file_semantics"],"sources":[]},{"name":"check_visibility","short":"","type":"boolean","default":"default: \"true\"","description":"    If disabled, visibility errors in target dependencies are demoted to \n    warnings.\n","tags":["build_file_semantics"],"sources":[]},{"name":"desugar_for_android","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether to desugar Java 8 bytecode before dexing.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"desugar_java8_libs","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to include supported Java 8 libraries in apps for legacy devices.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state","\n      experimental"],"sources":[]},{"name":"enforce_constraints","short":"","type":"boolean","default":"default: \"true\"","description":"    Checks the environments each target is compatible with and reports errors \n    if any target has dependencies that don't support the same environments\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_check_desugar_deps","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether to double-check correct desugaring at Android binary level.\n","tags":["eagerness_to_exit","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_docker_privileged","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel will pass the --privileged flag to 'docker run' when \n    running actions. This might be required by your build, but it might also \n    result in reduced hermeticity.\n","tags":["execution"],"sources":[]},{"name":"experimental_import_deps_checking","short":"","type":"off, warning or error","default":"default: \"OFF\"","description":"    When enabled, check whether the dependencies of an aar_import are complete. \n    This enforcement can break the build, or can just result in warnings.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_one_version_enforcement","short":"","type":"off, warning or error","default":"default: \"OFF\"","description":"    When enabled, enforce that a java_binary rule can't contain more than one \n    version of the same class file on the classpath. This enforcement can break \n    the build, or can just result in warnings.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_sandboxfs_map_symlink_targets","short":"","type":"boolean","default":"default: \"false\"","description":"    No-op\n","tags":["host_machine_resource_optimizations","execution"],"sources":[]},{"name":"experimental_strict_java_deps","short":"","type":"off, warn, error, strict or default","default":"default: \"default\"","description":"    If true, checks that a Java target explicitly declares all directly used \n    targets as dependencies.\n","tags":["build_file_semantics","eagerness_to_exit"],"sources":[]},{"name":"incompatible_check_testonly_for_output_files","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, check testonly for prerequisite targets that are output files \n    by looking up the testonly of the generating rule. This matches visibility \n    checking.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_check_visibility_for_toolchains","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, visibility checking also applies to toolchain implementations.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_disable_native_android_rules","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, direct usage of the native Android rules is disabled. Please \n    use the Starlark Android rules from https://github.\n    com/bazelbuild/rules_android\n","tags":["eagerness_to_exit","incompatible_change"],"sources":[]},{"name":"incompatible_disable_native_apple_binary_rule","short":"","type":"boolean","default":"default: \"false\"","description":"    No-op. Kept here for backwards compatibility.\n","tags":["eagerness_to_exit","incompatible_change"],"sources":[]},{"name":"incompatible_legacy_local_fallback","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables the legacy implicit fallback from sandboxed to \n    local strategy. This flag will eventually default to false and then become \n    a no-op. Use --strategy, --spawn_strategy, or --dynamic_local_strategy to \n    configure fallbacks instead.\n","tags":["execution","incompatible_change"],"sources":[]},{"name":"incompatible_python_disable_py2","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, using Python 2 settings will cause an error. This includes \n    python_version=PY2, srcs_version=PY2, and srcs_version=PY2ONLY. See https:\n    //github.com/bazelbuild/bazel/issues/15684 for more information.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_validate_top_level_header_inclusions","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will also validate top level directory header inclusions \n    (see https://github.com/bazelbuild/bazel/issues/10047 for more information).\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"one_version_enforcement_on_java_tests","short":"","type":"boolean","default":"default: \"true\"","description":"    When enabled, and with experimental_one_version_enforcement set to a non-\n    NONE value, enforce one version on java_test targets. This flag can be \n    disabled to improve incremental test performance at the expense of missing \n    potential one version violations.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"python_native_rules_allowlist","short":"","type":"build target label","default":"default: see description","description":"    An allowlist (package_group target) to use when enforcing --\n    incompatible_python_disallow_native_rules.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"sandbox_add_mount_pair","short":"","type":"single path or a 'source:target' pair","default":"may be used multiple times","description":"    Add additional path pair to mount in sandbox.\n","tags":["execution"],"sources":[]},{"name":"sandbox_block_path","short":"","type":"string","default":"may be used multiple times","description":"    For sandboxed actions, disallow access to this path.\n","tags":["execution"],"sources":[]},{"name":"sandbox_default_allow_network","short":"","type":"boolean","default":"default: \"true\"","description":"    Allow network access by default for actions; this may not work with all \n    sandboxing implementations.\n","tags":["execution"],"sources":[]},{"name":"sandbox_fake_hostname","short":"","type":"boolean","default":"default: \"false\"","description":"    Change the current hostname to 'localhost' for sandboxed actions.\n","tags":["execution"],"sources":[]},{"name":"sandbox_fake_username","short":"","type":"boolean","default":"default: \"false\"","description":"    Change the current username to 'nobody' for sandboxed actions.\n","tags":["execution"],"sources":[]},{"name":"sandbox_writable_path","short":"","type":"string","default":"may be used multiple times","description":"    For sandboxed actions, make an existing directory writable in the sandbox \n    (if supported by the sandboxing implementation, ignored otherwise).\n","tags":["execution"],"sources":[]},{"name":"strict_filesets","short":"","type":"boolean","default":"default: \"false\"","description":"    If this option is enabled, filesets crossing package boundaries are \n    reported as errors.\n","tags":["build_file_semantics","eagerness_to_exit"],"sources":[]},{"name":"strict_proto_deps","short":"","type":"off, warn, error, strict or default","default":"default: \"error\"","description":"    Unless OFF, checks that a proto_library target explicitly declares all \n    directly used targets as dependencies.\n","tags":["build_file_semantics","eagerness_to_exit","incompatible_change"],"sources":[]},{"name":"strict_public_imports","short":"","type":"off, warn, error, strict or default","default":"default: \"off\"","description":"    Unless OFF, checks that a proto_library target explicitly declares all \n    targets used in 'import public' as exported.\n","tags":["build_file_semantics","eagerness_to_exit","incompatible_change"],"sources":[]},{"name":"strict_system_includes","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, headers found through system include paths (-isystem) are also \n    required to be declared.\n","tags":["loading_and_analysis","eagerness_to_exit"],"sources":[]},{"name":"target_environment","short":"","type":"build target label","default":"may be used multiple times","description":"    Declares this build's target environment. Must be a label reference to an \n    \"environment\" rule. If specified, all top-level targets must be compatible \n    with this environment.\n","tags":["changes_inputs"],"sources":[]},{"name":"apk_signing_method","short":"","type":"v1, v2, v1_v2 or v4","default":"default: \"v1_v2\"","description":"    Implementation to use to sign APKs\n","tags":["action_command_lines","affects_outputs","loading_and_analysis"],"sources":[]},{"name":"device_debug_entitlements","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, and compilation mode is not 'opt', objc apps will include debug \n    entitlements when signing.\n","tags":["changes_inputs"],"sources":[]},{"name":"ios_signing_cert_name","short":"","type":"string","default":"default: see description","description":"    Certificate name to use for iOS signing. If not set will fall back to \n    provisioning profile. May be the certificate's keychain identity preference \n    or (substring) of the certificate's common name, as per codesign's man page \n    (SIGNING IDENTITIES).\n","tags":["action_command_lines"],"sources":[]},{"name":"enable_bzlmod","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, enables the Bzlmod dependency management system, taking precedence \n    over WORKSPACE. See https://bazel.build/docs/bzlmod for more information.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"enable_workspace","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, enables the legacy WORKSPACE system for external dependencies. See \n    https://bazel.build/external/overview for more information.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_action_resource_set","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, ctx.actions.run() and ctx.actions.run_shell() accept a \n    resource_set parameter for local execution. Otherwise it will default to \n    250 MB for memory and 1 cpu.\n","tags":["execution","build_file_semantics","experimental"],"sources":[]},{"name":"experimental_bzl_visibility","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, adds a `visibility()` function that .bzl files may call during \n    top-level evaluation to set their visibility for the purpose of load() \n    statements.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_cc_shared_library","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule attributes and Starlark API methods needed for the \n    rule cc_shared_library will be available\n","tags":["build_file_semantics","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_cc_static_library","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule attributes and Starlark API methods needed for the \n    rule cc_static_library will be available\n","tags":["build_file_semantics","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_disable_external_package","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the auto-generated //external package will not be available \n    anymore. Bazel will still be unable to parse the file 'external/BUILD', but \n    globs reaching into external/ from the unnamed package will work.\n","tags":["loading_and_analysis","loses_incremental_state","experimental"],"sources":[]},{"name":"experimental_enable_android_migration_apis","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables the APIs required to support the Android Starlark \n    migration.\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_enable_scl_dialect","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, .scl files may be used in load() statements.\n","tags":["build_file_semantics"],"sources":[]},{"name":"experimental_google_legacy_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, exposes a number of experimental pieces of Starlark build \n    API pertaining to Google legacy code.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_isolated_extension_usages","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, enables the \u003ccode\u003eisolate\u003c/code\u003e parameter in the \u003ca href=\"https:\n    //bazel.build/rules/lib/globals/module#use_extension\"\n    \u003e\u003ccode\u003euse_extension\u003c/code\u003e\u003c/a\u003e function.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_java_library_export","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, experimental_java_library_export_do_not_use module is available.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"experimental_platforms_api","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, enables a number of platform-related Starlark APIs useful \n    for debugging.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_repo_remote_exec","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, repository_rule gains some remote execution capabilities.\n","tags":["build_file_semantics","loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_sibling_repository_layout","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, non-main repositories are planted as symlinks to the main \n    repository in the execution root. That is, all repositories are direct \n    children of the $output_base/execution_root directory. This has the side \n    effect of freeing up $output_base/execution_root/__main__/external for the \n    real top-level 'external' directory.\n","tags":["action_command_lines","bazel_internal_configuration","\n      loading_and_analysis","loses_incremental_state","experimental"],"sources":[]},{"name":"incompatible_allow_tags_propagation","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, tags will be propagated from a target to the actions' \n    execution requirements; otherwise tags are not propagated. See https:\n    //github.com/bazelbuild/bazel/issues/8830 for details.\n","tags":["build_file_semantics","experimental"],"sources":[]},{"name":"incompatible_always_check_depset_elements","short":"","type":"boolean","default":"default: \"true\"","description":"    Check the validity of elements added to depsets, in all constructors. \n    Elements must be immutable, but historically the depset(direct=...) \n    constructor forgot to check. Use tuples instead of lists in depset \n    elements. See https://github.com/bazelbuild/bazel/issues/10313 for details.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_autoload_externally","short":"","type":"comma-separated set of options","default":"default: \"\"","description":"    A comma-separated list of rules (or other symbols) that were previously \n    part of Bazel and which are now to be retrieved from their respective \n    external repositories. This flag is intended to be used to facilitate \n    migration of rules out of Bazel. See also https://github.\n    com/bazelbuild/bazel/issues/23043.\n    A symbol that is autoloaded within a file behaves as if its built-into-\n    Bazel definition were replaced by its canonical new definition in an \n    external repository. For a BUILD file, this essentially means implicitly \n    adding a load() statement. For a .bzl file, it's either a load() statement \n    or a change to a field of the `native` object, depending on whether the \n    autoloaded symbol is a rule.\n    Bazel maintains a hardcoded list of all symbols that may be autoloaded; \n    only those symbols may appear in this flag. For each symbol, Bazel knows \n    the new definition location in an external repository, as well as a set of \n    special-cased repositories that must not autoload it to avoid creating \n    cycles.\n    A list item of \"+foo\" in this flag causes symbol foo to be autoloaded, \n    except in foo's exempt repositories, within which the Bazel-defined version \n    of foo is still available.\n    A list item of \"foo\" triggers autoloading as above, but the Bazel-defined \n    version of foo is not made available to the excluded repositories. This \n    ensures that foo's external repository does not depend on the old Bazel \n    implementation of foo\n    A list item of \"-foo\" does not trigger any autoloading, but makes the Bazel-\n    defined version of foo inaccessible throughout the workspace. This is used \n    to validate that the workspace is ready for foo's definition to be deleted \n    from Bazel.\n    If a symbol is not named in this flag then it continues to work as normal \n    -- no autoloading is done, nor is the Bazel-defined version suppressed. For \n    configuration see https://github.\n    com/bazelbuild/bazel/blob/master/src/main/java/com/google/devtools/build/lib/packages/AutoloadSymbols.\n    java As a shortcut also whole repository may be used, for example \n    +@rules_python will autoload all Python rules.\n","tags":["loses_incremental_state","build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_config_setting_private_default_visibility","short":"","type":"boolean","default":"default: \"false\"","description":"    If incompatible_enforce_config_setting_visibility=false, this is a noop. \n    Else, if this flag is false, any config_setting without an explicit \n    visibility attribute is //visibility:public. If this flag is true, \n    config_setting follows the same visibility logic as all other rules. See \n    https://github.com/bazelbuild/bazel/issues/12933.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_depset_for_java_output_source_jars","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer returns a list from java_info.java_output[0].\n    source_jars but returns a depset instead.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_depset_for_libraries_to_link_getter","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer returns a list from linking_context.\n    libraries_to_link but returns a depset instead.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_disable_objc_library_transition","short":"","type":"boolean","default":"default: \"true\"","description":"    Disable objc_library's custom transition and inherit from the top level \n    target instead\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_disable_starlark_host_transitions","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule attributes cannot set 'cfg = \"host\"'. Rules should set \n    'cfg = \"exec\"' instead.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_disable_target_provider_fields","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disable the ability to access providers on 'target' objects \n    via field syntax. Use provider-key syntax instead. For example, instead of \n    using `ctx.attr.dep.my_info` to access `my_info` from inside a rule \n    implementation function, use `ctx.attr.dep[MyInfo]`. See https://github.\n    com/bazelbuild/bazel/issues/9014 for details.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_disallow_empty_glob","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the default value of the `allow_empty` argument of glob() \n    is False.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_disallow_legacy_py_provider","short":"","type":"boolean","default":"default: \"true\"","description":"    No-op, will be removed soon.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_disallow_sdk_frameworks_attributes","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, disallow sdk_frameworks and weak_sdk_frameworks attributes in \n    objc_library andobjc_import.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_disallow_struct_provider_syntax","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, rule implementation functions may not return a struct. They \n    must instead return a list of provider instances.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_enable_deprecated_label_apis","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, certain deprecated APIs (native.repository_name, Label.\n    workspace_name, Label.relative) can be used.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"incompatible_enforce_config_setting_visibility","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, enforce config_setting visibility restrictions. If false, every \n    config_setting is visible to every target. See https://github.\n    com/bazelbuild/bazel/issues/12932.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_existing_rules_immutable_view","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, native.existing_rule and native.existing_rules return \n    lightweight immutable view objects instead of mutable dicts.\n","tags":["build_file_semantics","loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_fail_on_unknown_attributes","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, targets that have unknown attributes set to None fail.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_fix_package_group_reporoot_syntax","short":"","type":"boolean","default":"default: \"true\"","description":"    In package_group's `packages` attribute, changes the meaning of the value \n    \"//...\" to refer to all packages in the current repository instead of all \n    packages in any repository. You can use the special value \"public\" in place \n    of \"//...\" to obtain the old behavior. This flag requires that --\n    incompatible_package_group_has_public_syntax also be enabled.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_java_common_parameters","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the output_jar, and host_javabase parameters in \n    pack_sources and host_javabase in compile will all be removed.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_merge_fixed_and_default_shell_env","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, actions registered with ctx.actions.run and ctx.actions.\n    run_shell with both 'env' and 'use_default_shell_env = True' specified will \n    use an environment obtained from the default shell environment by \n    overriding with the values passed in to 'env'. If disabled, the value of \n    'env' is completely ignored in this case.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_new_actions_api","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the API to create actions is only available on `ctx.\n    actions`, not on `ctx`.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_no_attr_license","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, disables the function `attr.license`.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_no_implicit_file_export","short":"","type":"boolean","default":"default: \"false\"","description":"    If set, (used) source files are are package private unless exported \n    explicitly. See https://github.\n    com/bazelbuild/proposals/blob/master/designs/2019-10-24-file-visibility.md\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_no_implicit_watch_label","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, then methods on \u003ccode\u003erepository_ctx\u003c/code\u003e that are passed a \n    Label will no longer automatically watch the file under that label for \n    changes even if \u003ccode\u003ewatch = \"no\"\u003c/code\u003e, and \u003ccode\u003erepository_ctx.\n    path\u003c/code\u003e no longer causes the returned path to be watched. Use \n    \u003ccode\u003erepository_ctx.watch\u003c/code\u003e instead.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_no_rule_outputs_param","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, disables the `outputs` parameter of the `rule()` Starlark \n    function.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_objc_alwayslink_by_default","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, make the default value true for alwayslink attributes in \n    objc_library and objc_import.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_objc_provider_remove_linking_info","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the ObjcProvider's APIs for linking info will be removed.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_package_group_has_public_syntax","short":"","type":"boolean","default":"default: \"true\"","description":"    In package_group's `packages` attribute, allows writing \"public\" or \n    \"private\" to refer to all packages or no packages respectively.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_python_disallow_native_rules","short":"","type":"boolean","default":"default: \"false\"","description":"    When true, an error occurs when using the builtin py_* rules; instead the \n    rule_python rules should be used. See https://github.\n    com/bazelbuild/bazel/issues/17773 for more information and migration \n    instructions.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_require_linker_input_cc_api","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, rule create_linking_context will require linker_inputs \n    instead of libraries_to_link. The old getters of linking_context will also \n    be disabled and just linker_inputs will be available.\n","tags":["build_file_semantics","loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_run_shell_command_string","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the command parameter of actions.run_shell will only accept \n    string\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_stop_exporting_language_modules","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, certain language-specific modules (such as `cc_common`) are \n    unavailable in user .bzl files and may only be called from their respective \n    rules repositories.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_struct_has_no_methods","short":"","type":"boolean","default":"default: \"false\"","description":"    Disables the to_json and to_proto methods of struct, which pollute the \n    struct field namespace. Instead, use json.encode or json.encode_indent for \n    JSON, or proto.encode_text for textproto.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"incompatible_top_level_aspects_require_providers","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, the top level aspect will honor its required providers and \n    only run on top level targets whose rules' advertised providers satisfy the \n    required providers of the aspect.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_unambiguous_label_stringification","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel will stringify the label @//foo:bar to @//foo:bar, instead \n    of //foo:bar. This only affects the behavior of str(), the % operator, and \n    so on; the behavior of repr() is unchanged. See https://github.\n    com/bazelbuild/bazel/issues/15916 for more information.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_use_cc_configure_from_rules_cc","short":"","type":"boolean","default":"default: \"false\"","description":"    When true, Bazel will no longer allow using cc_configure from @bazel_tools. \n    Please see https://github.com/bazelbuild/bazel/issues/10134 for details and \n    migration instructions.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_use_plus_in_repo_names","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, uses the plus sign (+) as the separator in canonical repo names, \n    instead of the tilde (~). This is to address severe performance issues on \n    Windows; see https://github.com/bazelbuild/bazel/issues/22865 for more \n    information.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"incompatible_visibility_private_attributes_at_definition","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, the visibility of private rule attributes is checked with \n    respect to the rule definition, falling back to rule usage if not visible.\n","tags":["build_file_semantics","incompatible_change"],"sources":[]},{"name":"max_computation_steps","short":"","type":"long integer","default":"default: \"0\"","description":"    The maximum number of Starlark computation steps that may be executed by a \n    BUILD file (zero means no limit).\n","tags":["build_file_semantics"],"sources":[]},{"name":"nested_set_depth_limit","short":"","type":"integer","default":"default: \"3500\"","description":"    The maximum depth of the graph internal to a depset (also known as \n    NestedSet), above which the depset() constructor will fail.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"repositories_without_autoloads","short":"","type":"comma-separated set of options","default":"default: \"\"","description":"    A list of additional repositories (beyond the hardcoded ones Bazel knows \n    about) where autoloads are not to be added. This should typically contain \n    repositories that are transitively depended on by a repository that may be \n    loaded automatically (and which can therefore potentially create a cycle).\n","tags":["loses_incremental_state","build_file_semantics","incompatible_change"],"sources":[]},{"name":"allow_analysis_failures","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, an analysis failure of a rule target results in the target's \n    propagation of an instance of AnalysisFailureInfo containing the error \n    description, instead of resulting in a build failure.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"analysis_testing_deps_limit","short":"","type":"integer","default":"default: \"2000\"","description":"    Sets the maximum number of transitive dependencies through a rule attribute \n    with a for_analysis_testing configuration transition. Exceeding this limit \n    will result in a rule error.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"break_build_on_parallel_dex2oat_failure","short":"","type":"boolean","default":"default: \"false\"","description":"    If true dex2oat action failures will cause the build to break instead of \n    executing dex2oat during test runtime.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"check_tests_up_to_date","short":"","type":"boolean","default":"default: \"false\"","description":"    Don't run tests, just check if they are up-to-date.  If all tests results \n    are up-to-date, the testing completes successfully.  If any test needs to \n    be built or executed, an error is reported and the testing fails.  This \n    option implies --check_up_to_date behavior.\n      Using this option will also add: --check_up_to_date \n","tags":["execution"],"sources":[]},{"name":"default_test_resources","short":"","type":"resource name followed by equal and 1 float or 4 float, e.g memory=10,30,60,100","default":"may be used multiple times","description":"Override the default resources amount for tests. The expected format is \u003cresource\u003e=\u003cvalue\u003e. If a single positive number is specified as \u003cvalue\u003e it will override the default resources for all test sizes. If 4 comma-separated numbers are specified, they will override the resource amount for respectively the small, medium, large, enormous test sizes. Values can also be HOST_RAM/HOST_CPU, optionally followed by [-|*]\u003cfloat\u003e (eg. memory=HOST_RAM*.1,HOST_RAM*.2,HOST_RAM*.3,HOST_RAM*.4). The default test resources specified by this flag are overridden by explicit resources specified in tags.","tags":[],"sources":[]},{"name":"experimental_android_use_parallel_dex2oat","short":"","type":"boolean","default":"default: \"false\"","description":"    Use dex2oat in parallel to possibly speed up android_test.\n","tags":["loading_and_analysis","host_machine_resource_optimizations","\n      experimental"],"sources":[]},{"name":"flaky_test_attempts","short":"","type":"positive integer, the string \"default\", or test_regex@attempts. This flag may be passed more than once","default":"may be used multiple times","description":"    Each test will be retried up to the specified number of times in case of \n    any test failure. Tests that required more than one attempt to pass are \n    marked as 'FLAKY' in the test summary. Normally the value specified is just \n    an integer or the string 'default'. If an integer, then all tests will be \n    run up to N times. If 'default', then only a single test attempt will be \n    made for regular tests and three for tests marked explicitly as flaky by \n    their rule (flaky=1 attribute). Alternate syntax: \n    regex_filter@flaky_test_attempts. Where flaky_test_attempts is as above and \n    regex_filter stands for a list of include and exclude regular expression \n    patterns (Also see --runs_per_test). Example: --flaky_test_attempts=//foo/.\n    *,-//foo/bar/.*@3 deflakes all tests in //foo/ except those under foo/bar \n    three times. This option can be passed multiple times. The most recently \n    passed argument that matches takes precedence. If nothing matches, behavior \n    is as if 'default' above.\n","tags":["execution"],"sources":[]},{"name":"ios_memleaks","short":"","type":"boolean","default":"default: \"false\"","description":"    Enable checking for memory leaks in ios_test targets.\n","tags":["action_command_lines"],"sources":[]},{"name":"ios_simulator_device","short":"","type":"string","default":"default: see description","description":"    The device to simulate when running an iOS application in the simulator, e.\n    g. 'iPhone 6'. You can get a list of devices by running 'xcrun simctl list \n    devicetypes' on the machine the simulator will be run on.\n","tags":["test_runner"],"sources":[]},{"name":"ios_simulator_version","short":"","type":"dotted version (for example '2.3' or '3.3alpha2.4')","default":"default: see description","description":"    The version of iOS to run on the simulator when running or testing. This is \n    ignored for ios_test rules if a target device is specified in the rule.\n","tags":["test_runner"],"sources":[]},{"name":"local_test_jobs","short":"","type":"integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"default: \"auto\"","description":"    The max number of local test jobs to run concurrently. Takes an integer, or \n    a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an \n    operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\". 0 means local \n    resources will limit the number of local test jobs to run concurrently \n    instead. Setting this greater than the value for --jobs is ineffectual.\n","tags":["execution"],"sources":[]},{"name":"runs_per_test","short":"","type":"positive integer or test_regex@runs. This flag may be passed more than once","default":"may be used multiple times","description":"Specifies number of times to run each test. If any of those attempts fail for any reason, the whole test is considered failed. Normally the value specified is just an integer. Example: --runs_per_test=3 will run all tests 3 times. Alternate syntax: regex_filter@runs_per_test. Where runs_per_test stands for an integer value and regex_filter stands for a list of include and exclude regular expression patterns (Also see --instrumentation_filter). Example: --runs_per_test=//foo/.*,-//foo/bar/.*@3 runs all tests in //foo/ except those under foo/bar three times. This option can be passed multiple times. The most recently passed argument that matches takes precedence. If nothing matches, the test is only run once.","tags":[],"sources":[]},{"name":"test_env","short":"","type":"'name=value' assignment with an optional value part","default":"may be used multiple times","description":"    Specifies additional environment variables to be injected into the test \n    runner environment. Variables can be either specified by name, in which \n    case its value will be read from the Bazel client environment, or by the \n    name=value pair. This option can be used multiple times to specify several \n    variables. Used only by the 'bazel test' command.\n","tags":["test_runner"],"sources":[]},{"name":"test_keep_going","short":"","type":"boolean","default":"default: \"true\"","description":"    When disabled, any non-passing test will cause the entire build to stop. By \n    default all tests are run, even if some do not pass.\n","tags":["execution"],"sources":[]},{"name":"test_strategy","short":"","type":"string","default":"default: \"\"","description":"    Specifies which strategy to use when running tests.\n","tags":["execution"],"sources":[]},{"name":"test_timeout","short":"","type":"single integer or comma-separated list of 4 integers","default":"default: \"-1\"","description":"Override the default test timeout values for test timeouts (in secs). If a single positive integer value is specified it will override all categories.  If 4 comma-separated integers are specified, they will override the timeouts for short, moderate, long and eternal (in that order). In either form, a value of -1 tells blaze to use its default timeouts for that category.","tags":[],"sources":[]},{"name":"test_tmpdir","short":"","type":"path","default":"default: see description","description":"Specifies the base temporary directory for 'bazel test' to use.","tags":[],"sources":[]},{"name":"zip_undeclared_test_outputs","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, undeclared test outputs will be archived in a zip file.\n","tags":["test_runner"],"sources":[]},{"name":"experimental_parallel_aquery_output","short":"","type":"boolean","default":"default: \"true\"","description":"No-op.","tags":[],"sources":[]},{"name":"allow_yanked_versions","short":"","type":"string","default":"may be used multiple times","description":"    Specified the module versions in the form of `\u003cmodule1\u003e@\u003cversion1\u003e,\n    \u003cmodule2\u003e@\u003cversion2\u003e` that will be allowed in the resolved dependency graph \n    even if they are declared yanked in the registry where they come from (if \n    they are not coming from a NonRegistryOverride). Otherwise, yanked versions \n    will cause the resolution to fail. You can also define allowed yanked \n    version with the `BZLMOD_ALLOW_YANKED_VERSIONS` environment variable. You \n    can disable this check by using the keyword 'all' (not recommended).\n","tags":["loading_and_analysis"],"sources":[]},{"name":"check_bazel_compatibility","short":"","type":"error, warning or off","default":"default: \"error\"","description":"    Check bazel version compatibility of Bazel modules. Valid values are \n    `error` to escalate it to a resolution failure, `off` to disable the check, \n    or `warning` to print a warning when mismatch detected.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"check_direct_dependencies","short":"","type":"off, warning or error","default":"default: \"warning\"","description":"    Check if the direct `bazel_dep` dependencies declared in the root module \n    are the same versions you get in the resolved dependency graph. Valid \n    values are `off` to disable the check, `warning` to print a warning when \n    mismatch detected or `error` to escalate it to a resolution failure.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"ignore_dev_dependency","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, Bazel ignores `bazel_dep` and `use_extension` declared as \n    `dev_dependency` in the MODULE.bazel of the root module. Note that, those \n    dev dependencies are always ignored in the MODULE.bazel if it's not the \n    root module regardless of the value of this flag.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"lockfile_mode","short":"","type":"off, update, refresh or error","default":"default: \"update\"","description":"    Specifies how and whether or not to use the lockfile. Valid values are \n    `update` to use the lockfile and update it if there are changes, `refresh` \n    to additionally refresh mutable information (yanked versions and previously \n    missing modules) from remote registries from time to time, `error` to use \n    the lockfile but throw an error if it's not up-to-date, or `off` to neither \n    read from or write to the lockfile.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"override_module","short":"","type":"equals-separated mapping of module name to path","default":"may be used multiple times","description":"Override a module with a local path in the form of \u003cmodule name\u003e=\u003cpath\u003e. If the given path is an absolute path, it will be used as it is. If the given path is a relative path, it is relative to the current working directory. If the given path starts with '%workspace%, it is relative to the workspace root, which is the output of `bazel info workspace`. If the given path is empty, then remove any previous overrides.","tags":[],"sources":[]},{"name":"registry","short":"","type":"string","default":"may be used multiple times","description":"    Specifies the registries to use to locate Bazel module dependencies. The \n    order is important: modules will be looked up in earlier registries first, \n    and only fall back to later registries when they're missing from the \n    earlier ones.\n","tags":["changes_inputs"],"sources":[]},{"name":"vendor_dir","short":"","type":"path","default":"default: see description","description":"    Specifies the directory that should hold the external repositories in \n    vendor mode, whether for the purpose of fetching them into it or using them \n    while building. The path can be specified as either an absolute path or a \n    path relative to the workspace directory.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"cache_computed_file_digests","short":"","type":"long integer","default":"default: \"50000\"","description":"If greater than 0, configures Bazel to cache file digests in memory based on their metadata instead of recomputing the digests from disk every time they are needed. Setting this to 0 ensures correctness because not all file changes can be noted from file metadata. When not 0, the number indicates the size of the cache as the number of file digests to be cached.","tags":[],"sources":[]},{"name":"experimental_dynamic_ignore_local_signals","short":"","type":"comma-separated list of signal numbers","default":"default: see description","description":"    Takes a list of OS signal numbers. If a local branch of dynamic execution \n    gets killed with any of these signals, the remote branch will be allowed to \n    finish instead. For persistent workers, this only affects signals that kill \n    the worker process.\n","tags":["execution"],"sources":[]},{"name":"experimental_filter_library_jar_with_program_jar","short":"","type":"boolean","default":"default: \"false\"","description":"    Filter the ProGuard ProgramJar to remove any classes also present in the \n    LibraryJar.\n","tags":["action_command_lines"],"sources":[]},{"name":"experimental_inmemory_dotd_files","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, C++ .d files will be passed through in memory directly from the \n    remote build nodes instead of being written to disk.\n","tags":["loading_and_analysis","execution","affects_outputs","experimental"],"sources":[]},{"name":"experimental_inmemory_jdeps_files","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, the dependency (.jdeps) files generated from Java compilations \n    will be passed through in memory directly from the remote build nodes \n    instead of being written to disk.\n","tags":["loading_and_analysis","execution","affects_outputs","experimental"],"sources":[]},{"name":"experimental_objc_include_scanning","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to perform include scanning for objective C/C++.\n","tags":["loading_and_analysis","execution","changes_inputs"],"sources":[]},{"name":"experimental_retain_test_configuration_across_testonly","short":"","type":"boolean","default":"default: \"false\"","description":"    When enabled, --trim_test_configuration will not trim the test \n    configuration for rules marked testonly=1. This is meant to reduce action \n    conflict issues when non-test rules depend on cc_test rules. No effect if --\n    trim_test_configuration is false.\n","tags":["loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"experimental_starlark_cc_import","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the Starlark version of cc_import can be used.\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_unsupported_and_brittle_include_scanning","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to narrow inputs to C/C++ compilation by parsing #include lines \n    from input files. This can improve performance and incrementality by \n    decreasing the size of compilation input trees. However, it can also break \n    builds because the include scanner does not fully implement C preprocessor \n    semantics. In particular, it does not understand dynamic #include \n    directives and ignores preprocessor conditional logic. Use at your own \n    risk. Any issues relating to this flag that are filed will be closed.\n","tags":["loading_and_analysis","execution","changes_inputs"],"sources":[]},{"name":"gc_thrashing_limits","short":"","type":"comma separated pairs of \u003cperiod\u003e:\u003ccount\u003e","default":"default: \"1s:2,20s:3,1m:5\"","description":"    Limits which, if reached, cause GcThrashingDetector to crash Bazel with an \n    OOM. Each limit is specified as \u003cperiod\u003e:\u003ccount\u003e where period is a duration \n    and count is a positive integer. If more than --gc_thrashing_threshold \n    percent of tenured space (old gen heap) remains occupied after \u003ccount\u003e \n    consecutive full GCs within \u003cperiod\u003e, an OOM is triggered. Multiple limits \n    can be specified separated by commas.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"heuristically_drop_nodes","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, Blaze will remove FileState and DirectoryListingState nodes after \n    related File and DirectoryListing node is done to save memory. We expect \n    that it is less likely that these nodes will be needed again. If so, the \n    program will re-evaluate them.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"incompatible_do_not_split_linking_cmdline","short":"","type":"boolean","default":"default: \"true\"","description":"    When true, Bazel no longer modifies command line flags used for linking, \n    and also doesn't selectively decide which flags go to the param file and \n    which don't.  See https://github.com/bazelbuild/bazel/issues/7670 for \n    details.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incremental_dexing","short":"","type":"boolean","default":"default: \"true\"","description":"    Does most of the work for dexing separately for each Jar file.\n","tags":["affects_outputs","loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"keep_state_after_build","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will discard the inmemory state from this build when the \n    build finishes. Subsequent builds will not have any incrementality with \n    respect to this one.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"local_cpu_resources","short":"","type":"integer, or \"HOST_CPUS\", optionally followed by [-|*]\u003cfloat\u003e.","default":"default: \"HOST_CPUS\"","description":"    Explicitly set the total number of local CPU cores available to Bazel to \n    spend on build actions executed locally. Takes an integer, or \"HOST_CPUS\", \n    optionally followed by [-|*]\u003cfloat\u003e (eg. HOST_CPUS*.5 to use half the \n    available CPU cores). By default, (\"HOST_CPUS\"), Bazel will query system \n    configuration to estimate the number of CPU cores available.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"local_extra_resources","short":"","type":"named float, 'name=value'","default":"may be used multiple times","description":"    Set the number of extra resources available to Bazel. Takes in a string-\n    float pair. Can be used multiple times to specify multiple types of extra \n    resources. Bazel will limit concurrently running actions based on the \n    available extra resources and the extra resources required. Tests can \n    declare the amount of extra resources they need by using a tag of the \n    \"resources:\u003cresoucename\u003e:\u003camount\u003e\" format. Available CPU, RAM and resources \n    cannot be set with this flag.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"local_ram_resources","short":"","type":"integer number of MBs, or \"HOST_RAM\", optionally followed by [-|*]\u003cfloat\u003e.","default":"default: \"HOST_RAM*.67\"","description":"    Explicitly set the total amount of local host RAM (in MB) available to \n    Bazel to spend on build actions executed locally. Takes an integer, or \n    \"HOST_RAM\", optionally followed by [-|*]\u003cfloat\u003e (eg. HOST_RAM*.5 to use \n    half the available RAM). By default, (\"HOST_RAM*.67\"), Bazel will query \n    system configuration to estimate the amount of RAM available and will use \n    67% of it.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"local_resources","short":"","type":"named double, 'name=value', where value is an integer, or a keyword (\"auto\", \"HOST_CPUS\", \"HOST_RAM\"), optionally followed by an operation ([-|*]\u003cfloat\u003e) eg. \"auto\", \"HOST_CPUS*.5\"","default":"may be used multiple times","description":"    Set the number of resources available to Bazel. Takes in an assignment to a \n    float or HOST_RAM/HOST_CPUS, optionally followed by [-|*]\u003cfloat\u003e (eg. \n    memory=HOST_RAM*.5 to use half the available RAM). Can be used multiple \n    times to specify multiple types of resources. Bazel will limit concurrently \n    running actions based on the available resources and the resources \n    required. Tests can declare the amount of resources they need by using a \n    tag of the \"resources:\u003cresource name\u003e:\u003camount\u003e\" format. Overrides resources \n    specified by --local_{cpu|ram|extra}_resources.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"objc_use_dotd_pruning","short":"","type":"boolean","default":"default: \"true\"","description":"    If set, .d files emitted by clang will be used to prune the set of inputs \n    passed into objc compiles.\n","tags":["changes_inputs","loading_and_analysis"],"sources":[]},{"name":"process_headers_in_dependencies","short":"","type":"boolean","default":"default: \"false\"","description":"    When building a target //a:a, process headers in all targets that //a:a \n    depends on (if header processing is enabled for the toolchain).\n","tags":["execution"],"sources":[]},{"name":"skyframe_high_water_mark_full_gc_drops_per_invocation","short":"","type":"integer, \u003e= 0","default":"default: \"2147483647\"","description":"    Flag for advanced configuration of Bazel's internal Skyframe engine. If \n    Bazel detects its retained heap percentage usage exceeds the threshold set \n    by --skyframe_high_water_mark_threshold, when a full GC event occurs, it \n    will drop unnecessary temporary Skyframe state, up to this many times per \n    invocation. Defaults to Integer.MAX_VALUE; effectively unlimited. Zero \n    means that full GC events will never trigger drops. If the limit is \n    reached, Skyframe state will no longer be dropped when a full GC event \n    occurs and that retained heap percentage threshold is exceeded.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"skyframe_high_water_mark_minor_gc_drops_per_invocation","short":"","type":"integer, \u003e= 0","default":"default: \"2147483647\"","description":"    Flag for advanced configuration of Bazel's internal Skyframe engine. If \n    Bazel detects its retained heap percentage usage exceeds the threshold set \n    by --skyframe_high_water_mark_threshold, when a minor GC event occurs, it \n    will drop unnecessary temporary Skyframe state, up to this many times per \n    invocation. Defaults to Integer.MAX_VALUE; effectively unlimited. Zero \n    means that minor GC events will never trigger drops. If the limit is \n    reached, Skyframe state will no longer be dropped when a minor GC event \n    occurs and that retained heap percentage threshold is exceeded.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"skyframe_high_water_mark_threshold","short":"","type":"integer","default":"default: \"85\"","description":"    Flag for advanced configuration of Bazel's internal Skyframe engine. If \n    Bazel detects its retained heap percentage usage is at least this \n    threshold, it will drop unnecessary temporary Skyframe state. Tweaking this \n    may let you mitigate wall time impact of GC thrashing, when the GC \n    thrashing is (i) caused by the memory usage of this temporary state and \n    (ii) more costly than reconstituting the state when it is needed.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"track_incremental_state","short":"","type":"boolean","default":"default: \"true\"","description":"    If false, Blaze will not persist data that allows for invalidation and re-\n    evaluation on incremental builds in order to save memory on this build. \n    Subsequent builds will not have any incrementality with respect to this \n    one. Usually you will want to specify --batch when setting this to false.\n","tags":["loses_incremental_state"],"sources":[]},{"name":"trim_test_configuration","short":"","type":"boolean","default":"default: \"true\"","description":"    When enabled, test-related options will be cleared below the top level of \n    the build. When this flag is active, tests cannot be built as dependencies \n    of non-test rules, but changes to test-related options will not cause non-\n    test rules to be re-analyzed.\n","tags":["loading_and_analysis","loses_incremental_state"],"sources":[]},{"name":"announce_rc","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to announce rc options.\n","tags":["affects_outputs"],"sources":[]},{"name":"attempt_to_print_relative_paths","short":"","type":"boolean","default":"default: \"false\"","description":"    When printing the location part of messages, attempt to use a path relative \n    to the workspace directory or one of the directories specified by --\n    package_path.\n","tags":["terminal_output"],"sources":[]},{"name":"bes_backend","short":"","type":"string","default":"default: \"\"","description":"    Specifies the build event service (BES) backend endpoint in the form \n    [SCHEME://]HOST[:PORT]. The default is to disable BES uploads. Supported \n    schemes are grpc and grpcs (grpc with TLS enabled). If no scheme is \n    provided, Bazel assumes grpcs.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_check_preceding_lifecycle_events","short":"","type":"boolean","default":"default: \"false\"","description":"    Sets the field check_preceding_lifecycle_events_present on \n    PublishBuildToolEventStreamRequest which tells BES to check whether it \n    previously received InvocationAttemptStarted and BuildEnqueued events \n    matching the current tool event.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Specify a header in NAME=VALUE form that will be included in BES requests. \n    Multiple headers can be passed by specifying the flag multiple times. \n    Multiple values for the same name will be converted to a comma-separated \n    list.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_instance_name","short":"","type":"string","default":"default: see description","description":"    Specifies the instance name under which the BES will persist uploaded BEP. \n    Defaults to null.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_keywords","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Specifies a list of notification keywords to be added the default set of \n    keywords published to BES (\"command_name=\u003ccommand_name\u003e \", \n    \"protocol_name=BEP\"). Defaults to none.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_lifecycle_events","short":"","type":"boolean","default":"default: \"true\"","description":"    Specifies whether to publish BES lifecycle events. (defaults to 'true').\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_oom_finish_upload_timeout","short":"","type":"An immutable length of time.","default":"default: \"10m\"","description":"    Specifies how long bazel should wait for the BES/BEP upload to complete \n    while OOMing. This flag ensures termination when the JVM is severely GC \n    thrashing and cannot make progress on any user thread.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"bes_outerr_buffer_size","short":"","type":"integer","default":"default: \"10240\"","description":"    Specifies the maximal size of stdout or stderr to be buffered in BEP, \n    before it is reported as a progress event. Individual writes are still \n    reported in a single event, even if larger than the specified value up to --\n    bes_outerr_chunk_size.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_outerr_chunk_size","short":"","type":"integer","default":"default: \"1048576\"","description":"    Specifies the maximal size of stdout or stderr to be sent to BEP in a \n    single message.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_proxy","short":"","type":"string","default":"default: see description","description":"Connect to the Build Event Service through a proxy. Currently this flag can only be used to configure a Unix domain socket (unix:/path/to/socket).","tags":[],"sources":[]},{"name":"bes_results_url","short":"","type":"string","default":"default: \"\"","description":"    Specifies the base URL where a user can view the information streamed to \n    the BES backend. Bazel will output the URL appended by the invocation id to \n    the terminal.\n","tags":["terminal_output"],"sources":[]},{"name":"bes_system_keywords","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"    Specifies a list of notification keywords to be included directly, without \n    the \"user_keyword=\" prefix included for keywords supplied via --\n    bes_keywords. Intended for Build service operators that set --\n    bes_lifecycle_events=false and include keywords when calling \n    PublishLifecycleEvent. Build service operators using this flag should \n    prevent users from overriding the flag value.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_timeout","short":"","type":"An immutable length of time.","default":"default: \"0s\"","description":"    Specifies how long bazel should wait for the BES/BEP upload to complete \n    after the build and tests have finished. A valid timeout is a natural \n    number followed by a unit: Days (d), hours (h), minutes (m), seconds (s), \n    and milliseconds (ms). The default value is '0' which means that there is \n    no timeout.\n","tags":["affects_outputs"],"sources":[]},{"name":"bes_upload_mode","short":"","type":"wait_for_upload_complete, nowait_for_upload_complete or fully_async","default":"default: \"wait_for_upload_complete\"","description":"    Specifies whether the Build Event Service upload should block the build \n    completion or should end the invocation immediately and finish the upload \n    in the background. Either 'wait_for_upload_complete' (default), \n    'nowait_for_upload_complete', or 'fully_async'.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"build_event_binary_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a varint delimited binary representation of \n    representation of the build event protocol to that file. This option \n    implies --bes_upload_mode=wait_for_upload_complete.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the binary file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_binary_file_upload_mode","short":"","type":"wait_for_upload_complete, nowait_for_upload_complete or fully_async","default":"default: \"wait_for_upload_complete\"","description":"    Specifies whether the Build Event Service upload for --\n    build_event_binary_file should block the build completion or should end the \n    invocation immediately and finish the upload in the background. Either \n    'wait_for_upload_complete' (default), 'nowait_for_upload_complete', or \n    'fully_async'.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"build_event_json_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a JSON serialisation of the build event protocol to \n    that file. This option implies --bes_upload_mode=wait_for_upload_complete.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_json_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the json file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_json_file_upload_mode","short":"","type":"wait_for_upload_complete, nowait_for_upload_complete or fully_async","default":"default: \"wait_for_upload_complete\"","description":"    Specifies whether the Build Event Service upload for --\n    build_event_json_file should block the build completion or should end the \n    invocation immediately and finish the upload in the background. Either \n    'wait_for_upload_complete' (default), 'nowait_for_upload_complete', or \n    'fully_async'.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"build_event_max_named_set_of_file_entries","short":"","type":"integer","default":"default: \"-1\"","description":"    The maximum number of entries for a single named_set_of_files event; values \n    smaller than 2 are ignored and no event splitting is performed. This is \n    intended for limiting the maximum event size in the build event protocol, \n    although it does not directly control event size. The total event size is a \n    function of the structure of the set as well as the file and uri lengths, \n    which may in turn depend on the hash function.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_publish_all_actions","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether all actions should be published.\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a textual representation of the build event protocol to \n    that file\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file_path_conversion","short":"","type":"boolean","default":"default: \"true\"","description":"    Convert paths in the text file representation of the build event protocol \n    to more globally valid URIs whenever possible; if disabled, the file:// uri \n    scheme will always be used\n","tags":["affects_outputs"],"sources":[]},{"name":"build_event_text_file_upload_mode","short":"","type":"wait_for_upload_complete, nowait_for_upload_complete or fully_async","default":"default: \"wait_for_upload_complete\"","description":"    Specifies whether the Build Event Service upload for --\n    build_event_text_file should block the build completion or should end the \n    invocation immediately and finish the upload in the background. Either \n    'wait_for_upload_complete' (default), 'nowait_for_upload_complete', or \n    'fully_async'.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"experimental_announce_profile_path","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, adds the JSON profile path to the log.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_bep_target_summary","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to publish TargetSummary events.","tags":[],"sources":[]},{"name":"experimental_build_event_expand_filesets","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, expand Filesets in the BEP when presenting output files.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_build_event_fully_resolve_fileset_symlinks","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, fully resolve relative Fileset symlinks in the BEP when presenting \n    output files. Requires --experimental_build_event_expand_filesets.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_build_event_upload_max_retries","short":"","type":"integer","default":"default: \"4\"","description":"    The maximum number of times Bazel should retry uploading a build event.\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_build_event_upload_retry_minimum_delay","short":"","type":"An immutable length of time.","default":"default: \"1s\"","description":"    Initial, minimum delay for exponential backoff retries when BEP upload \n    fails. (exponent: 1.6)\n","tags":["bazel_internal_configuration"],"sources":[]},{"name":"experimental_build_event_upload_strategy","short":"","type":"string","default":"default: see description","description":"    Selects how to upload artifacts referenced in the build event protocol.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_collect_load_average_in_profiler","short":"","type":"boolean","default":"default: \"true\"","description":"    If enabled, the profiler collects the system's overall load average.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_collect_local_sandbox_action_metrics","short":"","type":"boolean","default":"default: \"true\"","description":"    Deprecated no-op.\n","tags":["execution"],"sources":[]},{"name":"experimental_collect_pressure_stall_indicators","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the profiler collects the Linux PSI data.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_collect_resource_estimation","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the profiler collects CPU and memory usage estimation for local \n    actions.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_collect_system_network_usage","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the profiler collects the system's network usage.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_collect_worker_data_in_profiler","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, the profiler collects worker's aggregated resource data.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_command_profile","short":"","type":"cpu, wall, alloc or lock","default":"default: see description","description":"Records a Java Flight Recorder profile for the duration of the command. One of the supported profiling event types (cpu, wall, alloc or lock) must be given as an argument. The profile is written to a file named after the event type under the output base directory. The syntax and semantics of this flag might change in the future to support additional profile types or output formats; use at your own risk.","tags":[],"sources":[]},{"name":"experimental_docker_verbose","short":"","type":"boolean","default":"default: \"false\"","description":"    If enabled, Bazel will print more verbose messages about the Docker sandbox \n    strategy.\n","tags":["execution"],"sources":[]},{"name":"experimental_materialize_param_files_directly","short":"","type":"boolean","default":"default: \"false\"","description":"    If materializing param files, do so with direct writes to disk.\n","tags":["execution"],"sources":[]},{"name":"experimental_profile_additional_tasks","short":"","type":"phase, action, action_check, action_lock, action_release, action_update, action_complete, bzlmod, info, create_package, remote_execution, local_execution, scanner, local_parse, upload_time, remote_process_time, remote_queue, remote_setup, fetch, local_process_time, vfs_stat, vfs_dir, vfs_readlink, vfs_md5, vfs_xattr, vfs_delete, vfs_open, vfs_read, vfs_write, vfs_glob, vfs_vmfs_stat, vfs_vmfs_dir, vfs_vmfs_read, wait, thread_name, thread_sort_index, skyframe_eval, skyfunction, critical_path, critical_path_component, handle_gc_notification, action_counts, action_cache_counts, local_cpu_usage, system_cpu_usage, cpu_usage_estimation, local_memory_usage, system_memory_usage, memory_usage_estimation, system_network_up_usage, system_network_down_usage, workers_memory_usage, system_load_average, starlark_parser, starlark_user_fn, starlark_builtin_fn, starlark_user_compiled_fn, starlark_repository_fn, action_fs_staging, remote_cache_check, remote_download, remote_network, filesystem_traversal, worker_execution, worker_setup, worker_borrow, worker_working, worker_copying_outputs, credential_helper, pressure_stall_io, pressure_stall_memory, conflict_check, dynamic_lock, repository_fetch, repository_vendor or unknown","default":"may be used multiple times","description":"    Specifies additional profile tasks to be included in the profile.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_profile_include_primary_output","short":"","type":"boolean","default":"default: \"false\"","description":"    Includes the extra \"out\" attribute in action events that contains the exec \n    path to the action's primary output.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_profile_include_target_label","short":"","type":"boolean","default":"default: \"false\"","description":"    Includes target label in action events' JSON profile data.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"experimental_record_metrics_for_all_mnemonics","short":"","type":"boolean","default":"default: \"false\"","description":"By default the number of action types is limited to the 20 mnemonics with the largest number of executed actions. Setting this option will write statistics for all mnemonics.","tags":[],"sources":[]},{"name":"experimental_repository_resolved_file","short":"","type":"string","default":"default: \"\"","description":"    If non-empty, write a Starlark value with the resolved information of all \n    Starlark repository rules that were executed.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_run_bep_event_include_residue","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to include the command-line residue in run build events which could \n    contain the residue. By default, the residue is not included in run command \n    build events that could contain the residue.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_stream_log_file_uploads","short":"","type":"boolean","default":"default: \"false\"","description":"    Stream log file uploads directly to the remote storage rather than writing \n    them to disk.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_workspace_rules_log_file","short":"","type":"path","default":"default: see description","description":"Log certain Workspace Rules events into this file as delimited WorkspaceEvent protos.","tags":[],"sources":[]},{"name":"explain","short":"","type":"path","default":"default: see description","description":"    Causes the build system to explain each executed step of the build. The \n    explanation is written to the specified log file.\n","tags":["affects_outputs"],"sources":[]},{"name":"generate_json_trace_profile","short":"","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"    If enabled, Bazel profiles the build and writes a JSON-format profile into \n    a file in the output base. View profile by loading into chrome://tracing. \n    By default Bazel writes the profile for all build-like commands and query.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"heap_dump_on_oom","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to manually output a heap dump if an OOM is thrown (including \n    manual OOMs due to reaching --gc_thrashing_limits). The dump will be \n    written to \u003coutput_base\u003e/\u003cinvocation_id\u003e.heapdump.hprof. This option \n    effectively replaces -XX:+HeapDumpOnOutOfMemoryError, which has no effect \n    for manual OOMs.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"ignore_unsupported_sandboxing","short":"","type":"boolean","default":"default: \"false\"","description":"    Do not print a warning when sandboxed execution is not supported on this \n    system.\n","tags":["terminal_output"],"sources":[]},{"name":"legacy_important_outputs","short":"","type":"boolean","default":"default: \"true\"","description":"    Use this to suppress generation of the legacy important_outputs field in \n    the TargetComplete event. important_outputs are required for Bazel to \n    ResultStore integration.\n","tags":["affects_outputs"],"sources":[]},{"name":"logging","short":"","type":"0 \u003c= an integer \u003c= 6","default":"default: \"3\"","description":"    The logging level.\n","tags":["affects_outputs"],"sources":[]},{"name":"materialize_param_files","short":"","type":"boolean","default":"default: \"false\"","description":"    Writes intermediate parameter files to output tree even when using remote \n    action execution. Useful when debugging actions. This is implied by --\n    subcommands and --verbose_failures.\n","tags":["execution"],"sources":[]},{"name":"max_config_changes_to_show","short":"","type":"integer","default":"default: \"3\"","description":"    When discarding the analysis cache due to a change in the build options, \n    displays up to the given number of changed option names. If the number \n    given is -1, all changed options will be displayed.\n","tags":["terminal_output"],"sources":[]},{"name":"max_test_output_bytes","short":"","type":"integer","default":"default: \"-1\"","description":"    Specifies maximum per-test-log size that can be emitted when --test_output \n    is 'errors' or 'all'. Useful for avoiding overwhelming the output with \n    excessively noisy test output. The test header is included in the log size. \n    Negative values imply no limit. Output is all or nothing.\n","tags":["test_runner","terminal_output","execution"],"sources":[]},{"name":"memory_profile","short":"","type":"path","default":"default: see description","description":"    If set, write memory usage data to the specified file at phase ends and \n    stable heap to master log at end of build.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"memory_profile_stable_heap_parameters","short":"","type":"integers, separated by a comma expected in pairs","default":"default: \"1,0\"","description":"    Tune memory profile's computation of stable heap at end of build. Should be \n    and even number of  integers separated by commas. In each pair the first \n    integer is the number of GCs to perform. The second integer in each pair is \n    the number of seconds to wait between GCs. Ex: 2,4,4,0 would 2 GCs with a \n    4sec pause, followed by 4 GCs with zero second pause\n","tags":["bazel_monitoring"],"sources":[]},{"name":"output_filter","short":"","type":"valid Java regular expression","default":"default: see description","description":"    Only shows warnings and action outputs for rules with a name matching the \n    provided regular expression.\n","tags":["affects_outputs"],"sources":[]},{"name":"print_relative_test_log_paths","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, when printing the path to a test log, use relative path that makes \n    use of the 'testlogs' convenience symlink. N.B. - A subsequent \n    'build'/'test'/etc invocation with a different configuration can cause the \n    target of this symlink to change, making the path printed previously no \n    longer useful.\n","tags":["affects_outputs"],"sources":[]},{"name":"profile","short":"","type":"path","default":"default: see description","description":"    If set, profile Bazel and write data to the specified file. Use bazel \n    analyze-profile to analyze the profile.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"progress_report_interval","short":"","type":"integer in 0-3600 range","default":"default: \"0\"","description":"    The number of seconds to wait between reports on still running jobs. The \n    default value 0 means the first report will be printed after 10 seconds, \n    then 30 seconds and after that progress is reported once every minute. When \n    --curses is enabled, progress is reported every second.\n","tags":["affects_outputs"],"sources":[]},{"name":"record_full_profiler_data","short":"","type":"boolean","default":"default: \"false\"","description":"    By default, Bazel profiler will record only aggregated data for fast but \n    numerous events (such as statting the file). If this option is enabled, \n    profiler will record each event - resulting in more precise profiling data \n    but LARGE performance hit. Option only has effect if --profile used as well.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"remote_print_execution_messages","short":"","type":"failure, success or all","default":"default: \"failure\"","description":"    Choose when to print remote execution messages. Valid values are `failure`, \n    to print only on failures, `success` to print only on successes and `all` \n    to print always.\n","tags":["terminal_output"],"sources":[]},{"name":"sandbox_debug","short":"","type":"boolean","default":"default: \"false\"","description":"    Enables debugging features for the sandboxing feature. This includes two \n    things: first, the sandbox root contents are left untouched after a build; \n    and second, prints extra debugging information on execution. This can help \n    developers of Bazel or Starlark rules with debugging failures due to \n    missing input files, etc.\n","tags":["terminal_output"],"sources":[]},{"name":"show_result","short":"","type":"integer","default":"default: \"1\"","description":"    Show the results of the build.  For each target, state whether or not it \n    was brought up-to-date, and if so, a list of output files that were built.  \n    The printed files are convenient strings for copy+pasting to the shell, to \n    execute them.\n    This option requires an integer argument, which is the threshold number of \n    targets above which result information is not printed. Thus zero causes \n    suppression of the message and MAX_INT causes printing of the result to \n    occur always. The default is one.\n    If nothing was built for a target its results may be omitted to keep the \n    output under the threshold.\n","tags":["affects_outputs"],"sources":[]},{"name":"slim_profile","short":"","type":"boolean","default":"default: \"true\"","description":"    Slims down the size of the JSON profile by merging events if the profile \n    gets  too large.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"starlark_cpu_profile","short":"","type":"string","default":"default: \"\"","description":"    Writes into the specified file a pprof profile of CPU usage by all Starlark \n    threads.\n","tags":["bazel_monitoring"],"sources":[]},{"name":"subcommands","short":"s","type":"true, pretty_print or false","default":"default: \"false\"","description":"    Display the subcommands executed during a build. Related flags: --\n    execution_log_json_file, --execution_log_binary_file (for logging \n    subcommands to a file in a tool-friendly format).\n","tags":["terminal_output"],"sources":[]},{"name":"test_output","short":"","type":"summary, errors, all or streamed","default":"default: \"summary\"","description":"    Specifies desired output mode. Valid values are 'summary' to output only \n    test status summary, 'errors' to also print test logs for failed tests, \n    'all' to print logs for all tests and 'streamed' to output logs for all \n    tests in real time (this will force tests to be executed locally one at a \n    time regardless of --test_strategy value).\n","tags":["test_runner","terminal_output","execution"],"sources":[]},{"name":"test_summary","short":"","type":"short, terse, detailed, none or testcase","default":"default: \"short\"","description":"    Specifies the desired format of the test summary. Valid values are 'short' \n    to print information only about tests executed, 'terse', to print \n    information only about unsuccessful tests that were run, 'detailed' to \n    print detailed information about failed test cases, 'testcase' to print \n    summary in test case resolution, do not print detailed information about \n    failed test cases and 'none' to omit the summary.\n","tags":["terminal_output"],"sources":[]},{"name":"test_verbose_timeout_warnings","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, print additional warnings when the actual test execution time does \n    not match the timeout defined by the test (whether implied or explicit).\n","tags":["affects_outputs"],"sources":[]},{"name":"tool_tag","short":"","type":"string","default":"default: \"\"","description":"    A tool name to attribute this Bazel invocation to.\n","tags":["affects_outputs","bazel_monitoring"],"sources":[]},{"name":"toolchain_resolution_debug","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths","default":"default: \"-.*\"","description":"    Print debug information during toolchain resolution. The flag takes a \n    regex, which is checked against toolchain types and specific targets to see \n    which to debug. Multiple regexes may be  separated by commas, and then each \n    regex is checked separately. Note: The output of this flag is very complex \n    and will likely only be useful to experts in toolchain resolution.\n","tags":["terminal_output"],"sources":[]},{"name":"ui_event_filters","short":"","type":"Convert list of comma separated event kind to list of filters","default":"may be used multiple times","description":"    Specifies which events to show in the UI. It is possible to add or remove \n    events to the default ones using leading +/-, or override the default set \n    completely with direct assignment. The set of supported event kinds include \n    INFO, DEBUG, ERROR and more.\n","tags":["terminal_output"],"sources":[]},{"name":"verbose_explanations","short":"","type":"boolean","default":"default: \"false\"","description":"    Increases the verbosity of the explanations issued if --explain is enabled. \n    Has no effect if --explain is not enabled.\n","tags":["affects_outputs"],"sources":[]},{"name":"verbose_failures","short":"","type":"boolean","default":"default: \"false\"","description":"    If a command fails, print out the full command line.\n","tags":["terminal_output"],"sources":[]},{"name":"verbose_test_summary","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, print additional information (timing, number of failed runs, etc) \n    in the test summary.\n","tags":["affects_outputs"],"sources":[]},{"name":"aspects_parameters","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Specifies the values of the command-line aspects parameters. Each parameter \n    value is specified via \u003cparam_name\u003e=\u003cparam_value\u003e, for example \n    'my_param=my_val' where 'my_param' is a parameter of some aspect in --\n    aspects list or required by an aspect in the list. This option can be used \n    multiple times. However, it is not allowed to assign values to the same \n    parameter more than once.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_resolved_file_instead_of_workspace","short":"","type":"string","default":"default: \"\"","description":"    If non-empty read the specified resolved file instead of the WORKSPACE file\n","tags":["changes_inputs"],"sources":[]},{"name":"flag_alias","short":"","type":"'name=value' flag alias","default":"may be used multiple times","description":"    Sets a shorthand name for a Starlark flag. It takes a single key-value pair \n    in the form \"\u003ckey\u003e=\u003cvalue\u003e\" as an argument.\n","tags":["changes_inputs"],"sources":[]},{"name":"incompatible_default_to_explicit_init_py","short":"","type":"boolean","default":"default: \"false\"","description":"    This flag changes the default behavior so that __init__.py files are no \n    longer automatically created in the runfiles of Python targets. Precisely, \n    when a py_binary or py_test target has legacy_create_init set to \"auto\" \n    (the default), it is treated as false if and only if this flag is set. See \n    https://github.com/bazelbuild/bazel/issues/10076.\n","tags":["affects_outputs","incompatible_change"],"sources":[]},{"name":"incompatible_py2_outputs_are_suffixed","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, targets built in the Python 2 configuration will appear under an \n    output root that includes the suffix '-py2', while targets built for Python \n    3 will appear in a root with no Python-related suffix. This means that the \n    `bazel-bin` convenience symlink will point to Python 3 targets rather than \n    Python 2. If you enable this option it is also recommended to enable `--\n    incompatible_py3_is_default`.\n","tags":["affects_outputs","incompatible_change"],"sources":[]},{"name":"incompatible_py3_is_default","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, `py_binary` and `py_test` targets that do not set their \n    `python_version` (or `default_python_version`) attribute will default to \n    PY3 rather than to PY2. If you set this flag it is also recommended to set \n    `--incompatible_py2_outputs_are_suffixed`.\n","tags":["loading_and_analysis","affects_outputs","incompatible_change"],"sources":[]},{"name":"incompatible_use_python_toolchains","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, executable native Python rules will use the Python runtime \n    specified by the Python toolchain, rather than the runtime given by legacy \n    flags like --python_top.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"python_version","short":"","type":"PY2 or PY3","default":"default: see description","description":"    The Python major version mode, either `PY2` or `PY3`. Note that this is \n    overridden by `py_binary` and `py_test` targets (even if they don't \n    explicitly specify a version) so there is usually not much reason to supply \n    this flag.\n","tags":["loading_and_analysis","affects_outputs"],"sources":[]},{"name":"target_pattern_file","short":"","type":"string","default":"default: \"\"","description":"    If set, build will read patterns from the file named here, rather than on \n    the command line. It is an error to specify a file here as well as command-\n    line patterns.\n","tags":["changes_inputs"],"sources":[]},{"name":"experimental_circuit_breaker_strategy","short":"","type":"failure","default":"default: see description","description":"    Specifies the strategy for the circuit breaker to use. Available strategies \n    are \"failure\". On invalid value for the option the behavior same as the \n    option is not set.\n","tags":["execution"],"sources":[]},{"name":"experimental_downloader_config","short":"","type":"string","default":"default: see description","description":"Specify a file to configure the remote downloader with. This file consists of lines, each of which starts with a directive (`allow`, `block` or `rewrite`) followed by either a host name (for `allow` and `block`) or two patterns, one to match against, and one to use as a substitute URL, with back-references starting from `$1`. It is possible for multiple `rewrite` directives for the same URL to be give, and in this case multiple URLs will be returned.","tags":[],"sources":[]},{"name":"experimental_guard_against_concurrent_changes","short":"","type":"boolean","default":"default: \"false\"","description":"Turn this off to disable checking the ctime of input files of an action before uploading it to a remote cache. There may be cases where the Linux kernel delays writing of files, which could cause false positives.","tags":[],"sources":[]},{"name":"experimental_remote_cache_async","short":"","type":"boolean","default":"default: \"false\"","description":"If true, remote cache I/O will happen in the background instead of taking place as the part of a spawn.","tags":[],"sources":[]},{"name":"experimental_remote_cache_compression_threshold","short":"","type":"integer","default":"default: \"0\"","description":"The minimum blob size required to compress/decompress with zstd. Ineffectual unless --remote_cache_compression is set.","tags":[],"sources":[]},{"name":"experimental_remote_cache_eviction_retries","short":"","type":"integer","default":"default: \"0\"","description":"    The maximum number of attempts to retry if the build encountered a \n    transient remote cache error that would otherwise fail the build. Applies \n    for example when artifacts are evicted from the remote cache, or in certain \n    cache failure conditions. A non-zero value will implicitly set --\n    incompatible_remote_use_new_exit_code_for_lost_inputs to true. A new \n    invocation id will be generated for each attempt. If you generate \n    invocation id and provide it to Bazel with --invocation_id, you should not \n    use this flag. Instead, set flag --\n    incompatible_remote_use_new_exit_code_for_lost_inputs and check for the \n    exit code 39.\n","tags":["execution"],"sources":[]},{"name":"experimental_remote_cache_lease_extension","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, Bazel will extend the lease for outputs of remote actions during the build by sending `FindMissingBlobs` calls periodically to remote cache. The frequency is based on the value of `--experimental_remote_cache_ttl`.","tags":[],"sources":[]},{"name":"experimental_remote_cache_ttl","short":"","type":"An immutable length of time.","default":"default: \"3h\"","description":"    The guaranteed minimal TTL of blobs in the remote cache after their digests \n    are recently referenced e.g. by an ActionResult or FindMissingBlobs. Bazel \n    does several optimizations based on the blobs' TTL e.g. doesn't repeatedly \n    call GetActionResult in an incremental build. The value should be set \n    slightly less than the real TTL since there is a gap between when the \n    server returns the digests and when Bazel receives them.\n","tags":["execution"],"sources":[]},{"name":"experimental_remote_capture_corrupted_outputs","short":"","type":"path","default":"default: see description","description":"A path to a directory where the corrupted outputs will be captured to.","tags":[],"sources":[]},{"name":"experimental_remote_discard_merkle_trees","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, discard in-memory copies of the input root's Merkle tree and associated input mappings during calls to GetActionResult() and Execute(). This reduces memory usage significantly, but does require Bazel to recompute them upon remote cache misses and retries.","tags":[],"sources":[]},{"name":"experimental_remote_downloader","short":"","type":"string","default":"default: see description","description":"A Remote Asset API endpoint URI, to be used as a remote download proxy. The supported schemas are grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. See: https://github.com/bazelbuild/remote-apis/blob/master/build/bazel/remote/asset/v1/remote_asset.proto","tags":[],"sources":[]},{"name":"experimental_remote_downloader_local_fallback","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to fall back to the local downloader if remote downloader fails.","tags":[],"sources":[]},{"name":"experimental_remote_execution_keepalive","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to use keepalive for remote execution calls.","tags":[],"sources":[]},{"name":"experimental_remote_failure_rate_threshold","short":"","type":"integer in 0-100 range","default":"default: \"10\"","description":"    Sets the allowed number of failure rate in percentage for a specific time \n    window after which it stops calling to the remote cache/executor. By \n    default the value is 10. Setting this to 0 means no limitation.\n","tags":["execution"],"sources":[]},{"name":"experimental_remote_failure_window_interval","short":"","type":"An immutable length of time.","default":"default: \"60s\"","description":"    The interval in which the failure rate of the remote requests are computed. \n    On zero or negative value the failure duration is computed the whole \n    duration of the execution.Following units can be used: Days (d), hours (h), \n    minutes (m), seconds (s), and milliseconds (ms). If the unit is omitted, \n    the value is interpreted as seconds.\n","tags":["execution"],"sources":[]},{"name":"experimental_remote_mark_tool_inputs","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, Bazel will mark inputs as tool inputs for the remote executor. This can be used to implement remote persistent workers.","tags":[],"sources":[]},{"name":"experimental_remote_merkle_tree_cache","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, Merkle tree calculations will be memoized to improve the remote cache hit checking speed. The memory foot print of the cache is controlled by --experimental_remote_merkle_tree_cache_size.","tags":[],"sources":[]},{"name":"experimental_remote_merkle_tree_cache_size","short":"","type":"long integer","default":"default: \"1000\"","description":"The number of Merkle trees to memoize to improve the remote cache hit checking speed. Even though the cache is automatically pruned according to Java's handling of soft references, out-of-memory errors can occur if set too high. If set to 0  the cache size is unlimited. Optimal value varies depending on project's size. Default to 1000.","tags":[],"sources":[]},{"name":"experimental_remote_output_service","short":"","type":"string","default":"default: see description","description":"HOST or HOST:PORT of a remote output service endpoint. The supported schemas are grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. Specify grpc:// or unix: schema to disable TLS.","tags":[],"sources":[]},{"name":"experimental_remote_output_service_output_path_prefix","short":"","type":"string","default":"default: \"\"","description":"The path under which the contents of output directories managed by the --experimental_remote_output_service are placed. The actual output directory used by a build will be a descendant of this path and determined by the output service.","tags":[],"sources":[]},{"name":"experimental_remote_require_cached","short":"","type":"boolean","default":"default: \"false\"","description":"If set to true, enforce that all actions that can run remotely are cached, or else fail the build. This is useful to troubleshoot non-determinism issues as it allows checking whether actions that should be cached are actually cached without spuriously injecting new results into the cache.","tags":[],"sources":[]},{"name":"experimental_remote_scrubbing_config","short":"","type":"Converts to a Scrubber","default":"default: see description","description":"Enables remote cache key scrubbing with the supplied configuration file, which must be a protocol buffer in text format (see src/main/protobuf/remote_scrubbing.proto).This feature is intended to facilitate sharing a remote/disk cache between actions executing on different platforms but targeting the same platform. It should be used with extreme care, as improper settings may cause accidental sharing of cache entries and result in incorrect builds.Scrubbing does not affect how an action is executed, only how its remote/disk cache key is computed for the purpose of retrieving or storing an action result. Scrubbed actions are incompatible with remote execution, and will always be executed locally instead.Modifying the scrubbing configuration does not invalidate outputs present in the local filesystem or internal caches; a clean build is required to reexecute affected actions.In order to successfully use this feature, you likely want to set a custom --host_platform together with --experimental_platform_in_output_dir (to normalize output prefixes) and --incompatible_strict_action_env (to normalize environment variables).","tags":[],"sources":[]},{"name":"experimental_worker_for_repo_fetching","short":"","type":"off, platform, virtual or auto","default":"default: \"auto\"","description":"The threading mode to use for repo fetching. If set to 'off', no worker thread is used, and the repo fetching is subject to restarts. Otherwise, uses a virtual worker thread.","tags":[],"sources":[]},{"name":"incompatible_remote_build_event_upload_respect_no_cache","short":"","type":"boolean","default":"default: \"false\"","description":"Deprecated. No-op. Use --remote_build_event_upload=minimal instead.","tags":[],"sources":[]},{"name":"incompatible_remote_downloader_send_all_headers","short":"","type":"boolean","default":"default: \"true\"","description":"    Whether to send all values of a multi-valued header to the remote \n    downloader instead of just the first.\n","tags":["incompatible_change"],"sources":[]},{"name":"incompatible_remote_output_paths_relative_to_input_root","short":"","type":"boolean","default":"default: \"false\"","description":"    If set to true, output paths are relative to input root instead of working \n    directory.\n","tags":["incompatible_change"],"sources":[]},{"name":"incompatible_remote_results_ignore_disk","short":"","type":"boolean","default":"default: \"true\"","description":"    No-op\n","tags":["incompatible_change"],"sources":[]},{"name":"incompatible_remote_use_new_exit_code_for_lost_inputs","short":"","type":"boolean","default":"default: \"true\"","description":"    If set to true, Bazel will use new exit code 39 instead of 34 if remote \n    cacheerrors, including cache evictions, cause the build to fail.\n","tags":["incompatible_change"],"sources":[]},{"name":"remote_accept_cached","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to accept remotely cached action results.","tags":[],"sources":[]},{"name":"remote_build_event_upload","short":"","type":"all or minimal","default":"default: \"minimal\"","description":"If set to 'all', all local outputs referenced by BEP are uploaded to remote cache.If set to 'minimal', local outputs referenced by BEP are not uploaded to the remote cache, except for files that are important to the consumers of BEP (e.g. test logs and timing profile). bytestream:// scheme is always used for the uri of files even if they are missing from remote cache.Default to 'minimal'.","tags":[],"sources":[]},{"name":"remote_bytestream_uri_prefix","short":"","type":"string","default":"default: see description","description":"The hostname and instance name to be used in bytestream:// URIs that are written into build event streams. This option can be set when builds are performed using a proxy, which causes the values of --remote_executor and --remote_instance_name to no longer correspond to the canonical name of the remote execution service. When not set, it will default to \"${hostname}/${instance_name}\".","tags":[],"sources":[]},{"name":"remote_cache","short":"","type":"string","default":"default: see description","description":"A URI of a caching endpoint. The supported schemas are http, https, grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. Specify grpc://, http:// or unix: schema to disable TLS. See https://bazel.build/remote/caching","tags":[],"sources":[]},{"name":"remote_cache_compression","short":"","type":"boolean","default":"default: \"false\"","description":"If enabled, compress/decompress cache blobs with zstd when their size is at least --experimental_remote_cache_compression_threshold.","tags":[],"sources":[]},{"name":"remote_cache_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in cache requests: --remote_cache_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[],"sources":[]},{"name":"remote_default_exec_properties","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Set the default exec properties to be used as the remote execution platform \n    if an execution platform does not already set exec_properties.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_default_platform_properties","short":"","type":"string","default":"default: \"\"","description":"Set the default platform properties to be set for the remote execution API, if the execution platform does not already set remote_execution_properties. This value will also be used if the host platform is selected as the execution platform for remote execution.","tags":[],"sources":[]},{"name":"remote_download_regex","short":"","type":"valid Java regular expression","default":"may be used multiple times","description":"    Force remote build outputs whose path matches this pattern to be \n    downloaded, irrespective of --remote_download_outputs. Multiple patterns \n    may be specified by repeating this flag.\n","tags":["affects_outputs"],"sources":[]},{"name":"remote_downloader_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in remote downloader requests: --remote_downloader_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[],"sources":[]},{"name":"remote_exec_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in execution requests: --remote_exec_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[],"sources":[]},{"name":"remote_execution_priority","short":"","type":"integer","default":"default: \"0\"","description":"The relative priority of actions to be executed remotely. The semantics of the particular priority values are server-dependent.","tags":[],"sources":[]},{"name":"remote_executor","short":"","type":"string","default":"default: see description","description":"HOST or HOST:PORT of a remote execution endpoint. The supported schemas are grpc, grpcs (grpc with TLS enabled) and unix (local UNIX sockets). If no schema is provided Bazel will default to grpcs. Specify grpc:// or unix: schema to disable TLS.","tags":[],"sources":[]},{"name":"remote_grpc_log","short":"","type":"path","default":"default: see description","description":"If specified, a path to a file to log gRPC call related details. This log consists of a sequence of serialized com.google.devtools.build.lib.remote.logging.RemoteExecutionLog.LogEntry protobufs with each message prefixed by a varint denoting the size of the following serialized protobuf message, as performed by the method LogEntry.writeDelimitedTo(OutputStream).","tags":[],"sources":[]},{"name":"remote_header","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"Specify a header that will be included in requests: --remote_header=Name=Value. Multiple headers can be passed by specifying the flag multiple times. Multiple values for the same name will be converted to a comma-separated list.","tags":[],"sources":[]},{"name":"remote_instance_name","short":"","type":"string","default":"default: \"\"","description":"Value to pass as instance_name in the remote execution API.","tags":[],"sources":[]},{"name":"remote_local_fallback","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to fall back to standalone local execution strategy if remote execution fails.","tags":[],"sources":[]},{"name":"remote_local_fallback_strategy","short":"","type":"string","default":"default: \"local\"","description":"No-op, deprecated. See https://github.com/bazelbuild/bazel/issues/7480 for details.","tags":[],"sources":[]},{"name":"remote_max_connections","short":"","type":"integer","default":"default: \"100\"","description":"    Limit the max number of concurrent connections to remote cache/executor. By \n    default the value is 100. Setting this to 0 means no limitation.\n    For HTTP remote cache, one TCP connection could handle one request at one \n    time, so Bazel could make up to --remote_max_connections concurrent \n    requests.\n    For gRPC remote cache/executor, one gRPC channel could usually handle 100+ \n    concurrent requests, so Bazel could make around `--remote_max_connections * \n    100` concurrent requests.\n","tags":["host_machine_resource_optimizations"],"sources":[]},{"name":"remote_proxy","short":"","type":"string","default":"default: see description","description":"Connect to the remote cache through a proxy. Currently this flag can only be used to configure a Unix domain socket (unix:/path/to/socket).","tags":[],"sources":[]},{"name":"remote_result_cache_priority","short":"","type":"integer","default":"default: \"0\"","description":"The relative priority of remote actions to be stored in remote cache. The semantics of the particular priority values are server-dependent.","tags":[],"sources":[]},{"name":"remote_retries","short":"","type":"integer","default":"default: \"5\"","description":"The maximum number of attempts to retry a transient error. If set to 0, retries are disabled.","tags":[],"sources":[]},{"name":"remote_retry_max_delay","short":"","type":"An immutable length of time.","default":"default: \"5s\"","description":"The maximum backoff delay between remote retry attempts. Following units can be used: Days (d), hours (h), minutes (m), seconds (s), and milliseconds (ms). If the unit is omitted, the value is interpreted as seconds.","tags":[],"sources":[]},{"name":"remote_timeout","short":"","type":"An immutable length of time.","default":"default: \"60s\"","description":"The maximum amount of time to wait for remote execution and cache calls. For the REST cache, this is both the connect and the read timeout. Following units can be used: Days (d), hours (h), minutes (m), seconds (s), and milliseconds (ms). If the unit is omitted, the value is interpreted as seconds.","tags":[],"sources":[]},{"name":"remote_upload_local_results","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to upload locally executed action results to the remote cache if the remote cache supports it and the user is authorized to do so.","tags":[],"sources":[]},{"name":"remote_verify_downloads","short":"","type":"boolean","default":"default: \"true\"","description":"If set to true, Bazel will compute the hash sum of all remote downloads and  discard the remotely cached values if they don't match the expected value.","tags":[],"sources":[]},{"name":"allow_analysis_cache_discard","short":"","type":"boolean","default":"default: \"true\"","description":"    If discarding the analysis cache due to a change in the build system, \n    setting this option to false will cause bazel to exit, rather than \n    continuing with the build. This option has no effect when \n    'discard_analysis_cache' is also set.\n","tags":["eagerness_to_exit"],"sources":[]},{"name":"auto_output_filter","short":"","type":"none, all, packages or subpackages","default":"default: \"none\"","description":"If --output_filter is not specified, then the value for this option is used create a filter automatically. Allowed values are 'none' (filter nothing / show everything), 'all' (filter everything / show nothing), 'packages' (include output from rules in packages mentioned on the Blaze command line), and 'subpackages' (like 'packages', but also include subpackages). For the 'packages' and 'subpackages' values //java/foo and //javatests/foo are treated as one package)'.","tags":[],"sources":[]},{"name":"build_manual_tests","short":"","type":"boolean","default":"default: \"false\"","description":"Forces test targets tagged 'manual' to be built. 'manual' tests are excluded from processing. This option forces them to be built (but not executed).","tags":[],"sources":[]},{"name":"build_metadata","short":"","type":"'name=value' assignment","default":"may be used multiple times","description":"    Custom key-value string pairs to supply in a build event.\n","tags":["terminal_output"],"sources":[]},{"name":"build_tag_filters","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"Specifies a comma-separated list of tags. Each tag can be optionally preceded with '-' to specify excluded tags. Only those targets will be built that contain at least one included tag and do not contain any excluded tags. This option does not affect the set of tests executed with the 'test' command; those are be governed by the test filtering options, for example '--test_tag_filters'","tags":[],"sources":[]},{"name":"build_tests_only","short":"","type":"boolean","default":"default: \"false\"","description":"If specified, only *_test and test_suite rules will be built and other targets specified on the command line will be ignored. By default everything that was requested will be built.","tags":[],"sources":[]},{"name":"cache_test_results","short":"t","type":"tri-state (auto, yes, no)","default":"default: \"auto\"","description":"If set to 'auto', Bazel reruns a test if and only if: (1) Bazel detects changes in the test or its dependencies, (2) the test is marked as external, (3) multiple test runs were requested with --runs_per_test, or(4) the test previously failed. If set to 'yes', Bazel caches all test results except for tests marked as external. If set to 'no', Bazel does not cache any test results.","tags":[],"sources":[]},{"name":"color","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal controls to colorize output.","tags":[],"sources":[]},{"name":"combined_report","short":"","type":"none or lcov","default":"default: \"none\"","description":"Specifies desired cumulative coverage report type. At this point only LCOV is supported.","tags":[],"sources":[]},{"name":"compile_one_dependency","short":"","type":"boolean","default":"default: \"false\"","description":"Compile a single dependency of the argument files. This is useful for syntax checking source files in IDEs, for example, by rebuilding a single target that depends on the source file to detect errors as early as possible in the edit/build/test cycle. This argument affects the way all non-flag arguments are interpreted; instead of being targets to build they are source filenames.  For each source filename an arbitrary target that depends on it will be built.","tags":[],"sources":[]},{"name":"config","short":"","type":"string","default":"may be used multiple times","description":"Selects additional config sections from the rc files; for every \u003ccommand\u003e, it also pulls in the options from \u003ccommand\u003e:\u003cconfig\u003e if such a section exists; if this section doesn't exist in any .rc file, Blaze fails with an error. The config sections and flag combinations they are equivalent to are located in the tools/*.blazerc config files.","tags":[],"sources":[]},{"name":"credential_helper","short":"","type":"Path to a credential helper. It may be absolute, relative to the PATH environment variable, or %workspace%-relative. The path be optionally prefixed by a scope  followed by an '='. The scope is a domain name, optionally with a single leading '*' wildcard component. A helper applies to URIs matching its scope, with more specific scopes preferred. If a helper has no scope, it applies to every URI.","default":"may be used multiple times","description":"Configures a credential helper conforming to the \u003ca href=\"https://github.com/EngFlow/credential-helper-spec\"\u003eCredential Helper Specification\u003c/a\u003e to use for retrieving authorization credentials for  repository fetching, remote caching and execution, and the build event service.Credentials supplied by a helper take precedence over credentials supplied by `--google_default_credentials`, `--google_credentials`, a `.netrc` file, or the auth parameter to `repository_ctx.download()` and `repository_ctx.download_and_extract()`.May be specified multiple times to set up multiple helpers.See https://blog.engflow.com/2023/10/09/configuring-bazels-credential-helper/ for instructions.","tags":[],"sources":[]},{"name":"credential_helper_cache_duration","short":"","type":"An immutable length of time.","default":"default: \"30m\"","description":"The default duration for which credentials supplied by a credential helper are cached if the helper does not provide when the credentials expire.","tags":[],"sources":[]},{"name":"credential_helper_timeout","short":"","type":"An immutable length of time.","default":"default: \"10s\"","description":"Configures the timeout for a credential helper.Credential helpers failing to respond within this timeout will fail the invocation.","tags":[],"sources":[]},{"name":"curses","short":"","type":"yes, no or auto","default":"default: \"auto\"","description":"Use terminal cursor controls to minimize scrolling output.","tags":[],"sources":[]},{"name":"deleted_packages","short":"","type":"comma-separated list of package names","default":"may be used multiple times","description":"A comma-separated list of names of packages which the build system will consider non-existent, even if they are visible somewhere on the package path.Use this option when deleting a subpackage 'x/y' of an existing package 'x'.  For example, after deleting x/y/BUILD in your client, the build system may complain if it encounters a label '//x:y/z' if that is still provided by another package_path entry.  Specifying --deleted_packages x/y avoids this problem.","tags":[],"sources":[]},{"name":"discard_analysis_cache","short":"","type":"boolean","default":"default: \"false\"","description":"Discard the analysis cache immediately after the analysis phase completes. Reduces memory usage by ~10%, but makes further incremental builds slower.","tags":[],"sources":[]},{"name":"disk_cache","short":"","type":"path","default":"default: see description","description":"A path to a directory where Bazel can read and write actions and action outputs. If the directory does not exist, it will be created.","tags":[],"sources":[]},{"name":"embed_label","short":"","type":"one-line string","default":"default: \"\"","description":"Embed source control revision or release label in binary","tags":[],"sources":[]},{"name":"enable_platform_specific_config","short":"","type":"boolean","default":"default: \"false\"","description":"If true, Bazel picks up host-OS-specific config lines from bazelrc files. For example, if the host OS is Linux and you run bazel build, Bazel picks up lines starting with build:linux. Supported OS identifiers are linux, macos, windows, freebsd, and openbsd. Enabling this flag is equivalent to using --config=linux on Linux, --config=windows on Windows, etc.","tags":[],"sources":[]},{"name":"execution_log_binary_file","short":"","type":"path","default":"default: see description","description":"Log the executed spawns into this file as length-delimited SpawnExec protos, according to src/main/protobuf/spawn.proto. Prefer --execution_log_compact_file, which is significantly smaller and cheaper to produce. Related flags: --execution_log_compact_file (compact format; mutually exclusive), --execution_log_json_file (text JSON format; mutually exclusive), --execution_log_sort (whether to sort the execution log), --subcommands (for displaying subcommands in terminal output).","tags":[],"sources":[]},{"name":"execution_log_compact_file","short":"","type":"path","default":"default: see description","description":"Log the executed spawns into this file as length-delimited ExecLogEntry protos, according to src/main/protobuf/spawn.proto. The entire file is zstd compressed. Related flags: --execution_log_binary_file (binary protobuf format; mutually exclusive), --execution_log_json_file (text JSON format; mutually exclusive), --subcommands (for displaying subcommands in terminal output).","tags":[],"sources":[]},{"name":"execution_log_json_file","short":"","type":"path","default":"default: see description","description":"Log the executed spawns into this file as newline-delimited JSON representations of SpawnExec protos, according to src/main/protobuf/spawn.proto. Prefer --execution_log_compact_file, which is significantly smaller and cheaper to produce. Related flags: --execution_log_compact_file (compact format; mutually exclusive), --execution_log_binary_file (binary protobuf format; mutually exclusive), --execution_log_sort (whether to sort the execution log), --subcommands (for displaying subcommands in terminal output).","tags":[],"sources":[]},{"name":"execution_log_sort","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to sort the execution log, making it easier to compare logs across invocations. Set to false to avoid potentially significant CPU and memory usage at the end of the invocation, at the cost of producing the log in nondeterministic execution order. Only applies to the binary and JSON formats; the compact format is never sorted.","tags":[],"sources":[]},{"name":"expand_test_suites","short":"","type":"boolean","default":"default: \"true\"","description":"    Expand test_suite targets into their constituent tests before analysis. \n    When this flag is turned on (the default), negative target patterns will \n    apply to the tests belonging to the test suite, otherwise they will not. \n    Turning off this flag is useful when top-level aspects are applied at \n    command line: then they can analyze test_suite targets.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"experimental_cancel_concurrent_tests","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, then Blaze will cancel concurrently running tests on the first \n    successful run. This is only useful in combination with --\n    runs_per_test_detects_flakes.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"experimental_disk_cache_gc_idle_delay","short":"","type":"An immutable length of time.","default":"default: \"5m\"","description":"How long the server must remain idle before a garbage collection of the disk cache occurs. To specify the garbage collection policy, set --experimental_disk_cache_gc_max_size and/or --experimental_disk_cache_gc_max_age.","tags":[],"sources":[]},{"name":"experimental_disk_cache_gc_max_age","short":"","type":"An immutable length of time.","default":"default: \"0\"","description":"If set to a positive value, the disk cache will be periodically garbage collected to remove entries older than this age. If set in conjunction with --experimental_disk_cache_gc_max_size, both criteria are applied. Garbage collection occurrs in the background once the server has become idle, as determined by the --experimental_disk_cache_gc_idle_delay flag.","tags":[],"sources":[]},{"name":"experimental_disk_cache_gc_max_size","short":"","type":"size in bytes, optionally followed by a K, M, G or T multiplier","default":"default: \"0\"","description":"If set to a positive value, the disk cache will be periodically garbage collected to stay under this size. If set in conjunction with --experimental_disk_cache_gc_max_age, both criteria are applied. Garbage collection occurrs in the background once the server has become idle, as determined by the --experimental_disk_cache_gc_idle_delay flag.","tags":[],"sources":[]},{"name":"experimental_extra_action_filter","short":"","type":"comma-separated list of regex expressions with prefix '-' specifying excluded paths","default":"default: \"\"","description":"Deprecated in favor of aspects. Filters set of targets to schedule extra_actions for.","tags":[],"sources":[]},{"name":"experimental_extra_action_top_level_only","short":"","type":"boolean","default":"default: \"false\"","description":"Deprecated in favor of aspects. Only schedules extra_actions for top level targets.","tags":[],"sources":[]},{"name":"experimental_fetch_all_coverage_outputs","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, then Bazel fetches the entire coverage data directory for each \n    test during a coverage run.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"experimental_generate_llvm_lcov","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, coverage for clang will generate an LCOV report.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"experimental_j2objc_header_map","short":"","type":"boolean","default":"default: \"true\"","description":"Whether to generate J2ObjC header map in parallel of J2ObjC transpilation.","tags":[],"sources":[]},{"name":"experimental_j2objc_shorter_header_path","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to generate with shorter header path (uses \"_ios\" instead of \n    \"_j2objc\").\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_java_classpath","short":"","type":"off, javabuilder or bazel","default":"default: \"javabuilder\"","description":"Enables reduced classpaths for Java compilations.","tags":[],"sources":[]},{"name":"experimental_limit_android_lint_to_android_constrained_java","short":"","type":"boolean","default":"default: \"false\"","description":"    Limit --experimental_run_android_lint_on_java_rules to Android-compatible \n    libraries.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_rule_extension_api","short":"","type":"boolean","default":"default: \"false\"","description":"    Enable experimental rule extension API and subrule APIs\n","tags":["loading_and_analysis","experimental"],"sources":[]},{"name":"experimental_run_android_lint_on_java_rules","short":"","type":"boolean","default":"default: \"false\"","description":"    Whether to validate java_* sources.\n","tags":["affects_outputs"],"sources":[]},{"name":"experimental_spawn_scheduler","short":"","type":"","default":"","description":"Enable dynamic execution by running actions locally and remotely in parallel. Bazel spawns each action locally and remotely and picks the one that completes first. If an action supports workers, the local action will be run in the persistent worker mode. To enable dynamic execution for an individual action mnemonic, use the `--internal_spawn_scheduler` and `--strategy=\u003cmnemonic\u003e=dynamic` flags instead.  Expands to: --internal_spawn_scheduler --spawn_strategy=dynamic","tags":[],"sources":[]},{"name":"experimental_windows_watchfs","short":"","type":"boolean","default":"default: \"false\"","description":"If true, experimental Windows support for --watchfs is enabled. Otherwise --watchfsis a non-op on Windows. Make sure to also enable --watchfs.","tags":[],"sources":[]},{"name":"explicit_java_test_deps","short":"","type":"boolean","default":"default: \"false\"","description":"Explicitly specify a dependency to JUnit or Hamcrest in a java_test instead of  accidentally obtaining from the TestRunner's deps. Only works for bazel right now.","tags":[],"sources":[]},{"name":"fetch","short":"","type":"boolean","default":"default: \"true\"","description":"Allows the command to fetch external dependencies. If set to false, the command will utilize any cached version of the dependency, and if none exists, the command will result in failure.","tags":[],"sources":[]},{"name":"google_auth_scopes","short":"","type":"comma-separated list of options","default":"default: \"https://www.googleapis.com/auth/cloud-platform\"","description":"A comma-separated list of Google Cloud authentication scopes.","tags":[],"sources":[]},{"name":"google_credentials","short":"","type":"string","default":"default: see description","description":"Specifies the file to get authentication credentials from. See https://cloud.google.com/docs/authentication for details.","tags":[],"sources":[]},{"name":"google_default_credentials","short":"","type":"boolean","default":"default: \"false\"","description":"Whether to use 'Google Application Default Credentials' for authentication. See https://cloud.google.com/docs/authentication for details. Disabled by default.","tags":[],"sources":[]},{"name":"grpc_keepalive_time","short":"","type":"An immutable length of time.","default":"default: see description","description":"Configures keep-alive pings for outgoing gRPC connections. If this is set, then Bazel sends pings after this much time of no read operations on the connection, but only if there is at least one pending gRPC call. Times are treated as second granularity; it is an error to set a value less than one second. By default, keep-alive pings are disabled. You should coordinate with the service owner before enabling this setting. For example to set a value of 30 seconds to this flag, it should be done as this --grpc_keepalive_time=30s","tags":[],"sources":[]},{"name":"grpc_keepalive_timeout","short":"","type":"An immutable length of time.","default":"default: \"20s\"","description":"Configures a keep-alive timeout for outgoing gRPC connections. If keep-alive pings are enabled with --grpc_keepalive_time, then Bazel times out a connection if it does not receive a ping reply after this much time. Times are treated as second granularity; it is an error to set a value less than one second. If keep-alive pings are disabled, then this setting is ignored.","tags":[],"sources":[]},{"name":"host_java_launcher","short":"","type":"build target label","default":"default: see description","description":"The Java launcher used by tools that are executed during a build.","tags":[],"sources":[]},{"name":"host_javacopt","short":"","type":"string","default":"may be used multiple times","description":"Additional options to pass to javac when building tools that are executed during a build.","tags":[],"sources":[]},{"name":"host_jvmopt","short":"","type":"string","default":"may be used multiple times","description":"Additional options to pass to the Java VM when building tools that are executed during  the build. These options will get added to the VM startup options of each  java_binary target.","tags":[],"sources":[]},{"name":"incompatible_check_sharding_support","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, Bazel will fail a sharded test if the test runner does not \n    indicate that it supports sharding by touching the file at the path in \n    TEST_SHARD_STATUS_FILE. If false, a test runner that does not support \n    sharding will lead to all tests running in each shard.\n","tags":["incompatible_change"],"sources":[]},{"name":"incompatible_disable_non_executable_java_binary","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, java_binary is always executable. create_executable attribute is \n    removed.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_disallow_symlink_file_to_dir","short":"","type":"boolean","default":"default: \"true\"","description":"    No-op.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"incompatible_dont_use_javasourceinfoprovider","short":"","type":"boolean","default":"default: \"false\"","description":"    No-op\n","tags":["incompatible_change"],"sources":[]},{"name":"incompatible_exclusive_test_sandboxed","short":"","type":"boolean","default":"default: \"true\"","description":"    If true, exclusive tests will run with sandboxed strategy. Add 'local' tag \n    to force an exclusive test run locally\n","tags":["incompatible_change"],"sources":[]},{"name":"incompatible_strict_action_env","short":"","type":"boolean","default":"default: \"false\"","description":"    If true, Bazel uses an environment with a static value for PATH and does \n    not inherit LD_LIBRARY_PATH. Use --action_env=ENV_VARIABLE if you want to \n    inherit specific environment variables from the client, but note that doing \n    so can prevent cross-user caching if a shared cache is used.\n","tags":["loading_and_analysis","incompatible_change"],"sources":[]},{"name":"invocation_id","short":"","type":"UUID","default":"default: \"\"","description":"    Unique identifier, in UUID format, for the command being run. If explicitly \n    specified uniqueness must be ensured by the caller. The UUID is printed to \n    stderr, the BEP and remote execution protocol.\n","tags":["bazel_monitoring","bazel_internal_configuration"],"sources":[]},{"name":"j2objc_translation_flags","short":"","type":"comma-separated list of options","default":"may be used multiple times","description":"Additional options to pass to the J2ObjC tool.","tags":[],"sources":[]},{"name":"java_debug","short":"","type":"","default":"","description":"Causes the Java virtual machine of a java test to wait for a connection from a JDWP-compliant debugger (such as jdb) before starting the test. Implies -test_output=streamed.  Expands to: --test_arg=--wrapper_script_flag=--debug --  test_output=streamed --test_strategy=exclusive --test_timeout=9999 --  nocache_test_results","tags":[],"sources":[]},{"name":"java_deps","short":"","type":"boolean","default":"default: \"true\"","description":"Generate dependency information (for now, compile-time classpath) per Java target.","tags":[],"sources":[]},{"name":"java_header_compilation","short":"","type":"boolean","default":"default: \"true\"","description":"Compile ijars directly from source.","tags":[],"sources":[]},{"name":"java_language_version","short":"","type":"string","default":"default: \"\"","description":"The Java language version","tags":[],"sources":[]},{"name":"java_launcher","short":"","type":"build target label","default":"default: see description","description":"The Java launcher to use when building Java binaries.  If this flag is set to the empty string, the JDK launcher is used. The \"launcher\" attribute overrides this flag.","tags":[],"sources":[]},{"name":"java_runtime_version","short":"","type":"string","default":"default: \"local_jdk\"","description":"The Java runtime version","tags":[],"sources":[]},{"name":"javacopt","short":"","type":"string","default":"may be used multiple times","description":"Additional options to pass to javac.","tags":[],"sources":[]},{"name":"jvmopt","short":"","type":"string","default":"may be used multiple times","description":"Additional options to pass to the Java VM. These options will get added to the VM startup options of each java_binary target.","tags":[],"sources":[]},{"name":"legacy_main_dex_list_generator","short":"","type":"build target label","default":"default: see description","description":"Specifies a binary to use to generate the list of classes that must be in the main dex when compiling legacy multidex.","tags":[],"sources":[]},{"name":"local_termination_grace_seconds","short":"","type":"integer","default":"default: \"15\"","description":"Time to wait between terminating a local process due to timeout and forcefully shutting it down.","tags":[],"sources":[]},{"name":"optimizing_dexer","short":"","type":"build target label","default":"default: see description","description":"Specifies a binary to use to do dexing without sharding.","tags":[],"sources":[]},{"name":"override_repository","short":"","type":"equals-separated mapping of repository name to path","default":"may be used multiple times","description":"Override a repository with a local path in the form of \u003crepository name\u003e=\u003cpath\u003e. If the given path is an absolute path, it will be used as it is. If the given path is a relative path, it is relative to the current working directory. If the given path starts with '%workspace%, it is relative to the workspace root, which is the output of `bazel info workspace`. If the given path is empty, then remove any previous overrides.","tags":[],"sources":[]},{"name":"package_path","short":"","type":"colon-separated list of options","default":"default: \"%workspace%\"","description":"A colon-separated list of where to look for packages. Elements beginning with '%workspace%' are relative to the enclosing workspace. If omitted or empty, the default is the output of 'bazel info default-package-path'.","tags":[],"sources":[]},{"name":"plugin","short":"","type":"build target label","default":"may be used multiple times","description":"Plugins to use in the build. Currently works with java_plugin.","tags":[],"sources":[]},{"name":"progress_in_terminal_title","short":"","type":"boolean","default":"default: \"false\"","description":"Show the command progress in the terminal title. Useful to see what bazel is doing when having multiple terminal tabs.","tags":[],"sources":[]},{"name":"proguard_top","short":"","type":"build target label","default":"default: see description","description":"Specifies which version of ProGuard to use for code removal when building a Java binary.","tags":[],"sources":[]},{"name":"proto_compiler","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/proto:protoc\"","description":"    The label of the proto-compiler.\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"proto_toolchain_for_cc","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/proto:cc_toolchain\"","description":"    Label of proto_lang_toolchain() which describes how to compile C++ protos\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"proto_toolchain_for_j2objc","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/j2objc:j2objc_proto_toolchain\"","description":"    Label of proto_lang_toolchain() which describes how to compile j2objc protos\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"proto_toolchain_for_java","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/proto:java_toolchain\"","description":"    Label of proto_lang_toolchain() which describes how to compile Java protos\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"proto_toolchain_for_javalite","short":"","type":"build target label","default":"default: \"@bazel_tools//tools/proto:javalite_toolchain\"","description":"    Label of proto_lang_toolchain() which describes how to compile JavaLite \n    protos\n","tags":["affects_outputs","loading_and_analysis"],"sources":[]},{"name":"protocopt","short":"","type":"string","default":"may be used multiple times","description":"    Additional options to pass to the protobuf compiler.\n","tags":["affects_outputs"],"sources":[]},{"name":"runs_per_test_detects_flakes","short":"","type":"boolean","default":"default: \"false\"","description":"If true, any shard in which at least one run/attempt passes and at least one run/attempt fails gets a FLAKY status.","tags":[],"sources":[]},{"name":"shell_executable","short":"","type":"path","default":"default: see description","description":"    Absolute path to the shell executable for Bazel to use. If this is unset, \n    but the BAZEL_SH environment variable is set on the first Bazel invocation \n    (that starts up a Bazel server), Bazel uses that. If neither is set, Bazel \n    uses a hard-coded default path depending on the operating system it runs on \n    (Windows: c:/tools/msys64/usr/bin/bash.exe, FreeBSD: /usr/local/bin/bash, \n    all others: /bin/bash). Note that using a shell that is not compatible with \n    bash may lead to build failures or runtime failures of the generated \n    binaries.\n","tags":["loading_and_analysis"],"sources":[]},{"name":"show_loading_progress","short":"","type":"boolean","default":"default: \"true\"","description":"If enabled, causes Bazel to print \"Loading package:\" messages.","tags":[],"sources":[]},{"name":"show_progress","short":"","type":"boolean","default":"default: \"true\"","description":"Display progress messages during a build.","tags":[],"sources":[]},{"name":"show_progress_rate_limit","short":"","type":"double","default":"default: \"0.2\"","description":"Minimum number of seconds between progress messages in the output.","tags":[],"sources":[]},{"name":"show_timestamps","short":"","type":"boolean","default":"default: \"false\"","description":"Include timestamps in messages","tags":[],"sources":[]},{"name":"test_arg","short":"","type":"string","default":"may be used multiple times","description":"Specifies additional options and arguments that should be passed to the test executable. Can be used multiple times to specify several arguments. If multiple tests are executed, each of them will receive identical arguments. Used only by the 'bazel test' command.","tags":[],"sources":[]},{"name":"test_filter","short":"","type":"string","default":"default: see description","description":"Specifies a filter to forward to the test framework.  Used to limit the tests run. Note that this does not affect which targets are built.","tags":[],"sources":[]},{"name":"test_lang_filters","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"Specifies a comma-separated list of test languages. Each language can be optionally preceded with '-' to specify excluded languages. Only those test targets will be found that are written in the specified languages. The name used for each language should be the same as the language prefix in the *_test rule, e.g. one of 'cc', 'java', 'py', etc. This option affects --build_tests_only behavior and the test command.","tags":[],"sources":[]},{"name":"test_result_expiration","short":"","type":"integer","default":"default: \"-1\"","description":"This option is deprecated and has no effect.","tags":[],"sources":[]},{"name":"test_runner_fail_fast","short":"","type":"boolean","default":"default: \"false\"","description":"Forwards fail fast option to the test runner. The test runner should stop execution upon first failure.","tags":[],"sources":[]},{"name":"test_sharding_strategy","short":"","type":"explicit, disabled or forced=k where k is the number of shards to enforce","default":"default: \"explicit\"","description":"Specify strategy for test sharding: 'explicit' to only use sharding if the 'shard_count' BUILD attribute is present. 'disabled' to never use test sharding. 'forced=k' to enforce 'k' shards for testing regardless of the 'shard_count' BUILD attribute.","tags":[],"sources":[]},{"name":"test_size_filters","short":"","type":"comma-separated list of values: small, medium, large or enormous","default":"default: \"\"","description":"Specifies a comma-separated list of test sizes. Each size can be optionally preceded with '-' to specify excluded sizes. Only those test targets will be found that contain at least one included size and do not contain any excluded sizes. This option affects --build_tests_only behavior and the test command.","tags":[],"sources":[]},{"name":"test_tag_filters","short":"","type":"comma-separated list of options","default":"default: \"\"","description":"Specifies a comma-separated list of test tags. Each tag can be optionally preceded with '-' to specify excluded tags. Only those test targets will be found that contain at least one included tag and do not contain any excluded tags. This option affects --build_tests_only behavior and the test command.","tags":[],"sources":[]},{"name":"test_timeout_filters","short":"","type":"comma-separated list of values: short, moderate, long or eternal","default":"default: \"\"","description":"Specifies a comma-separated list of test timeouts. Each timeout can be optionally preceded with '-' to specify excluded timeouts. Only those test targets will be found that contain at least one included timeout and do not contain any excluded timeouts. This option affects --build_tests_only behavior and the test command.","tags":[],"sources":[]},{"name":"tls_certificate","short":"","type":"string","default":"default: see description","description":"Specify a path to a TLS certificate that is trusted to sign server certificates.","tags":[],"sources":[]},{"name":"tls_client_certificate","short":"","type":"string","default":"default: see description","description":"Specify the TLS client certificate to use; you also need to provide a client key to enable client authentication.","tags":[],"sources":[]},{"name":"tls_client_key","short":"","type":"string","default":"default: see description","description":"Specify the TLS client key to use; you also need to provide a client certificate to enable client authentication.","tags":[],"sources":[]},{"name":"tool_java_language_version","short":"","type":"string","default":"default: \"\"","description":"The Java language version used to execute the tools that are needed during a build","tags":[],"sources":[]},{"name":"tool_java_runtime_version","short":"","type":"string","default":"default: \"remotejdk_11\"","description":"The Java runtime version used to execute tools during the build","tags":[],"sources":[]},{"name":"ui_actions_shown","short":"","type":"integer","default":"default: \"8\"","description":"    Number of concurrent actions shown in the detailed progress bar; each \n    action is shown on a separate line. The progress bar always shows at least \n    one one, all numbers less than 1 are mapped to 1.\n","tags":["terminal_output"],"sources":[]},{"name":"use_ijars","short":"","type":"boolean","default":"default: \"true\"","description":"If enabled, this option causes Java compilation to use interface jars. This will result in faster incremental compilation, but error messages can be different.","tags":[],"sources":[]},{"name":"watchfs","short":"","type":"boolean","default":"default: \"false\"","description":"On Linux/macOS: If true, bazel tries to use the operating system's file watch service for local changes instead of scanning every file for a change. On Windows: this flag currently is a non-op but can be enabled in conjunction with --experimental_windows_watchfs. On any OS: The behavior is undefined if your workspace is on a network file system, and files are edited on a remote machine.","tags":[],"sources":[]},{"name":"workspace_status_command","short":"","type":"path","default":"default: \"\"","description":"A command invoked at the beginning of the build to provide status information about the workspace in the form of key/value pairs.  See the User's Manual for the full specification. Also see tools/buildstamp/get_workspace_status for an example.","tags":[],"sources":[]}]