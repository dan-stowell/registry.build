[{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/176901600","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/176901600/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/176901600/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/600.0.1","id":176901600,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4Ki03g","tag_name":"600.0.1","target_commitish":"main","name":"600.0.1","draft":false,"prerelease":false,"created_at":"2024-09-25T16:14:15Z","published_at":"2024-09-25T17:17:37Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/600.0.1","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/600.0.1","body":"Compared to 600.0.0 this release fixes a compilation issue when building swift-syntax in C++ interop mode (https://github.com/swiftlang/swift-syntax/pull/2861).\r\n\r\nIt also contains the following changes from [600.0.0](https://github.com/apple/swift-syntax/releases/tag/600.0.0).\r\n\r\n## New APIs\r\n- FixIt now has a new computed property named `edits`\r\n  - Description: the `edits` represent the non-overlapping textual `edits` that need to be performed when the Fix-It is applied.\r\n  - Issue: https://github.com/swiftlang/sourcekit-lsp/issues/909\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2314\r\n\r\n- `SourceEdit`\r\n  - Description: `SourceEdit` has been moved from SwiftRefactor to SwiftSyntax\r\n  - Issue: https://github.com/swiftlang/sourcekit-lsp/issues/909\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2314\r\n\r\n- `assertMacroExpansion` now have new parameters named `applyFixIts` and `fixedSource`\r\n  - Description: `applyFixIts` and `fixedSource` are used to assert so ensure that the source code after applying Fix-Its matches this string.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2015\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2021\r\n\r\n- `DeclSyntaxEnum`, `StmtSyntaxEnum`, `ExprSyntaxEnum`, `TypeSyntaxEnum`, and `PatternSyntaxEnum`\r\n  - Description: Enum to exhaustively switch over all different syntax nodes of each base type.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2351\r\n\r\n- `WithOptionalCodeBlock`\r\n  - Description: A trait for syntax nodes that have an optional code block, such as `FunctionDeclSyntax` and `InitializerDeclSyntax`.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2359\r\n\r\n- `CodeBlockSyntax`\r\n  - Description: `CodeBlockSyntax` is now `SyntaxParseable`, so it can be used with string interpolations.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2361\r\n\r\n- `ThrowsClause`\r\n  - Description: The `throwsSpecifier` for the effects nodes (`AccessorEffectSpecifiers`, `FunctionEffectSpecifiers`, `TypeEffectSpecifiers`, `EffectSpecifiers`) has been replaced with `throwsClause`, which captures both the throws specifier and the (optional) thrown error type, as introduced by SE-0413.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2379\r\n\r\n- `String.isValidSwiftIdentifier(for:)`\r\n  - Description: `SwiftParser` adds an extension on `String` to check if it can be used as an identifier in a given context.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2434\r\n\r\n- `MacroDeclSyntax.expand`\r\n  - the `expand(argumentList:definition:replacements:)` method gains a new parameter 'genericReplacements:' that is defaulted to an empty array.\r\n  - The method's signature is now `expand(argumentList:definition:replacements:genericReplacements:)`\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2450\r\n\r\n- `SyntaxProtocol.asMacroLexicalContext()` and `allMacroLexicalContexts(enclosingSyntax:)`\r\n  - Description: Produce the lexical context for a given syntax node (if it has one), or the entire stack of lexical contexts enclosing a syntax node, for use in macro expansion.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/1554\r\n\r\n- `TriviaPiece.isComment`\r\n  - Description: `TriviaPiece` now has a computed property `isComment` that returns `true` if the trivia piece is a comment.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2469\r\n\r\n- New `assertMacroExpansion` API with option to specify macro specifications with `macroSpecs` argument\r\n  - Description: `macroSpecs` can have additional specifications like conformances provided by member or extension macro that can be used for macro expansion.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2031\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2327\r\n\r\n- `BasicFormat.inferIndentation(of:)`\r\n  - Description: Uses heuristics to infer the indentation width used in a syntax tree.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2514\r\n\r\n- `IncrementalEdit` stores replacement text\r\n  - Description: `IncrementalEdit` used to store the range that was replaced and the length of the replacement but not the replacement bytes by itself. `IncrementalEdit` now has a `replacement` property that contains the replacement bytes.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2527\r\n\r\n- Type specifiers\r\n  - Description: `AttributedTypeSyntax` can now contain multiple specifiers and these types are used to model the list of specifiers. Additionally, type specifiers can now contain arguments, like `borrow(data)`. To facilitate this, the following new types were introduces: `LifetimeSpecifierArgumentListSyntax`, `LifetimeSpecifierArgumentSyntax`, `LifetimeSpecifierArgumentsSyntax`, `LifetimeTypeSpecifierSyntax`, `SimpleTypeSpecifierSyntax`, `TypeSpecifierListSyntax`\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2433\r\n\r\n- `DeclGroupSyntax.introducer`\r\n  - Description: The `DeclGroupSyntax` trait has an extra `introducer` property, ie. the keyword that introduces the declaration.\r\n  - Issue: https://github.com/swiftlang/sourcekit-lsp/issues/2535\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2539\r\n\r\n- `ExprSyntax.interpretedAsVersionTuple`\r\n  - Description: With the change to parse `#if canImport(MyModule, _version: 1.2.3)` as a function call instead of a dedicated syntax node, `1.2.3` natively gets parsed as a member access `3` to the `1.2` float literal. This property allows the reinterpretation of such an expression as a version tuple.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2025\r\n\r\n- `SyntaxProtocol.node(at:)` \r\n  - Description: Given a `SyntaxIdentifier`, returns the `Syntax` node with that identifier\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2594\r\n\r\n- `SyntaxIdentifier.IndexInTree`\r\n  - Description: Uniquely identifies a syntax node within a tree. This is similar to ``SyntaxIdentifier`` but does not store the root ID of the tree. It can thus be transferred across trees that are structurally equivalent, for example two copies of the same tree that live in different processes. The only public functions on this type are `toOpaque` and `init(fromOpaque:)`, which allow serialization of the `IndexInTree`.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2594\r\n  \r\n- `SyntaxIdentifier` conformance to `Comparable`:\r\n  - Description: A `SyntaxIdentifier` compares less than another `SyntaxIdentifier` if the node at that identifier occurs first during a depth-first traversal of the tree.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2594\r\n\r\n- `SyntaxIdentifier.indexInTree` and `SyntaxIdentifier.fromIndexInTree` \r\n  - Description: `SyntaxIdentifier.indexInTree` allows the retrieval of a `SyntaxIdentifier` that identifies the syntax node independent of the syntax tree. `SyntaxIdentifier.fromIndexInTree` allows the creation for a `SyntaxIdentifier` from a tree-agnostic `SyntaxIdentifier.IndexInTree` and the tree's root node.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2594\r\n\r\n- `SwiftSyntaxMacrosGenericTestSupport`\r\n  - Description: A version of the `SwiftSyntaxMacrosTestSupport` module that doesn't depend on `Foundation` or `XCTest` and can thus be used to write macro tests using `swift-testing`. Since swift-syntax can't depend on swift-testing (which would incur a circular dependency since swift-testing depends on swift-syntax), users need to manually specify a failure handler like the following, that fails the swift-testing test: `Issue.record(\"\\($0.message)\", fileID: $0.location.fileID, filePath: $0.location.filePath, line: $0.location.line, column: $0.location.column)`\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2647\r\n\r\n- `TokenSyntax.identifier`\r\n  - Description: Adds an `identifier` property to `TokenSyntax` which returns a canonicalized representation of an identifier that strips away backticks.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2576\r\n\r\n## Deprecations\r\n\r\n- Child Choice Node Casts\r\n  - Description: `is`, `as`, and `cast` methods for types not contained in the choice node are marked as deprecated. The deprecated methods will emit a warning, indicating that the cast will always fail.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2184\r\n  - Migration steps: Remove the `is`, `as` or `cast` methods because they will always fail.\r\n\r\n- `IncrementalParseTransition`:\r\n  - Description: The initializer `IncrementalParseTransition.init(previousTree:edits:lookaheadRanges:reusedNodeCallback:)` is marked as deprecated. Use `IncrementalParseTransition.init(previousIncrementalParseResult:edits:reusedNodeCallback:)` instead.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2267\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2272\r\n  - Migration steps: Call `IncrementalParseTransition.init(previousIncrementalParseResult:edits:reusedNodeCallback:)` instead.\r\n\r\n- `MacroExpansion{Error|Warning|FixIt}Message` moved to the `SwiftSyntaxMacros` module\r\n  - Description: Move the `MacroExpansion{Error|Warning|FixIt}Message` types from the `SwiftSyntaxMacroExpansion` module to `SwiftSyntaxMacros`. Deprecated typealiases in `SwiftSyntaxMacroExpansion` forward to `SwiftSyntaxMacros`.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2338\r\n  - Notes: The expansion diagnostic messages were defined in `SwiftSyntaxMacroExpansion`, which is intended as an implementation detail of the plugin server and should not need to be imported by macros.\r\n\r\n- `EditorPlaceholderDeclSyntax` and `EditorPlaceholderExprSyntax`:\r\n  - Description: `EditorPlaceholderDeclSyntax` and `EditorPlaceholderExprSyntax` are now deprecated and placeholders are instead parsed as identifiers within a `MissingDeclSyntax` or `DeclReferenceExprSyntax`.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2237\r\n\r\n- `AttributedTypeSyntax.specifier` has renamed to `specifiers` and changed to be a collection\r\n  - Description: Types can have multiple specifiers now and the syntax tree has been modified to reflect that.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2433\r\n\r\n- ` CanImportExprSyntax` and `CanImportVersionInfoSyntax`\r\n  - Description: Instead of parsing `canImport` inside `#if` directives as a special expression node, parse it as a functionc call expression. This is in-line with how the `swift(>=6.0)` and `compiler(>=6.0)` directives are parsed.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2025\r\n\r\n## API-Incompatible Changes\r\n\r\n- `MacroDefinition` used for expanding macros:\r\n  - Description: The `MacroDefinition/expansion` enum case used to have two values (`(MacroExpansionExprSyntax, replacements: [Replacement])`), has now gained another value in order to support generic argument replacements in macro expansions: `(MacroExpansionExprSyntax, replacements: [Replacement], genericReplacements: [GenericArgumentReplacement])`\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2450\r\n  - Migration steps: Code which exhaustively checked over the enum should be changed to `case .expansion(let node, let replacements, let genericReplacements):`. Creating the `.extension` gained a compatibility shim, retaining the previous syntax source compatible (`return .expansion(node, replacements: [])`).\r\n\r\n- Effect specifiers:\r\n  - Description: The `unexpectedAfterThrowsSpecifier` node of the various effect specifiers has been removed.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2219\r\n  - Migration steps: Check `unexpectedBetweenThrowsSpecifierAndThrownError` and `unexpectedAfterThrownError` instead.\r\n\r\n- `SyntaxKind` removed conformance to `CaseIterable`\r\n  - Description: `SyntaxKind` no longer conforms to `CaseIterable` since there is no good use case to iterate over all syntax kinds.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2292\r\n  - Migration steps: Exhaustively check all the syntax nodes that your program supports. There should be no use case to iterate over all cases in `SyntaxKind`.\r\n\r\n- `IntegerLiteralExprSyntax.Radix` removed conformance to `CaseIterable`\r\n  - Description: `IntegerLiteralExprSyntax.Radix` no longer conforms to `CaseIterable` since there is no good use case to iterate over all radix kinds.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2292\r\n  - Migration steps: There should be no use case to iterate over all cases in `IntegerLiteralExprSyntax.Radix`.\r\n\r\n- `Parser.parseIncrementally(source:parseTransition:)` and `Parser.parseIncrementally(source:maximumNestingLevel:parseTransition:)`:\r\n  - Description: The default versions of `Parser.parseIncrementally` return a `IncrementalParseResult` instead of a tuple. Access to the struct should be compatible with the tuple in almost all cases unless the tuple is stored into a variable and then destructed or passed to a function that expects a tuple.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2267\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2272\r\n  - Migration steps: If necessary, change type annotations from the tuple to the `IncrementalParseResult` type.\r\n\r\n- `SyntaxClassification` gained a new case: `argumentLabel`\r\n  - The new classification case covers the first names of parameters in function-like declarations and the label of arguments in function-like calls.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2375\r\n  - Migration steps: In exhaustive switches over `SyntaxClassification`, cover the new case.\r\n\r\n- `SyntaxEnum` and `SyntaxKind` gained new cases: `throwsClause`\r\n  - The new cases cover the newly introduced `ThrowsClauseSyntax`\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2379\r\n  - Migration steps: In exhaustive switches over `SyntaxEnum` and `SyntaxKind`, cover the new case.\r\n\r\n- `MacroExpansionContext` now requires a property `lexicalContext`:\r\n  - Description: The new property provides the lexical context in which the macro is expanded, and has several paired API changes. Types that conform to `MacroExpansionContext` will need to implement this property. Additionally, the `HostToPluginMessage` cases `expandFreestandingMacro` and `expandAttachedMacro` now include an optional `lexicalContext`. Finally, the `SyntaxProtocol.expand(macros:in:indentationWidth:)` syntactic expansion operation has been deprecated in favor of a new version `expand(macros:contextGenerator:indentationWidth:)` that takes a function produces a new macro expansion context for each expansion.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/1554\r\n  - Migration steps: Add the new property `lexicalContext` to any `MacroExpansionContext`-conforming types. If implementing the host-to-plugin message protocol, add support for `lexicalContext`. For macro expansion operations going through `SyntaxProtocol.expand`, provide a context generator that creates a fresh context including the lexical context.\r\n\r\n- `TriviaPiece.isBackslash` in `SwiftParserDiagnostics` removed\r\n  - Description: `TriviaPiece.isBackslash` was not intended to be public API.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2531\r\n  - Migration steps: Use `if case .backslash = triviaPiece` instead\r\n\r\n- All symbols in `SwiftCompilerPluginMessageHandling` are now SPI\r\n  - Description: This module is only intended to be used from some internal components. Any other modules should not use them directly.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2489\r\n  - Migration steps: Stop using this module.\r\n","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/176901600/reactions","total_count":7,"+1":2,"-1":0,"laugh":0,"hooray":3,"confused":0,"heart":2,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/175019078","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/175019078/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/175019078/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/600.0.0","id":175019078,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4KbpRG","tag_name":"600.0.0","target_commitish":"main","name":"600.0.0","draft":false,"prerelease":false,"created_at":"2024-09-07T05:53:05Z","published_at":"2024-09-13T18:37:18Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/600.0.0","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/600.0.0","body":"## New APIs\r\n- FixIt now has a new computed property named `edits`\r\n  - Description: the `edits` represent the non-overlapping textual `edits` that need to be performed when the Fix-It is applied.\r\n  - Issue: https://github.com/swiftlang/sourcekit-lsp/issues/909\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2314\r\n\r\n- `SourceEdit`\r\n  - Description: `SourceEdit` has been moved from SwiftRefactor to SwiftSyntax\r\n  - Issue: https://github.com/swiftlang/sourcekit-lsp/issues/909\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2314\r\n\r\n- `assertMacroExpansion` now have new parameters named `applyFixIts` and `fixedSource`\r\n  - Description: `applyFixIts` and `fixedSource` are used to assert so ensure that the source code after applying Fix-Its matches this string.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2015\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2021\r\n\r\n- `DeclSyntaxEnum`, `StmtSyntaxEnum`, `ExprSyntaxEnum`, `TypeSyntaxEnum`, and `PatternSyntaxEnum`\r\n  - Description: Enum to exhaustively switch over all different syntax nodes of each base type.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2351\r\n\r\n- `WithOptionalCodeBlock`\r\n  - Description: A trait for syntax nodes that have an optional code block, such as `FunctionDeclSyntax` and `InitializerDeclSyntax`.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2359\r\n\r\n- `CodeBlockSyntax`\r\n  - Description: `CodeBlockSyntax` is now `SyntaxParseable`, so it can be used with string interpolations.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2361\r\n\r\n- `ThrowsClause`\r\n  - Description: The `throwsSpecifier` for the effects nodes (`AccessorEffectSpecifiers`, `FunctionEffectSpecifiers`, `TypeEffectSpecifiers`, `EffectSpecifiers`) has been replaced with `throwsClause`, which captures both the throws specifier and the (optional) thrown error type, as introduced by SE-0413.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2379\r\n\r\n- `String.isValidSwiftIdentifier(for:)`\r\n  - Description: `SwiftParser` adds an extension on `String` to check if it can be used as an identifier in a given context.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2434\r\n\r\n- `MacroDeclSyntax.expand`\r\n  - the `expand(argumentList:definition:replacements:)` method gains a new parameter 'genericReplacements:' that is defaulted to an empty array.\r\n  - The method's signature is now `expand(argumentList:definition:replacements:genericReplacements:)`\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2450\r\n\r\n- `SyntaxProtocol.asMacroLexicalContext()` and `allMacroLexicalContexts(enclosingSyntax:)`\r\n  - Description: Produce the lexical context for a given syntax node (if it has one), or the entire stack of lexical contexts enclosing a syntax node, for use in macro expansion.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/1554\r\n\r\n- `TriviaPiece.isComment`\r\n  - Description: `TriviaPiece` now has a computed property `isComment` that returns `true` if the trivia piece is a comment.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2469\r\n\r\n- New `assertMacroExpansion` API with option to specify macro specifications with `macroSpecs` argument\r\n  - Description: `macroSpecs` can have additional specifications like conformances provided by member or extension macro that can be used for macro expansion.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2031\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2327\r\n\r\n- `BasicFormat.inferIndentation(of:)`\r\n  - Description: Uses heuristics to infer the indentation width used in a syntax tree.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2514\r\n\r\n- `IncrementalEdit` stores replacement text\r\n  - Description: `IncrementalEdit` used to store the range that was replaced and the length of the replacement but not the replacement bytes by itself. `IncrementalEdit` now has a `replacement` property that contains the replacement bytes.\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2527\r\n\r\n- Type specifiers\r\n  - Description: `AttributedTypeSyntax` can now contain multiple specifiers and these types are used to model the list of specifiers. Additionally, type specifiers can now contain arguments, like `borrow(data)`. To facilitate this, the following new types were introduces: `LifetimeSpecifierArgumentListSyntax`, `LifetimeSpecifierArgumentSyntax`, `LifetimeSpecifierArgumentsSyntax`, `LifetimeTypeSpecifierSyntax`, `SimpleTypeSpecifierSyntax`, `TypeSpecifierListSyntax`\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2433\r\n\r\n- `DeclGroupSyntax.introducer`\r\n  - Description: The `DeclGroupSyntax` trait has an extra `introducer` property, ie. the keyword that introduces the declaration.\r\n  - Issue: https://github.com/swiftlang/sourcekit-lsp/issues/2535\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2539\r\n\r\n- `ExprSyntax.interpretedAsVersionTuple`\r\n  - Description: With the change to parse `#if canImport(MyModule, _version: 1.2.3)` as a function call instead of a dedicated syntax node, `1.2.3` natively gets parsed as a member access `3` to the `1.2` float literal. This property allows the reinterpretation of such an expression as a version tuple.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2025\r\n\r\n- `SyntaxProtocol.node(at:)` \r\n  - Description: Given a `SyntaxIdentifier`, returns the `Syntax` node with that identifier\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2594\r\n\r\n- `SyntaxIdentifier.IndexInTree`\r\n  - Description: Uniquely identifies a syntax node within a tree. This is similar to ``SyntaxIdentifier`` but does not store the root ID of the tree. It can thus be transferred across trees that are structurally equivalent, for example two copies of the same tree that live in different processes. The only public functions on this type are `toOpaque` and `init(fromOpaque:)`, which allow serialization of the `IndexInTree`.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2594\r\n  \r\n- `SyntaxIdentifier` conformance to `Comparable`:\r\n  - Description: A `SyntaxIdentifier` compares less than another `SyntaxIdentifier` if the node at that identifier occurs first during a depth-first traversal of the tree.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2594\r\n\r\n- `SyntaxIdentifier.indexInTree` and `SyntaxIdentifier.fromIndexInTree` \r\n  - Description: `SyntaxIdentifier.indexInTree` allows the retrieval of a `SyntaxIdentifier` that identifies the syntax node independent of the syntax tree. `SyntaxIdentifier.fromIndexInTree` allows the creation for a `SyntaxIdentifier` from a tree-agnostic `SyntaxIdentifier.IndexInTree` and the tree's root node.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2594\r\n\r\n- `SwiftSyntaxMacrosGenericTestSupport`\r\n  - Description: A version of the `SwiftSyntaxMacrosTestSupport` module that doesn't depend on `Foundation` or `XCTest` and can thus be used to write macro tests using `swift-testing`. Since swift-syntax can't depend on swift-testing (which would incur a circular dependency since swift-testing depends on swift-syntax), users need to manually specify a failure handler like the following, that fails the swift-testing test: `Issue.record(\"\\($0.message)\", fileID: $0.location.fileID, filePath: $0.location.filePath, line: $0.location.line, column: $0.location.column)`\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2647\r\n\r\n- `TokenSyntax.identifier`\r\n  - Description: Adds an `identifier` property to `TokenSyntax` which returns a canonicalized representation of an identifier that strips away backticks.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2576\r\n\r\n## Deprecations\r\n\r\n- Child Choice Node Casts\r\n  - Description: `is`, `as`, and `cast` methods for types not contained in the choice node are marked as deprecated. The deprecated methods will emit a warning, indicating that the cast will always fail.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/swiftlang/swift-syntax/pull/2184\r\n  - Migration steps: Remove the `is`, `as` or `cast` methods because they will always fail.\r\n\r\n- `IncrementalParseTransition`:\r\n  - Description: The initializer `IncrementalParseTransition.init(previousTree:edits:lookaheadRanges:reusedNodeCallback:)` is marked as deprecated. Use `IncrementalParseTransition.init(previousIncrementalParseResult:edits:reusedNodeCallback:)` instead.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2267\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2272\r\n  - Migration steps: Call `IncrementalParseTransition.init(previousIncrementalParseResult:edits:reusedNodeCallback:)` instead.\r\n\r\n- `MacroExpansion{Error|Warning|FixIt}Message` moved to the `SwiftSyntaxMacros` module\r\n  - Description: Move the `MacroExpansion{Error|Warning|FixIt}Message` types from the `SwiftSyntaxMacroExpansion` module to `SwiftSyntaxMacros`. Deprecated typealiases in `SwiftSyntaxMacroExpansion` forward to `SwiftSyntaxMacros`.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2338\r\n  - Notes: The expansion diagnostic messages were defined in `SwiftSyntaxMacroExpansion`, which is intended as an implementation detail of the plugin server and should not need to be imported by macros.\r\n\r\n- `EditorPlaceholderDeclSyntax` and `EditorPlaceholderExprSyntax`:\r\n  - Description: `EditorPlaceholderDeclSyntax` and `EditorPlaceholderExprSyntax` are now deprecated and placeholders are instead parsed as identifiers within a `MissingDeclSyntax` or `DeclReferenceExprSyntax`.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2237\r\n\r\n- `AttributedTypeSyntax.specifier` has renamed to `specifiers` and changed to be a collection\r\n  - Description: Types can have multiple specifiers now and the syntax tree has been modified to reflect that.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2433\r\n\r\n- ` CanImportExprSyntax` and `CanImportVersionInfoSyntax`\r\n  - Description: Instead of parsing `canImport` inside `#if` directives as a special expression node, parse it as a functionc call expression. This is in-line with how the `swift(>=6.0)` and `compiler(>=6.0)` directives are parsed.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2025\r\n\r\n## API-Incompatible Changes\r\n\r\n- `MacroDefinition` used for expanding macros:\r\n  - Description: The `MacroDefinition/expansion` enum case used to have two values (`(MacroExpansionExprSyntax, replacements: [Replacement])`), has now gained another value in order to support generic argument replacements in macro expansions: `(MacroExpansionExprSyntax, replacements: [Replacement], genericReplacements: [GenericArgumentReplacement])`\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2450\r\n  - Migration steps: Code which exhaustively checked over the enum should be changed to `case .expansion(let node, let replacements, let genericReplacements):`. Creating the `.extension` gained a compatibility shim, retaining the previous syntax source compatible (`return .expansion(node, replacements: [])`).\r\n\r\n- Effect specifiers:\r\n  - Description: The `unexpectedAfterThrowsSpecifier` node of the various effect specifiers has been removed.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2219\r\n  - Migration steps: Check `unexpectedBetweenThrowsSpecifierAndThrownError` and `unexpectedAfterThrownError` instead.\r\n\r\n- `SyntaxKind` removed conformance to `CaseIterable`\r\n  - Description: `SyntaxKind` no longer conforms to `CaseIterable` since there is no good use case to iterate over all syntax kinds.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2292\r\n  - Migration steps: Exhaustively check all the syntax nodes that your program supports. There should be no use case to iterate over all cases in `SyntaxKind`.\r\n\r\n- `IntegerLiteralExprSyntax.Radix` removed conformance to `CaseIterable`\r\n  - Description: `IntegerLiteralExprSyntax.Radix` no longer conforms to `CaseIterable` since there is no good use case to iterate over all radix kinds.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2292\r\n  - Migration steps: There should be no use case to iterate over all cases in `IntegerLiteralExprSyntax.Radix`.\r\n\r\n- `Parser.parseIncrementally(source:parseTransition:)` and `Parser.parseIncrementally(source:maximumNestingLevel:parseTransition:)`:\r\n  - Description: The default versions of `Parser.parseIncrementally` return a `IncrementalParseResult` instead of a tuple. Access to the struct should be compatible with the tuple in almost all cases unless the tuple is stored into a variable and then destructed or passed to a function that expects a tuple.\r\n  - Issue: https://github.com/swiftlang/swift-syntax/issues/2267\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2272\r\n  - Migration steps: If necessary, change type annotations from the tuple to the `IncrementalParseResult` type.\r\n\r\n- `SyntaxClassification` gained a new case: `argumentLabel`\r\n  - The new classification case covers the first names of parameters in function-like declarations and the label of arguments in function-like calls.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2375\r\n  - Migration steps: In exhaustive switches over `SyntaxClassification`, cover the new case.\r\n\r\n- `SyntaxEnum` and `SyntaxKind` gained new cases: `throwsClause`\r\n  - The new cases cover the newly introduced `ThrowsClauseSyntax`\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2379\r\n  - Migration steps: In exhaustive switches over `SyntaxEnum` and `SyntaxKind`, cover the new case.\r\n\r\n- `MacroExpansionContext` now requires a property `lexicalContext`:\r\n  - Description: The new property provides the lexical context in which the macro is expanded, and has several paired API changes. Types that conform to `MacroExpansionContext` will need to implement this property. Additionally, the `HostToPluginMessage` cases `expandFreestandingMacro` and `expandAttachedMacro` now include an optional `lexicalContext`. Finally, the `SyntaxProtocol.expand(macros:in:indentationWidth:)` syntactic expansion operation has been deprecated in favor of a new version `expand(macros:contextGenerator:indentationWidth:)` that takes a function produces a new macro expansion context for each expansion.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/1554\r\n  - Migration steps: Add the new property `lexicalContext` to any `MacroExpansionContext`-conforming types. If implementing the host-to-plugin message protocol, add support for `lexicalContext`. For macro expansion operations going through `SyntaxProtocol.expand`, provide a context generator that creates a fresh context including the lexical context.\r\n\r\n- `TriviaPiece.isBackslash` in `SwiftParserDiagnostics` removed\r\n  - Description: `TriviaPiece.isBackslash` was not intended to be public API.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2531\r\n  - Migration steps: Use `if case .backslash = triviaPiece` instead\r\n\r\n- All symbols in `SwiftCompilerPluginMessageHandling` are now SPI\r\n  - Description: This module is only intended to be used from some internal components. Any other modules should not use them directly.\r\n  - Pull request: https://github.com/swiftlang/swift-syntax/pull/2489\r\n  - Migration steps: Stop using this module.\r\n","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/175019078/reactions","total_count":19,"+1":0,"-1":0,"laugh":0,"hooray":18,"confused":0,"heart":1,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/173746730","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/173746730/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/173746730/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/600.0.0-prerelease-2024-09-04","id":173746730,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4KWyoq","tag_name":"600.0.0-prerelease-2024-09-04","target_commitish":"main","name":"600.0.0-prerelease-2024-09-04","draft":false,"prerelease":true,"created_at":"2024-08-12T21:52:03Z","published_at":"2024-09-05T23:39:45Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/600.0.0-prerelease-2024-09-04","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/600.0.0-prerelease-2024-09-04","body":"","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/173746730/reactions","total_count":10,"+1":10,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/170275473","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/170275473/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/170275473/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/600.0.0-prerelease-2024-08-14","id":170275473,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4KJjKR","tag_name":"600.0.0-prerelease-2024-08-14","target_commitish":"main","name":"600.0.0-prerelease-2024-08-14","draft":false,"prerelease":true,"created_at":"2024-08-12T21:52:03Z","published_at":"2024-08-15T01:16:51Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/600.0.0-prerelease-2024-08-14","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/600.0.0-prerelease-2024-08-14","body":"","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/170275473/reactions","total_count":10,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":4,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/168353934","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/168353934/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/168353934/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/510.0.3","id":168353934,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4KCOCO","tag_name":"510.0.3","target_commitish":"main","name":"510.0.3","draft":false,"prerelease":false,"created_at":"2024-07-30T22:33:05Z","published_at":"2024-08-01T23:45:40Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/510.0.3","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/510.0.3","body":"Compared to 510.0.2 improves swift-syntax’s ability to build using Bazel.\r\n\r\nIt also contains the following changes from [510.0.0](https://github.com/apple/swift-syntax/releases/tag/510.0.0).\r\n\r\n## New APIs\r\n\r\n- `SyntaxStringInterpolation.appendInterpolation(_: (some SyntaxProtocol)?)`\r\n  - Description: Allows optional syntax nodes to be used inside string interpolation of syntax nodes. If the node is `nil`, nothing will get added to the string interpolation.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2085\r\n- `SyntaxCollection.index(at:)`\r\n  - Description: Returns the index of the n-th element in a `SyntaxCollection`. This computation is in O(n) and `SyntaxCollection` is not subscriptable by an integer.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2014\r\n- Convenience initializer `ClosureCaptureSyntax.init()`\r\n  - Description: Provides a convenience initializer for `ClosureCaptureSyntax` that takes a concrete `name` argument and automatically adds `equal = TokenSyntax.equalToken()` to it.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/1984\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2127\r\n- Convenience initializer `EnumCaseParameterSyntax.init()`\r\n  - Description: Provides a convenience initializer for `EnumCaseParameterSyntax` that takes a concrete `firstName` value and adds `colon = TokenSyntax.colonToken()` automatically to it.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/1984\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2112\r\n\r\n- `DiagnosticSeverity` and `PluginMessage.Diagnostic.Severity` now have new case named `remark`\r\n  - Description: Remarks are used by the Swift compiler and other tools to describe some aspect of translation that doesn't reflect correctness, but may be useful for the user. Remarks have been added to the diagnostic severity enums to align with the Swift compiler.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2143\r\n\r\n## Deprecations\r\n\r\n- Leaf Node Casts\r\n  - Description: Syntax nodes that do not act as base nodes for other syntax types have the casting methods marked as deprecated. This prevents unsafe type-casting by issuing deprecation warnings for methods that will always result in failed casts.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- Same-Type Casts \r\n  - Description: `is`, `as`, and `cast` overloads on `SyntaxProtocol` with same-type conversions are marked as deprecated. The deprecated methods emit a warning indicating the cast will always succeed.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- Base Node Casts\r\n  - Description: `is`, `as`, and `cast` methods on base node protocols with base-type conversions are marked as deprecated. The deprecated methods emit a warning that informs the developer that the cast will always succeed and should be done using the base node's initializer.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- `WildcardPatternSyntax.typeAnnotation`\r\n  - Description: `typeAnnotation` on `WildcardPatternSyntax` was a mistake. Use `typeAnnotation` properties on the outer constructs instead. E.g. `PatternBindingListSyntax.typeAnnotation`\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2393\r\n\r\n## API-Incompatible Changes\r\n\r\n- `NoteMessage.fixItID` renamed to `noteID`\r\n  - Description: This was an error that it was named `fixItID` and should have been named `noteID` instead. Accesses to `fixItID` are deprecated and forward to `noteID`. Any types that conform `NoteMessage` it will need to be updated to provide a `noteID` instead of a `fixItID`.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2261\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2264\r\n\r\n- `DiagnosticSpec.highlight` replaced by `highlights`\r\n  - Description: The use of a single string `highlight` prevented users from asserting that a macro highlighted exactly the expected set of syntax nodes. Use of `DiagnosticSpec.init(...highlight:...)` is deprecated and forwards to `DiagnosticSpec.init(...highlights:...)`. Migrating from `highlight` to `highlights` is straightforward; any uses of `DiagnosticSpec.init` which do not specify a `highlight` do not need to change, otherwise:\r\n    - If the diagnostic highlights a single node, the `highlight` string should be replaced with a single element array containing the same string without any trailing trivia, e.g., `highlight: \"let \"` -> `highlights: [\"let\"]`.\r\n    - If the diagnostic highlights multiple nodes, the `highlight` string should be replaced with an array containing an element for each highlighted node, e.g., `highlight: \"struct {}\"` -> `highlights: [\"struct\", \"{}\"]`.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2213\r\n","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/168353934/reactions","total_count":13,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":3,"rocket":5,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/167020225","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/167020225/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/167020225/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/600.0.0-prerelease-2024-07-24","id":167020225,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4J9IbB","tag_name":"600.0.0-prerelease-2024-07-24","target_commitish":"main","name":"600.0.0-prerelease-2024-07-24","draft":false,"prerelease":true,"created_at":"2024-07-24T20:12:50Z","published_at":"2024-07-24T22:11:13Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/600.0.0-prerelease-2024-07-24","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/600.0.0-prerelease-2024-07-24","body":"","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/167020225/reactions","total_count":11,"+1":11,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/161162504","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/161162504/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/161162504/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/600.0.0-prerelease-2024-06-12","id":161162504,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4JmyUI","tag_name":"600.0.0-prerelease-2024-06-12","target_commitish":"main","name":"600.0.0-prerelease-2024-06-12","draft":false,"prerelease":true,"created_at":"2024-06-06T20:06:30Z","published_at":"2024-06-18T20:59:40Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/600.0.0-prerelease-2024-06-12","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/600.0.0-prerelease-2024-06-12","body":"","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/161162504/reactions","total_count":16,"+1":0,"-1":0,"laugh":0,"hooray":6,"confused":0,"heart":3,"rocket":7,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/154619343","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/154619343/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/154619343/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/510.0.2","id":154619343,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4JN03P","tag_name":"510.0.2","target_commitish":"main","name":"510.0.2","draft":false,"prerelease":false,"created_at":"2024-05-07T16:02:05Z","published_at":"2024-05-07T16:24:18Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/510.0.2","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/510.0.2","body":"Compared to 510.0.1 this release fixes compilation warnings about retroactive conformances when building swift-syntax with a Swift 6 compiler.\r\n\r\nIt also contains the following changes from [510.0.0](https://github.com/apple/swift-syntax/releases/tag/510.0.0).\r\n\r\n## New APIs\r\n\r\n- `SyntaxStringInterpolation.appendInterpolation(_: (some SyntaxProtocol)?)`\r\n  - Description: Allows optional syntax nodes to be used inside string interpolation of syntax nodes. If the node is `nil`, nothing will get added to the string interpolation.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2085\r\n- `SyntaxCollection.index(at:)`\r\n  - Description: Returns the index of the n-th element in a `SyntaxCollection`. This computation is in O(n) and `SyntaxCollection` is not subscriptable by an integer.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2014\r\n- Convenience initializer `ClosureCaptureSyntax.init()`\r\n  - Description: Provides a convenience initializer for `ClosureCaptureSyntax` that takes a concrete `name` argument and automatically adds `equal = TokenSyntax.equalToken()` to it.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/1984\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2127\r\n- Convenience initializer `EnumCaseParameterSyntax.init()`\r\n  - Description: Provides a convenience initializer for `EnumCaseParameterSyntax` that takes a concrete `firstName` value and adds `colon = TokenSyntax.colonToken()` automatically to it.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/1984\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2112\r\n\r\n- `DiagnosticSeverity` and `PluginMessage.Diagnostic.Severity` now have new case named `remark`\r\n  - Description: Remarks are used by the Swift compiler and other tools to describe some aspect of translation that doesn't reflect correctness, but may be useful for the user. Remarks have been added to the diagnostic severity enums to align with the Swift compiler.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2143\r\n\r\n## Deprecations\r\n\r\n- Leaf Node Casts\r\n  - Description: Syntax nodes that do not act as base nodes for other syntax types have the casting methods marked as deprecated. This prevents unsafe type-casting by issuing deprecation warnings for methods that will always result in failed casts.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- Same-Type Casts \r\n  - Description: `is`, `as`, and `cast` overloads on `SyntaxProtocol` with same-type conversions are marked as deprecated. The deprecated methods emit a warning indicating the cast will always succeed.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- Base Node Casts\r\n  - Description: `is`, `as`, and `cast` methods on base node protocols with base-type conversions are marked as deprecated. The deprecated methods emit a warning that informs the developer that the cast will always succeed and should be done using the base node's initializer.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- `WildcardPatternSyntax.typeAnnotation`\r\n  - Description: `typeAnnotation` on `WildcardPatternSyntax` was a mistake. Use `typeAnnotation` properties on the outer constructs instead. E.g. `PatternBindingListSyntax.typeAnnotation`\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2393\r\n\r\n## API-Incompatible Changes\r\n\r\n- `NoteMessage.fixItID` renamed to `noteID`\r\n  - Description: This was an error that it was named `fixItID` and should have been named `noteID` instead. Accesses to `fixItID` are deprecated and forward to `noteID`. Any types that conform `NoteMessage` it will need to be updated to provide a `noteID` instead of a `fixItID`.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2261\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2264\r\n\r\n- `DiagnosticSpec.highlight` replaced by `highlights`\r\n  - Description: The use of a single string `highlight` prevented users from asserting that a macro highlighted exactly the expected set of syntax nodes. Use of `DiagnosticSpec.init(...highlight:...)` is deprecated and forwards to `DiagnosticSpec.init(...highlights:...)`. Migrating from `highlight` to `highlights` is straightforward; any uses of `DiagnosticSpec.init` which do not specify a `highlight` do not need to change, otherwise:\r\n    - If the diagnostic highlights a single node, the `highlight` string should be replaced with a single element array containing the same string without any trailing trivia, e.g., `highlight: \"let \"` -> `highlights: [\"let\"]`.\r\n    - If the diagnostic highlights multiple nodes, the `highlight` string should be replaced with an array containing an element for each highlighted node, e.g., `highlight: \"struct {}\"` -> `highlights: [\"struct\", \"{}\"]`.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2213\r\n","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/154619343/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/145577190","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/145577190/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/145577190/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/510.0.1","id":145577190,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4IrVTm","tag_name":"510.0.1","target_commitish":"main","name":"510.0.1","draft":false,"prerelease":false,"created_at":"2024-03-08T23:45:17Z","published_at":"2024-03-09T00:15:33Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/510.0.1","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/510.0.1","body":"Compared to 510.0.0 this fixes a possible misaligned memory access.\r\n\r\nIt also contains the following changes from [510.0.0](https://github.com/apple/swift-syntax/releases/tag/510.0.0).\r\n\r\n## New APIs\r\n\r\n- `SyntaxStringInterpolation.appendInterpolation(_: (some SyntaxProtocol)?)`\r\n  - Description: Allows optional syntax nodes to be used inside string interpolation of syntax nodes. If the node is `nil`, nothing will get added to the string interpolation.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2085\r\n- `SyntaxCollection.index(at:)`\r\n  - Description: Returns the index of the n-th element in a `SyntaxCollection`. This computation is in O(n) and `SyntaxCollection` is not subscriptable by an integer.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2014\r\n- Convenience initializer `ClosureCaptureSyntax.init()`\r\n  - Description: Provides a convenience initializer for `ClosureCaptureSyntax` that takes a concrete `name` argument and automatically adds `equal = TokenSyntax.equalToken()` to it.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/1984\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2127\r\n- Convenience initializer `EnumCaseParameterSyntax.init()`\r\n  - Description: Provides a convenience initializer for `EnumCaseParameterSyntax` that takes a concrete `firstName` value and adds `colon = TokenSyntax.colonToken()` automatically to it.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/1984\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2112\r\n\r\n- `DiagnosticSeverity` and `PluginMessage.Diagnostic.Severity` now have new case named `remark`\r\n  - Description: Remarks are used by the Swift compiler and other tools to describe some aspect of translation that doesn't reflect correctness, but may be useful for the user. Remarks have been added to the diagnostic severity enums to align with the Swift compiler.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2143\r\n\r\n## Deprecations\r\n\r\n- Leaf Node Casts\r\n  - Description: Syntax nodes that do not act as base nodes for other syntax types have the casting methods marked as deprecated. This prevents unsafe type-casting by issuing deprecation warnings for methods that will always result in failed casts.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- Same-Type Casts \r\n  - Description: `is`, `as`, and `cast` overloads on `SyntaxProtocol` with same-type conversions are marked as deprecated. The deprecated methods emit a warning indicating the cast will always succeed.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- Base Node Casts\r\n  - Description: `is`, `as`, and `cast` methods on base node protocols with base-type conversions are marked as deprecated. The deprecated methods emit a warning that informs the developer that the cast will always succeed and should be done using the base node's initializer.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- `WildcardPatternSyntax.typeAnnotation`\r\n  - Description: `typeAnnotation` on `WildcardPatternSyntax` was a mistake. Use `typeAnnotation` properties on the outer constructs instead. E.g. `PatternBindingListSyntax.typeAnnotation`\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2393\r\n\r\n## API-Incompatible Changes\r\n\r\n- `NoteMessage.fixItID` renamed to `noteID`\r\n  - Description: This was an error that it was named `fixItID` and should have been named `noteID` instead. Accesses to `fixItID` are deprecated and forward to `noteID`. Any types that conform `NoteMessage` it will need to be updated to provide a `noteID` instead of a `fixItID`.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2261\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2264\r\n\r\n- `DiagnosticSpec.highlight` replaced by `highlights`\r\n  - Description: The use of a single string `highlight` prevented users from asserting that a macro highlighted exactly the expected set of syntax nodes. Use of `DiagnosticSpec.init(...highlight:...)` is deprecated and forwards to `DiagnosticSpec.init(...highlights:...)`. Migrating from `highlight` to `highlights` is straightforward; any uses of `DiagnosticSpec.init` which do not specify a `highlight` do not need to change, otherwise:\r\n    - If the diagnostic highlights a single node, the `highlight` string should be replaced with a single element array containing the same string without any trailing trivia, e.g., `highlight: \"let \"` -> `highlights: [\"let\"]`.\r\n    - If the diagnostic highlights multiple nodes, the `highlight` string should be replaced with an array containing an element for each highlighted node, e.g., `highlight: \"struct {}\"` -> `highlights: [\"struct\", \"{}\"]`.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2213\r\n","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/145577190/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/145094339","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/145094339/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/145094339/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/swift-5.10-RELEASE","id":145094339,"author":{"login":"shahmishal","id":2727770,"node_id":"MDQ6VXNlcjI3Mjc3NzA=","avatar_url":"https://avatars.githubusercontent.com/u/2727770?v=4","gravatar_id":"","url":"https://api.github.com/users/shahmishal","html_url":"https://github.com/shahmishal","followers_url":"https://api.github.com/users/shahmishal/followers","following_url":"https://api.github.com/users/shahmishal/following{/other_user}","gists_url":"https://api.github.com/users/shahmishal/gists{/gist_id}","starred_url":"https://api.github.com/users/shahmishal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shahmishal/subscriptions","organizations_url":"https://api.github.com/users/shahmishal/orgs","repos_url":"https://api.github.com/users/shahmishal/repos","events_url":"https://api.github.com/users/shahmishal/events{/privacy}","received_events_url":"https://api.github.com/users/shahmishal/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4IpfbD","tag_name":"swift-5.10-RELEASE","target_commitish":"main","name":"","draft":false,"prerelease":false,"created_at":"2024-03-02T22:57:40Z","published_at":"2024-03-06T16:15:51Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/swift-5.10-RELEASE","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/swift-5.10-RELEASE","body":"","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/145094339/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":2,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/144455440","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/144455440/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/144455440/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/510.0.0","id":144455440,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4InDcQ","tag_name":"510.0.0","target_commitish":"main","name":"510.0.0","draft":false,"prerelease":false,"created_at":"2024-02-14T03:53:48Z","published_at":"2024-03-01T20:21:16Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/510.0.0","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/510.0.0","body":"## New APIs\r\n\r\n- `SyntaxStringInterpolation.appendInterpolation(_: (some SyntaxProtocol)?)`\r\n  - Description: Allows optional syntax nodes to be used inside string interpolation of syntax nodes. If the node is `nil`, nothing will get added to the string interpolation.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2085\r\n- `SyntaxCollection.index(at:)`\r\n  - Description: Returns the index of the n-th element in a `SyntaxCollection`. This computation is in O(n) and `SyntaxCollection` is not subscriptable by an integer.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2014\r\n- Convenience initializer `ClosureCaptureSyntax.init()`\r\n  - Description: Provides a convenience initializer for `ClosureCaptureSyntax` that takes a concrete `name` argument and automatically adds `equal = TokenSyntax.equalToken()` to it.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/1984\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2127\r\n- Convenience initializer `EnumCaseParameterSyntax.init()`\r\n  - Description: Provides a convenience initializer for `EnumCaseParameterSyntax` that takes a concrete `firstName` value and adds `colon = TokenSyntax.colonToken()` automatically to it.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/1984\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2112\r\n\r\n- `DiagnosticSeverity` and `PluginMessage.Diagnostic.Severity` now have new case named `remark`\r\n  - Description: Remarks are used by the Swift compiler and other tools to describe some aspect of translation that doesn't reflect correctness, but may be useful for the user. Remarks have been added to the diagnostic severity enums to align with the Swift compiler.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2143\r\n\r\n## Deprecations\r\n\r\n- Leaf Node Casts\r\n  - Description: Syntax nodes that do not act as base nodes for other syntax types have the casting methods marked as deprecated. This prevents unsafe type-casting by issuing deprecation warnings for methods that will always result in failed casts.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- Same-Type Casts \r\n  - Description: `is`, `as`, and `cast` overloads on `SyntaxProtocol` with same-type conversions are marked as deprecated. The deprecated methods emit a warning indicating the cast will always succeed.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- Base Node Casts\r\n  - Description: `is`, `as`, and `cast` methods on base node protocols with base-type conversions are marked as deprecated. The deprecated methods emit a warning that informs the developer that the cast will always succeed and should be done using the base node's initializer.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2092\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2108\r\n\r\n- `WildcardPatternSyntax.typeAnnotation`\r\n  - Description: `typeAnnotation` on `WildcardPatternSyntax` was a mistake. Use `typeAnnotation` properties on the outer constructs instead. E.g. `PatternBindingListSyntax.typeAnnotation`\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2393\r\n\r\n## API-Incompatible Changes\r\n\r\n- `NoteMessage.fixItID` renamed to `noteID`\r\n  - Description: This was an error that it was named `fixItID` and should have been named `noteID` instead. Accesses to `fixItID` are deprecated and forward to `noteID`. Any types that conform `NoteMessage` it will need to be updated to provide a `noteID` instead of a `fixItID`.\r\n  - Issue: https://github.com/apple/swift-syntax/issues/2261\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2264\r\n\r\n- `DiagnosticSpec.highlight` replaced by `highlights`\r\n  - Description: The use of a single string `highlight` prevented users from asserting that a macro highlighted exactly the expected set of syntax nodes. Use of `DiagnosticSpec.init(...highlight:...)` is deprecated and forwards to `DiagnosticSpec.init(...highlights:...)`. Migrating from `highlight` to `highlights` is straightforward; any uses of `DiagnosticSpec.init` which do not specify a `highlight` do not need to change, otherwise:\r\n    - If the diagnostic highlights a single node, the `highlight` string should be replaced with a single element array containing the same string without any trailing trivia, e.g., `highlight: \"let \"` -> `highlights: [\"let\"]`.\r\n    - If the diagnostic highlights multiple nodes, the `highlight` string should be replaced with an array containing an element for each highlighted node, e.g., `highlight: \"struct {}\"` -> `highlights: [\"struct\", \"{}\"]`.\r\n  - Pull Request: https://github.com/apple/swift-syntax/pull/2213\r\n","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/144455440/reactions","total_count":14,"+1":2,"-1":0,"laugh":0,"hooray":2,"confused":0,"heart":10,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/138073804","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/138073804/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/138073804/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/509.1.1","id":138073804,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4IOtbM","tag_name":"509.1.1","target_commitish":"main","name":"509.1.1","draft":false,"prerelease":false,"created_at":"2024-01-23T01:16:23Z","published_at":"2024-01-23T01:41:45Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/509.1.1","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/509.1.1","body":"Fixes an issue that caused the `swift-parser-cli` target to not build on visionOS.","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/138073804/reactions","total_count":5,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":5,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/136262631","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/136262631/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/136262631/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/509.1.0","id":136262631,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4IHzPn","tag_name":"509.1.0","target_commitish":"main","name":"509.1.0","draft":false,"prerelease":false,"created_at":"2024-01-09T00:18:49Z","published_at":"2024-01-09T01:55:46Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/509.1.0","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/509.1.0","body":"- Supports [SE-0407 Member Macro Conformances](https://github.com/apple/swift-evolution/blob/main/proposals/0407-member-macro-conformances.md) by adding a new defaulted version of the `expansion` function in `MemberMacro` that receives the `conformingTo` parameter\r\n- Fixes a formatting bug not adding a space between a string/regex literal and a period (https://github.com/apple/swift-syntax/issues/2344)","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/136262631/reactions","total_count":11,"+1":8,"-1":0,"laugh":0,"hooray":3,"confused":0,"heart":0,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/127451125","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/127451125/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/127451125/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/509.0.2","id":127451125,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4HmL_1","tag_name":"509.0.2","target_commitish":"main","name":"509.0.2","draft":false,"prerelease":false,"created_at":"2023-10-31T23:07:18Z","published_at":"2023-11-01T00:05:00Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/509.0.2","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/509.0.2","body":"Fixes a possible misaligned memory access","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/127451125/reactions","total_count":8,"+1":4,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":2,"rocket":1,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/126080358","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/126080358/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/126080358/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/509.0.1","id":126080358,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4Hg9Vm","tag_name":"509.0.1","target_commitish":"main","name":"509.0.1","draft":false,"prerelease":false,"created_at":"2023-10-17T00:22:54Z","published_at":"2023-10-20T22:05:16Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/509.0.1","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/509.0.1","body":"Fixes the following issues:\r\n- `Foo<T>.bar` should not have whitespace added between `>` and `.` (https://github.com/apple/swift-syntax/pull/2224)\r\n- Missing dependency declaration between `SwiftSyntaxMacroExpansion` and `SwiftOperators` (https://github.com/apple/swift-syntax/pull/2224)","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/126080358/reactions","total_count":6,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":6,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/121052304","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/121052304/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/121052304/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/509.0.0","id":121052304,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4HNxyQ","tag_name":"509.0.0","target_commitish":"main","name":"509.0.0","draft":false,"prerelease":false,"created_at":"2023-09-13T23:36:53Z","published_at":"2023-09-14T00:02:31Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/509.0.0","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/509.0.0","body":"This is the 509.0.0 release of SwiftSyntax, aligned with Swift 5.9.\r\n\r\nTo use this snapshot add the following dependency to your Package.swift:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", from: \"509.0.0\")\r\n```","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/121052304/reactions","total_count":19,"+1":0,"-1":0,"laugh":0,"hooray":16,"confused":0,"heart":2,"rocket":1,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/103052263","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/103052263/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/103052263/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/508.0.1","id":103052263,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4GJHPn","tag_name":"508.0.1","target_commitish":"main","name":"508.0.1","draft":false,"prerelease":false,"created_at":"2023-05-15T19:05:18Z","published_at":"2023-05-15T19:13:03Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/508.0.1","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/508.0.1","body":"This release of SwiftSyntax is aligned with the release of Swift 5.8.\r\n\r\nCompared to 508.0.0, this release relaxes the version requirement for `swift-argument-parser`, resulting in fewer version conflicts for users of SwiftSyntax."},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/97892977","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/97892977/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/97892977/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/508.0.0","id":97892977,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4F1bpx","tag_name":"508.0.0","target_commitish":"main","name":"508.0.0","draft":false,"prerelease":false,"created_at":"2023-02-20T07:18:37Z","published_at":"2023-04-03T18:25:34Z","assets":[],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/508.0.0","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/508.0.0","body":"This is the 508.0.0 release of SwiftSyntax, aligned with the release of Swift 5.8.\r\n\r\nTo use this snapshot add the following dependency to your Package.swift:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", from: \"508.0.0\")\r\n```","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/97892977/reactions","total_count":9,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":9,"rocket":0,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/79043230","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/79043230/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/79043230/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/0.50700.1","id":79043230,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4Ethqe","tag_name":"0.50700.1","target_commitish":"main","name":"0.50700.1","draft":false,"prerelease":false,"created_at":"2022-10-05T10:24:15Z","published_at":"2022-10-05T10:32:58Z","assets":[{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/assets/80028061","id":80028061,"node_id":"RA_kwDOCIc4qs4ExSGd","name":"_InternalSwiftSyntaxParser.xcframework.zip","label":null,"uploader":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/zip","state":"uploaded","size":20720765,"download_count":158637,"created_at":"2022-10-05T10:32:44Z","updated_at":"2022-10-05T10:32:46Z","browser_download_url":"https://github.com/swiftlang/swift-syntax/releases/download/0.50700.1/_InternalSwiftSyntaxParser.xcframework.zip"}],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/0.50700.1","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/0.50700.1","body":"This is the 0.50700.1 release of SwiftSyntax that vends the parser library (`_InternalSwiftSyntaxParser.dylib`) as a binary framework dependency on macOS.\r\n\r\nTo use this snapshot add the following dependency to your Package.swift:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", branch: \"0.50700.1\")\r\n```\r\n\r\nOr, if using a swift-tools-version ≤ 5.4:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", .branch(\"0.50700.1\"))\r\n```\r\n\r\n⚠️ Important: This release of SwiftSyntax is incompatible with the parser library included in the swift-5.7-RELEASE toolchain. On Linux, download a recent [swift-5.7-DEVELOPMENT-SNAPSHOT](https://www.swift.org/download/#swift-57-development) toolchain to use this SwiftSyntax version. On macOS, this version of SwiftSyntax is compatible with any recent Swift or Xcode toolchain because it includes the parser library as a binary dependency. ","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/79043230/reactions","total_count":5,"+1":1,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":3,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/77641214","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/77641214/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/77641214/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/0.50700.0","id":77641214,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4EoLX-","tag_name":"0.50700.0","target_commitish":"main","name":"0.50700.0","draft":false,"prerelease":false,"created_at":"2022-09-20T10:36:19Z","published_at":"2022-09-20T10:42:29Z","assets":[{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/assets/78436835","id":78436835,"node_id":"RA_kwDOCIc4qs4ErNnj","name":"_InternalSwiftSyntaxParser.xcframework.zip","label":null,"uploader":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/zip","state":"uploaded","size":20720212,"download_count":51098,"created_at":"2022-09-20T10:42:16Z","updated_at":"2022-09-20T10:42:18Z","browser_download_url":"https://github.com/swiftlang/swift-syntax/releases/download/0.50700.0/_InternalSwiftSyntaxParser.xcframework.zip"}],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/0.50700.0","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/0.50700.0","body":"This is the 0.50700.0 release of SwiftSyntax that vends the parser library (`_InternalSwiftSyntaxParser.dylib`) as a binary framework dependency on macOS.\r\n\r\nTo use this snapshot add the following dependency to your Package.swift:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", branch: \"0.50700.0\")\r\n```\r\n\r\nOr, if using a swift-tools-version ≤ 5.4:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", .branch(\"0.50700.0\"))\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/77641214/reactions","total_count":8,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":6,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/62168028","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/62168028/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/62168028/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/0.50600.1","id":62168028,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4DtJvc","tag_name":"0.50600.1","target_commitish":"main","name":"0.50600.1","draft":false,"prerelease":false,"created_at":"2022-03-18T08:13:51Z","published_at":"2022-03-18T08:22:47Z","assets":[{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/assets/59850224","id":59850224,"node_id":"RA_kwDOCIc4qs4DkT3w","name":"_InternalSwiftSyntaxParser.xcframework.zip","label":null,"uploader":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/zip","state":"uploaded","size":20579159,"download_count":680812,"created_at":"2022-03-18T08:22:57Z","updated_at":"2022-03-18T08:22:58Z","browser_download_url":"https://github.com/swiftlang/swift-syntax/releases/download/0.50600.1/_InternalSwiftSyntaxParser.xcframework.zip"}],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/0.50600.1","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/0.50600.1","body":"This is the 0.50600.1 release of SwiftSyntax that vends the parser library (`_InternalSwiftSyntaxParser.dylib`) as a binary framework dependency on macOS.\r\n\r\nTo use this snapshot add the following dependency to your Package.swift:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", branch: \"0.50600.1\")\r\n```\r\n\r\nOr, if using a swift-tools-version ≤ 5.4:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", .branch(\"0.50600.1\"))\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/62168028/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":3,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/61861793","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/61861793/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/61861793/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/0.50600.0","id":61861793,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4Dr--h","tag_name":"0.50600.0","target_commitish":"main","name":"0.50600.0","draft":false,"prerelease":false,"created_at":"2022-03-15T08:47:58Z","published_at":"2022-03-15T09:22:36Z","assets":[{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/assets/59538756","id":59538756,"node_id":"RA_kwDOCIc4qs4DjH1E","name":"_InternalSwiftSyntaxParser.xcframework.zip","label":null,"uploader":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/zip","state":"uploaded","size":20579159,"download_count":1270,"created_at":"2022-03-15T09:22:31Z","updated_at":"2022-03-15T09:22:33Z","browser_download_url":"https://github.com/swiftlang/swift-syntax/releases/download/0.50600.0/_InternalSwiftSyntaxParser.xcframework.zip"}],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/0.50600.0","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/0.50600.0","body":"This is the 0.50600.0 release of SwiftSyntax that vends the parser library (`_InternalSwiftSyntaxParser.dylib`) as a binary framework dependency on macOS.\r\n\r\nTo use this snapshot add the following dependency to your Package.swift:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", branch: \"0.50600.0\")\r\n```\r\n\r\nOr, if using a swift-tools-version ≤ 5.4:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", .branch(\"0.50600.0\"))\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/61861793/reactions","total_count":7,"+1":0,"-1":0,"laugh":0,"hooray":3,"confused":0,"heart":0,"rocket":4,"eyes":0}},{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/57904471","assets_url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/57904471/assets","upload_url":"https://uploads.github.com/repos/swiftlang/swift-syntax/releases/57904471/assets{?name,label}","html_url":"https://github.com/swiftlang/swift-syntax/releases/tag/0.50600.0-SNAPSHOT-2022-01-24","id":57904471,"author":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"node_id":"RE_kwDOCIc4qs4Dc41X","tag_name":"0.50600.0-SNAPSHOT-2022-01-24","target_commitish":"main","name":"0.50600.0-SNAPSHOT-2022-01-24","draft":false,"prerelease":true,"created_at":"2022-01-25T09:35:01Z","published_at":"2022-01-25T09:54:29Z","assets":[{"url":"https://api.github.com/repos/swiftlang/swift-syntax/releases/assets/54894637","id":54894637,"node_id":"RA_kwDOCIc4qs4DRaAt","name":"_InternalSwiftSyntaxParser.xcframework.zip","label":null,"uploader":{"login":"ahoppen","id":4062178,"node_id":"MDQ6VXNlcjQwNjIxNzg=","avatar_url":"https://avatars.githubusercontent.com/u/4062178?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoppen","html_url":"https://github.com/ahoppen","followers_url":"https://api.github.com/users/ahoppen/followers","following_url":"https://api.github.com/users/ahoppen/following{/other_user}","gists_url":"https://api.github.com/users/ahoppen/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoppen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoppen/subscriptions","organizations_url":"https://api.github.com/users/ahoppen/orgs","repos_url":"https://api.github.com/users/ahoppen/repos","events_url":"https://api.github.com/users/ahoppen/events{/privacy}","received_events_url":"https://api.github.com/users/ahoppen/received_events","type":"User","user_view_type":"public","site_admin":false},"content_type":"application/zip","state":"uploaded","size":20569579,"download_count":225,"created_at":"2022-01-25T09:53:23Z","updated_at":"2022-01-25T09:53:25Z","browser_download_url":"https://github.com/swiftlang/swift-syntax/releases/download/0.50600.0-SNAPSHOT-2022-01-24/_InternalSwiftSyntaxParser.xcframework.zip"}],"tarball_url":"https://api.github.com/repos/swiftlang/swift-syntax/tarball/0.50600.0-SNAPSHOT-2022-01-24","zipball_url":"https://api.github.com/repos/swiftlang/swift-syntax/zipball/0.50600.0-SNAPSHOT-2022-01-24","body":"This is a development snapshot of the 0.50600.0 release of SwiftSyntax that vends the parser library (`_InternalSwiftSyntaxParser.dylib`) as a binary framework dependency on macOS.\r\n\r\nTo use this snapshot add the following dependency to your `Package.swift`:\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", branch: \"0.50600.0-SNAPSHOT-2022-01-24\")\r\n```\r\n\r\nOr, if using a swift-tools-version ≤ 5.4:\r\n\r\n```swift\r\n.package(url: \"https://github.com/apple/swift-syntax\", .branch(\"0.50600.0-SNAPSHOT-2022-01-24\"))\r\n```"}]